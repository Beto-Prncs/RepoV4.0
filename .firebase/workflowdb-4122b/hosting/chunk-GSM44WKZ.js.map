{
  "version": 3,
  "sources": ["src/app/services/auxiliar-services/config-state.service.ts", "src/app/services/auxiliar-services/config-form.service.ts", "src/app/services/auxiliar-services/config-animation.service.ts", "src/app/functionalities/manage-config/manage-config.component.ts", "src/app/functionalities/manage-config/manage-config.component.html"],
  "sourcesContent": ["/**\n * Servicio para manejar el estado de la configuración\n * Ayuda a separar la lógica de gestión de estado del componente principal\n */\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Departamento, Empresa } from '../../models/interfaces';\n\n@Injectable()\nexport class ConfigStateService {\n  // Estados compartidos\n  private loadingState = new BehaviorSubject<boolean>(false);\n  private errorState = new BehaviorSubject<string>('');\n  private successState = new BehaviorSubject<string>('');\n\n  // Observables públicos\n  public loading$ = this.loadingState.asObservable();\n  public error$ = this.errorState.asObservable();\n  public success$ = this.successState.asObservable();\n\n  // Métodos de acceso al estado\n  setLoading(isLoading: boolean): void {\n    this.loadingState.next(isLoading);\n  }\n\n  setError(message: string): void {\n    this.errorState.next(message);\n    \n    // Auto-desaparecer después de 5 segundos\n    if (message) {\n      setTimeout(() => {\n        if (this.errorState.getValue() === message) {\n          this.clearError();\n        }\n      }, 5000);\n    }\n  }\n\n  setSuccess(message: string): void {\n    this.successState.next(message);\n    \n    // Auto-desaparecer después de 3 segundos\n    if (message) {\n      setTimeout(() => {\n        if (this.successState.getValue() === message) {\n          this.clearSuccess();\n        }\n      }, 3000);\n    }\n  }\n\n  clearError(): void {\n    this.errorState.next('');\n  }\n\n  clearSuccess(): void {\n    this.successState.next('');\n  }\n\n  clearMessages(): void {\n    this.clearError();\n    this.clearSuccess();\n  }\n\n  /**\n   * Procesa una lista de departamentos para actualizar contadores\n   * @param departments Lista de departamentos\n   * @returns Número de departamentos\n   */\n  processDepartmentList(departments: Departamento[]): number {\n    return departments ? departments.length : 0;\n  }\n\n  /**\n   * Procesa una lista de empresas para actualizar contadores\n   * @param companies Lista de empresas\n   * @returns Número de empresas\n   */\n  processCompanyList(companies: Empresa[]): number {\n    return companies ? companies.length : 0;\n  }\n\n  /**\n   * Filtra una lista de departamentos basado en un término de búsqueda\n   * @param departments Lista de departamentos\n   * @param searchTerm Término de búsqueda\n   * @returns Lista filtrada de departamentos\n   */\n  filterDepartments(departments: Departamento[], searchTerm: string): Departamento[] {\n    if (!searchTerm || !departments?.length) return departments || [];\n    \n    const term = searchTerm.toLowerCase().trim();\n    \n    return departments.filter(dept => \n      dept.Nombre?.toLowerCase().includes(term) || \n      dept.IdDepartamento?.toLowerCase().includes(term)\n    );\n  }\n\n  /**\n   * Filtra una lista de empresas basado en un término de búsqueda\n   * @param companies Lista de empresas\n   * @param searchTerm Término de búsqueda\n   * @returns Lista filtrada de empresas\n   */\n  filterCompanies(companies: Empresa[], searchTerm: string): Empresa[] {\n    if (!searchTerm || !companies?.length) return companies || [];\n    \n    const term = searchTerm.toLowerCase().trim();\n    \n    return companies.filter(company => \n      company.Nombre?.toLowerCase().includes(term) || \n      company.Correo?.toLowerCase().includes(term) || \n      company.Sector?.toLowerCase().includes(term) || \n      company.IdEmpresa?.toLowerCase().includes(term)\n    );\n  }\n}", "/**\n * Servicio para manejar los formularios de configuración\n * Encapsula la creación y validación de formularios\n */\nimport { Injectable } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, ValidationErrors } from '@angular/forms';\n\n@Injectable()\nexport class ConfigFormService {\n  constructor(private fb: FormBuilder) {}\n\n  /**\n   * Crea un formulario para departamentos\n   * @returns FormGroup\n   */\n  createDepartmentForm(): FormGroup {\n    return this.fb.group({\n      name: ['', [\n        Validators.required,\n        Validators.minLength(3),\n        Validators.maxLength(100)\n      ]]\n    });\n  }\n\n  /**\n   * Crea un formulario para empresas\n   * @returns FormGroup\n   */\n  createCompanyForm(): FormGroup {\n    return this.fb.group({\n      Nombre: ['', [\n        Validators.required,\n        Validators.minLength(3),\n        Validators.maxLength(100)\n      ]],\n      Correo: ['', [\n        Validators.required,\n        Validators.email,\n        Validators.maxLength(100)\n      ]],\n      Direccion: ['', [\n        Validators.required,\n        Validators.minLength(5),\n        Validators.maxLength(200)\n      ]],\n      Sector: ['', [\n        Validators.required,\n        Validators.minLength(3),\n        Validators.maxLength(100)\n      ]]\n    });\n  }\n\n  /**\n   * Crea un formulario de búsqueda\n   * @returns FormGroup\n   */\n  createSearchForm(): FormGroup {\n    return this.fb.group({\n      term: ['', [\n        Validators.maxLength(50)\n      ]]\n    });\n  }\n\n  /**\n   * Valida un correo electrónico\n   * @param email Correo a validar\n   * @returns boolean\n   */\n  isValidEmail(email: string): boolean {\n    if (!email) return false;\n    \n    const emailPattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/;\n    return emailPattern.test(email);\n  }\n\n  /**\n   * Verifica si un campo tiene error\n   * @param form Formulario\n   * @param fieldName Nombre del campo\n   * @returns boolean\n   */\n  hasFieldError(form: FormGroup, fieldName: string): boolean {\n    if (!form) return false;\n    \n    const field = form.get(fieldName);\n    return field ? field.invalid && (field.dirty || field.touched) : false;\n  }\n\n  /**\n   * Obtiene el mensaje de error para un campo\n   * @param form Formulario\n   * @param fieldName Nombre del campo\n   * @returns string con el mensaje de error\n   */\n  getFieldErrorMessage(form: FormGroup, fieldName: string): string {\n    if (!form) return '';\n    \n    const field = form.get(fieldName);\n    if (!field || !field.errors) return '';\n    \n    const errors: ValidationErrors = field.errors;\n    \n    // Determinar el tipo de error y devolver mensaje apropiado\n    if (errors['required']) {\n      return 'Este campo es obligatorio.';\n    }\n    \n    if (errors['minlength']) {\n      return `Debe tener al menos ${errors['minlength'].requiredLength} caracteres.`;\n    }\n    \n    if (errors['maxlength']) {\n      return `No debe exceder ${errors['maxlength'].requiredLength} caracteres.`;\n    }\n    \n    if (errors['email']) {\n      return 'Debe ingresar un correo electrónico válido.';\n    }\n    \n    return 'Error de validación en el campo.';\n  }\n\n  /**\n   * Marca todos los campos de un formulario como tocados\n   * @param form Formulario\n   * Útil para mostrar errores en validación de submit\n   */\n  markAllAsTouched(form: FormGroup): void {\n    if (!form) return;\n    \n    Object.keys(form.controls).forEach(key => {\n      const control = form.get(key);\n      if (control) {\n        control.markAsTouched();\n      }\n    });\n  }\n\n  /**\n   * Restablece un formulario\n   * @param form Formulario\n   */\n  resetForm(form: FormGroup): void {\n    if (!form) return;\n    \n    form.reset();\n    \n    // Eliminar estados de error\n    Object.keys(form.controls).forEach(key => {\n      const control = form.get(key);\n      if (control) {\n        control.setErrors(null);\n      }\n    });\n  }\n}", "/**\n * Servicio para manejar animaciones y estados visuales\n * Separa la lógica de animación del componente principal\n */\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n// Tipo de estados de animación\nexport type AnimationState = \n  'idle' | \n  'loading' | \n  'saving' | \n  'deleting' | \n  'refreshing' | \n  'transitioning' | \n  'loaded' | \n  'success' | \n  'error';\n\n@Injectable()\nexport class ConfigAnimationService {\n  // Estado de animación actual\n  private animationStateSubject = new BehaviorSubject<AnimationState>('idle');\n  animationState$ = this.animationStateSubject.asObservable();\n\n  // Tiempo de duración de animaciones\n  private animationDurations = {\n    fade: 500,\n    slide: 400,\n    transition: 150,\n    refresh: 500,\n    shake: 500,\n    pulse: 2000\n  };\n\n  constructor() {}\n\n  /**\n   * Cambia el estado de animación\n   * @param state Nuevo estado\n   */\n  setState(state: AnimationState): void {\n    this.animationStateSubject.next(state);\n  }\n\n  /**\n   * Obtiene el estado actual\n   * @returns Estado actual\n   */\n  getState(): AnimationState {\n    return this.animationStateSubject.getValue();\n  }\n\n  /**\n   * Aplica un efecto de transición entre tabs\n   * @param callback Función a ejecutar después de la transición\n   */\n  applyTabTransition(callback: () => void): void {\n    this.setState('transitioning');\n    \n    setTimeout(() => {\n      callback();\n      this.setState('loaded');\n    }, this.animationDurations.transition);\n  }\n\n  /**\n   * Aplica efecto de carga\n   * @param callback Función a ejecutar para cargar datos\n   */\n  applyLoadingEffect(callback: () => Promise<void>): Promise<void> {\n    this.setState('loading');\n    \n    return callback()\n      .then(() => {\n        this.setState('loaded');\n      })\n      .catch((error) => {\n        this.setState('error');\n        throw error;\n      });\n  }\n\n  /**\n   * Aplica efecto de guardado\n   * @param callback Función para guardar datos\n   */\n  applySavingEffect(callback: () => Promise<void>): Promise<void> {\n    this.setState('saving');\n    \n    return callback()\n      .then(() => {\n        this.setState('success');\n        setTimeout(() => this.setState('idle'), 1000);\n      })\n      .catch((error) => {\n        this.setState('error');\n        setTimeout(() => this.setState('idle'), 1000);\n        throw error;\n      });\n  }\n\n  /**\n   * Aplica efecto de eliminación\n   * @param callback Función para eliminar datos\n   */\n  applyDeletingEffect(callback: () => Promise<void>): Promise<void> {\n    this.setState('deleting');\n    \n    return callback()\n      .then(() => {\n        this.setState('success');\n        setTimeout(() => this.setState('idle'), 1000);\n      })\n      .catch((error) => {\n        this.setState('error');\n        setTimeout(() => this.setState('idle'), 1000);\n        throw error;\n      });\n  }\n\n  /**\n   * Aplica efecto de actualización de datos\n   * @param callback Función para refrescar datos\n   */\n  applyRefreshEffect(callback: () => Promise<void>): Promise<void> {\n    this.setState('refreshing');\n    \n    return callback()\n      .then(() => {\n        setTimeout(() => this.setState('idle'), this.animationDurations.refresh);\n      })\n      .catch((error) => {\n        setTimeout(() => this.setState('idle'), this.animationDurations.refresh);\n        throw error;\n      });\n  }\n\n  /**\n   * Genera clases CSS basadas en el estado actual\n   * @param baseClass Clase base\n   * @returns String con clases CSS\n   */\n  getAnimationClasses(baseClass: string = ''): string {\n    const state = this.getState();\n    let classes = baseClass ? `${baseClass} ` : '';\n    \n    switch (state) {\n      case 'loading':\n        classes += 'animate-pulse';\n        break;\n      case 'saving':\n      case 'deleting':\n        classes += 'opacity-70';\n        break;\n      case 'transitioning':\n        classes += 'opacity-50 transform scale-98';\n        break;\n      case 'error':\n        classes += 'animate-shake';\n        break;\n      case 'success':\n        classes += 'animate-success';\n        break;\n      case 'refreshing':\n        classes += 'animate-spin';\n        break;\n      default:\n        break;\n    }\n    \n    return classes;\n  }\n}", "import { Component, OnInit, inject, DestroyRef, ViewChild, ElementRef } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormBuilder, FormGroup, Validators, ReactiveFormsModule } from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { BehaviorSubject, Observable, debounceTime, finalize, catchError, of, map } from 'rxjs';\n\n// Servicios\nimport { DepartmentService } from '../../services/department.service';\nimport { CompanyService } from '../../services/company.service';\nimport { AuthService } from '../../services/auth.service';\nimport { SimpleModalService } from '../../services/simple-modal.service';\nimport { take } from 'rxjs/operators';\n// Modelos\nimport { Departamento, Empresa } from '../../models/interfaces';\n\n// Servicios auxiliares (se crearán en archivos separados)\nimport { ConfigStateService } from '../../services/auxiliar-services/config-state.service';\nimport { ConfigFormService } from '../../services/auxiliar-services/config-form.service';\nimport { ConfigAnimationService } from '../../services/auxiliar-services/config-animation.service';\n@Component({\n  selector: 'app-manage-config',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, FormsModule],\n  templateUrl: './manage-config.component.html',\n  styleUrl: './manage-config.component.scss'\n})\nexport class ManageConfigComponent implements OnInit {\n  // Referencias a elementos del DOM\n  @ViewChild('departmentFormRef') departmentFormRef?: ElementRef;\n  @ViewChild('companyFormRef') companyFormRef?: ElementRef;\n\n  // Servicios inyectados\n  private departmentService: DepartmentService = inject(DepartmentService);\n  private companyService: CompanyService = inject(CompanyService);\n  private authService: AuthService = inject(AuthService);\n  private modalService: SimpleModalService = inject(SimpleModalService);\n  private fb: FormBuilder = inject(FormBuilder);\n  private router: Router = inject(Router);\n  private destroyRef: DestroyRef = inject(DestroyRef);\n  \n  // Servicios locales - se crearán estos servicios nuevos para mejor modularización\n  private stateService = new ConfigStateService();\n  private formService = new ConfigFormService(this.fb);\n  private animationService = new ConfigAnimationService();\n\n  // Estados principales - DataSource\n  departments$ = new BehaviorSubject<Departamento[]>([]);\n  companies$ = new BehaviorSubject<Empresa[]>([]);\n  filteredDepartments$: Observable<Departamento[]>;\n  filteredCompanies$: Observable<Empresa[]>;\n\n  // Estados de permisos\n  isAdmin2OrHigher = false;\n  isAdmin3 = true;\n\n  // Estados de UI\n  isLoading = false;\n  activeTab: 'departments' | 'companies' = 'departments';\n  showDepartmentForm = false;\n  showCompanyForm = false;\n  errorMessage = '';\n  successMessage = '';\n\n  // Variables de filtrado\n  departmentFilterText = '';\n  companyFilterText = '';\n\n  // Nuevas variables para mejorar la UX\n  departmentCount = 0;\n  companyCount = 0;\n  lastUpdated = new Date();\n  searchTerm = '';\n  isSearching = false;\n  animationState = 'idle';\n\n  // Variables para el modal de confirmación\n  showConfirmModal = false;\n  confirmModalTitle = '';\n  confirmModalMessage = '';\n  itemToDeleteId = '';\n  itemToDeleteName = '';\n  itemTypeToDelete: 'department' | 'company' = 'department';\n\n  // Formularios reactivos\n  departmentForm: FormGroup;\n  companyForm: FormGroup;\n  searchForm: FormGroup;\n\n  constructor() {\n    // Inicializar formularios usando el servicio de formularios\n    this.departmentForm = this.formService.createDepartmentForm();\n    this.companyForm = this.formService.createCompanyForm();\n    this.searchForm = this.formService.createSearchForm();\n\n    // Inicializar observables filtrados\n    this.filteredDepartments$ = this.createFilteredDepartmentsObservable();\n    this.filteredCompanies$ = this.createFilteredCompaniesObservable();\n  }\n\n  // Método mejorado para crear el observable de departamentos filtrados\n  private createFilteredDepartmentsObservable(): Observable<Departamento[]> {\n    return this.departments$.pipe(\n      map(departments => {\n        const filterText = this.departmentFilterText.toLowerCase().trim();\n        if (!filterText) return departments;\n        \n        return departments.filter(department =>\n          department.Nombre.toLowerCase().includes(filterText) ||\n          (department.IdDepartamento &&\n          department.IdDepartamento.toLowerCase().includes(filterText))\n        );\n      })\n    );\n  }\n\n  // Método mejorado para crear el observable de empresas filtradas\n  private createFilteredCompaniesObservable(): Observable<Empresa[]> {\n    return this.companies$.pipe(\n      map(companies => {\n        const filterText = this.companyFilterText.toLowerCase().trim();\n        if (!filterText) return companies;\n        \n        return companies.filter(company =>\n          company.Nombre.toLowerCase().includes(filterText) ||\n          (company.Correo && company.Correo.toLowerCase().includes(filterText)) ||\n          (company.Sector && company.Sector.toLowerCase().includes(filterText)) ||\n          (company.IdEmpresa && company.IdEmpresa.toLowerCase().includes(filterText))\n        );\n      })\n    );\n  }\n\n  ngOnInit() {\n    // Mostrar animación de carga\n    this.animationState = 'loading';\n    this.isLoading = true;\n    \n    // Verificar permisos\n    this.checkAdminPermissions().then(() => {\n      // Cargar datos con un pequeño retraso\n      setTimeout(() => {\n        // Primero cargamos departamentos\n        this.departmentService.getDepartments()\n          .pipe(\n            takeUntilDestroyed(this.destroyRef),\n            catchError(error => {\n              console.error('Error cargando departamentos:', error);\n              this.showError('Error al cargar departamentos');\n              return of([]);\n            })\n          )\n          .subscribe(departments => {\n            this.departments$.next(departments);\n            this.departmentCount = departments.length;\n            \n            // Luego cargamos empresas\n            this.companyService.getCompanies()\n              .pipe(\n                takeUntilDestroyed(this.destroyRef),\n                catchError(error => {\n                  console.error('Error cargando empresas:', error);\n                  this.showError('Error al cargar empresas');\n                  return of([]);\n                }),\n                finalize(() => {\n                  this.isLoading = false;\n                  this.animationState = 'loaded';\n                })\n              )\n              .subscribe(companies => {\n                this.companies$.next(companies);\n                this.companyCount = companies.length;\n                this.lastUpdated = new Date();\n              });\n          });\n        \n        // Configurar la pestaña activa\n        this.activeTab = 'departments';\n        \n        // Configurar búsqueda con debounce\n        this.searchForm.get('term')?.valueChanges\n          .pipe(\n            debounceTime(300),\n            takeUntilDestroyed(this.destroyRef)\n          )\n          .subscribe(term => {\n            this.searchTerm = term;\n            this.applyGlobalSearch(term);\n          });\n      }, 100);\n    }).catch(error => {\n      console.error('Error en la inicialización:', error);\n      this.showError('Error al inicializar el componente');\n      this.isLoading = false;\n      this.animationState = 'error';\n    });\n  }\n\n  /**\n   * Verifica los permisos del usuario actual\n   * @returns Promise<void>\n   */\n  private async checkAdminPermissions(): Promise<void> {\n    try {\n      const currentUser = await this.authService.getCurrentUser();\n      if (!currentUser) {\n        this.router.navigate(['/login']);\n        return;\n      }\n      \n      const userData = await this.authService.getUserData(currentUser.uid);\n      if (!userData || userData.Rol !== 'admin') {\n        this.showError('No tiene permisos para acceder a esta sección');\n        this.router.navigate(['/admin1']);\n        return;\n      }\n      \n      // Verificar nivel de admin\n      this.isAdmin3 = userData.NivelAdmin === '3';\n      this.isAdmin2OrHigher = userData.NivelAdmin === '2' || userData.NivelAdmin === '3';\n      \n      if (!this.isAdmin2OrHigher) {\n        this.showError('Se requiere nivel de administrador 2 o superior');\n        this.router.navigate(['/admin1']);\n      }\n    } catch (error) {\n      console.error('Error verificando permisos:', error);\n      this.showError('Error al verificar permisos de administrador');\n      this.router.navigate(['/admin1']);\n    }\n  }\n\n  /**\n   * Carga los datos iniciales\n   */\n  private loadData(): void {\n    this.isLoading = true;\n    \n    // Cargar departamentos\n    this.departmentService.getDepartments()\n      .pipe(\n        takeUntilDestroyed(this.destroyRef),\n        catchError(error => {\n          console.error('Error cargando departamentos:', error);\n          this.showError('Error al cargar departamentos');\n          return of([]);\n        }),\n        finalize(() => this.isLoading = false)\n      )\n      .subscribe(departments => {\n        this.departments$.next(departments);\n        this.departmentCount = departments.length;\n        this.lastUpdated = new Date();\n      });\n    \n    // Cargar empresas\n    this.companyService.getCompanies()\n      .pipe(\n        takeUntilDestroyed(this.destroyRef),\n        catchError(error => {\n          console.error('Error cargando empresas:', error);\n          this.showError('Error al cargar empresas');\n          return of([]);\n        })\n      )\n      .subscribe(companies => {\n        this.companies$.next(companies);\n        this.companyCount = companies.length;\n      });\n  }\n\n  /**\n   * Cambia entre pestañas con animación\n   * @param tab Pestaña a activar\n   */\n  setActiveTab(tab: 'departments' | 'companies'): void {\n    // Agregar efecto de transición\n    this.animationState = 'transitioning';\n    setTimeout(() => {\n      this.activeTab = tab;\n      this.animationState = 'loaded';\n    }, 150);\n  }\n\n  /**\n   * Cambia la visibilidad del formulario de departamentos\n   */\n  toggleDepartmentForm(): void {\n    this.showDepartmentForm = !this.showDepartmentForm;\n    if (this.showDepartmentForm) {\n      this.departmentForm.reset();\n      // Cerrar el formulario de empresas si está abierto\n      if (this.showCompanyForm) {\n        this.showCompanyForm = false;\n      }\n    }\n  }\n\n  /**\n   * Cambia la visibilidad del formulario de empresas\n   */\n  toggleCompanyForm(): void {\n    this.showCompanyForm = !this.showCompanyForm;\n    if (this.showCompanyForm) {\n      this.companyForm.reset();\n      // Cerrar el formulario de departamentos si está abierto\n      if (this.showDepartmentForm) {\n        this.showDepartmentForm = false;\n      }\n    }\n  }\n\n  /**\n   * Agrega un nuevo departamento\n   */\n  async addDepartment() {\n    if (this.departmentForm.invalid) return;\n    \n    // Activar estado de carga y animación\n    this.isLoading = true;\n    this.animationState = 'saving';\n    \n    try {\n      const departmentName = this.departmentForm.get('name')?.value;\n      \n      // Validación adicional\n      if (!departmentName || departmentName.trim().length < 3) {\n        throw new Error('El nombre del departamento debe tener al menos 3 caracteres');\n      }\n      \n      // Verificar si ya existe un departamento con el mismo nombre\n      const existingDepartments = this.departments$.getValue();\n      const exists = existingDepartments.some(d =>\n        d.Nombre.toLowerCase() === departmentName.toLowerCase()\n      );\n      \n      if (exists) {\n        throw new Error(`El departamento \"${departmentName}\" ya existe`);\n      }\n      \n      // Guardar el departamento\n      await this.departmentService.addDepartment(departmentName);\n      \n      // Mostrar mensaje de éxito con el nombre\n      this.showSuccess(`Departamento \"${departmentName}\" añadido correctamente`);\n      \n      // Cerrar el formulario\n      this.toggleDepartmentForm();\n      \n      // Recargar los datos\n      this.loadData();\n    } catch (error: any) {\n      this.showError(error.message || 'Error al añadir departamento');\n    } finally {\n      this.isLoading = false;\n      this.animationState = 'idle';\n    }\n  }\n\n  /**\n   * Método para abrir el modal de confirmación\n   * @param itemId ID del elemento a eliminar\n   * @param itemName Nombre del elemento a eliminar\n   * @param itemType Tipo de elemento ('department' o 'company')\n   */\n  openDeleteConfirmation(itemId: string, itemName: string, itemType: 'department' | 'company'): void {\n    this.itemToDeleteId = itemId;\n    this.itemToDeleteName = itemName;\n    this.itemTypeToDelete = itemType;\n    \n    if (itemType === 'department') {\n      this.confirmModalTitle = 'Eliminar departamento';\n      this.confirmModalMessage = `¿Está seguro de eliminar el departamento \"${itemName}\"?\\n\\nEsta acción no se puede deshacer.`;\n    } else {\n      this.confirmModalTitle = 'Eliminar empresa';\n      this.confirmModalMessage = `¿Está seguro de eliminar la empresa \"${itemName}\"?\\n\\nEsta acción no se puede deshacer.`;\n    }\n    \n    this.showConfirmModal = true;\n  }\n\n  /**\n   * Método para cancelar la eliminación\n   */\n  cancelDelete(): void {\n    this.showConfirmModal = false;\n    this.itemToDeleteId = '';\n    this.itemToDeleteName = '';\n  }\n\n  /**\n   * Método para confirmar la eliminación\n   */\n  async confirmDelete(): Promise<void> {\n    if (this.itemTypeToDelete === 'department') {\n      await this.deleteDepartment();\n    } else {\n      await this.deleteCompany();\n    }\n    \n    this.showConfirmModal = false;\n    this.itemToDeleteId = '';\n    this.itemToDeleteName = '';\n  }\n\n  /**\n   * Elimina un departamento\n   */\n  async deleteDepartment(): Promise<void> {\n    if (!this.itemToDeleteId) return;\n    \n    this.isLoading = true;\n    this.animationState = 'deleting';\n    \n    try {\n      await this.departmentService.deleteDepartment(this.itemToDeleteId);\n      \n      // Actualizar la lista sin necesidad de recargar\n      const currentDepartments = this.departments$.getValue();\n      const updatedDepartments = currentDepartments.filter(d =>\n        d.IdDepartamento !== this.itemToDeleteId\n      );\n      \n      this.departments$.next(updatedDepartments);\n      this.departmentCount = updatedDepartments.length;\n      \n      this.showSuccess(`Departamento \"${this.itemToDeleteName}\" eliminado correctamente`);\n    } catch (error: any) {\n      console.error('Error al eliminar departamento:', error);\n      this.showError(error.message || 'Error al eliminar departamento. Es posible que existan usuarios asociados a este departamento.');\n    } finally {\n      this.isLoading = false;\n      this.animationState = 'idle';\n    }\n  }\n\n  /**\n   * Agrega una nueva empresa\n   */\n  async addCompany() {\n    if (this.companyForm.invalid) return;\n    \n    this.isLoading = true;\n    this.animationState = 'saving';\n    \n    try {\n      const companyData = this.companyForm.value;\n      \n      // Validación adicional para correo electrónico\n      if (!this.isValidEmail(companyData.Correo)) {\n        throw new Error('El formato del correo electrónico no es válido');\n      }\n      \n      // Verificar si ya existe una empresa con el mismo nombre\n      const existingCompanies = this.companies$.getValue();\n      const exists = existingCompanies.some(c =>\n        c.Nombre.toLowerCase() === companyData.Nombre.toLowerCase()\n      );\n      \n      if (exists) {\n        throw new Error(`La empresa \"${companyData.Nombre}\" ya existe`);\n      }\n      \n      await this.companyService.addCompany(companyData);\n      \n      this.showSuccess(`Empresa \"${companyData.Nombre}\" añadida correctamente`);\n      this.toggleCompanyForm();\n      \n      // Recargar datos\n      this.loadData();\n    } catch (error: any) {\n      this.showError(error.message || 'Error al añadir empresa');\n    } finally {\n      this.isLoading = false;\n      this.animationState = 'idle';\n    }\n  }\n\n  /**\n   * Elimina una empresa\n   */\n  async deleteCompany(): Promise<void> {\n    if (!this.itemToDeleteId) return;\n    \n    this.isLoading = true;\n    this.animationState = 'deleting';\n    \n    try {\n      await this.companyService.deleteCompany(this.itemToDeleteId);\n      \n      // Actualizar la lista sin necesidad de recargar\n      const currentCompanies = this.companies$.getValue();\n      const updatedCompanies = currentCompanies.filter(c =>\n        c.IdEmpresa !== this.itemToDeleteId\n      );\n      \n      this.companies$.next(updatedCompanies);\n      this.companyCount = updatedCompanies.length;\n      \n      this.showSuccess(`Empresa \"${this.itemToDeleteName}\" eliminada correctamente`);\n    } catch (error: any) {\n      console.error('Error al eliminar empresa:', error);\n      this.showError(error.message || 'Error al eliminar empresa. Es posible que existan reportes asociados a esta empresa.');\n    } finally {\n      this.isLoading = false;\n      this.animationState = 'idle';\n    }\n  }\n\n  /**\n   * Filtra departamentos por texto\n   * @param filterText Texto para filtrar\n   */\n  filterDepartments(filterText: string): void {\n    this.departmentFilterText = filterText;\n    // Actualizar la lista filtrada forzando la evaluación del pipe\n    this.departments$.next(this.departments$.getValue());\n  }\n\n  /**\n   * Filtra empresas por texto\n   * @param filterText Texto para filtrar\n   */\n  filterCompanies(filterText: string): void {\n    this.companyFilterText = filterText;\n    // Actualizar la lista filtrada forzando la evaluación del pipe\n    this.companies$.next(this.companies$.getValue());\n  }\n\n  /**\n   * Busca globalmente en departamentos y empresas\n   * @param term Término de búsqueda\n   */\n  applyGlobalSearch(term: string): void {\n    if (this.activeTab === 'departments') {\n      this.departmentFilterText = term;\n      // Forzar la actualización del filtro\n      this.departments$.next(this.departments$.getValue());\n    } else {\n      this.companyFilterText = term;\n      // Forzar la actualización del filtro\n      this.companies$.next(this.companies$.getValue());\n    }\n  }\n\n  /**\n   * Valida el formato de correo electrónico\n   * @param email Correo a validar\n   * @returns boolean\n   */\n  private isValidEmail(email: string): boolean {\n    const emailPattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/;\n    return emailPattern.test(email);\n  }\n\n  /**\n   * Verifica si un campo de formulario tiene error\n   * @param form Formulario a verificar\n   * @param fieldName Nombre del campo\n   * @returns boolean\n   */\n  hasFieldError(form: FormGroup, fieldName: string): boolean {\n    const field = form.get(fieldName);\n    return field ? field.invalid && (field.dirty || field.touched) : false;\n  }\n\n  /**\n   * Navega a la pantalla anterior\n   */\n  goBack() {\n    this.router.navigate(['/admin1']);\n  }\n\n  /**\n   * Muestra un mensaje de error\n   * @param message Mensaje a mostrar\n   */\n  private showError(message: string): void {\n    this.errorMessage = message;\n    this.successMessage = '';\n    \n    // Auto-desaparecer después de 5 segundos\n    setTimeout(() => {\n      if (this.errorMessage === message) {\n        this.errorMessage = '';\n      }\n    }, 5000);\n  }\n\n  /**\n   * Muestra un mensaje de éxito\n   * @param message Mensaje a mostrar\n   */\n  private showSuccess(message: string): void {\n    this.successMessage = message;\n    this.errorMessage = '';\n    \n    // Auto-desaparecer después de 3 segundos\n    setTimeout(() => {\n      if (this.successMessage === message) {\n        this.successMessage = '';\n      }\n    }, 3000);\n  }\n\n  /**\n   * Actualiza los datos\n   */\n  refreshData(): void \n  {\n  this.animationState = 'refreshing';\n  this.isLoading = true;\n  \n  // Usamos un timeout para asegurar que el estado se resetea incluso si hay un error\n  const timeoutId = setTimeout(() => {\n    this.animationState = 'idle';\n    this.isLoading = false;\n  }, 5000); // 5 segundos máximo\n  \n  // Cargar los datos\n  Promise.all([\n    // Convertir observables a promesas para manejarlos de forma síncrona\n    new Promise<void>((resolve) => {\n      this.departmentService.getDepartments()\n        .pipe(take(1))\n        .subscribe({\n          next: (departments) => {\n            this.departments$.next(departments);\n            this.departmentCount = departments.length;\n            resolve();\n          },\n          error: (error) => {\n            console.error('Error al cargar departamentos:', error);\n            this.showError('Error al cargar los departamentos');\n            resolve(); // Resolvemos de todas formas para continuar\n          }\n        });\n    }),\n    new Promise<void>((resolve) => {\n      this.companyService.getCompanies()\n        .pipe(take(1))\n        .subscribe({\n          next: (companies) => {\n            this.companies$.next(companies);\n            this.companyCount = companies.length;\n            resolve();\n          },\n          error: (error) => {\n            console.error('Error al cargar empresas:', error);\n            this.showError('Error al cargar las empresas');\n            resolve(); // Resolvemos de todas formas para continuar\n          }\n        });\n    })\n  ])\n  .then(() => {\n    this.lastUpdated = new Date();\n    this.showSuccess('Datos actualizados correctamente');\n    clearTimeout(timeoutId); // Limpiamos el timeout ya que terminó con éxito\n    this.animationState = 'idle';\n    this.isLoading = false;\n  })\n  .catch((error) => {\n    console.error('Error al actualizar datos:', error);\n    this.showError('Error al actualizar los datos');\n    clearTimeout(timeoutId); // Limpiamos el timeout\n    this.animationState = 'idle';\n    this.isLoading = false;\n  });\n}\n\n\n  /**\n   * Limpia todos los filtros aplicados\n   */\n  clearFilters(): void {\n    this.departmentFilterText = '';\n    this.companyFilterText = '';\n    this.searchTerm = '';\n    this.searchForm.reset();\n    this.isSearching = false;\n    \n    // Forzar la actualización de ambas listas\n    this.departments$.next(this.departments$.getValue());\n    this.companies$.next(this.companies$.getValue());\n  }\n}", "<!-- manage-config.component.html -->\n<div class=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 py-6 sm:py-12 px-4\">\n  <!-- Botón de retroceso con efecto de rebote en hover -->\n  <button (click)=\"goBack()\" class=\"group mb-6 inline-flex items-center \n      px-4 py-2 bg-blue-600 text-white rounded-lg shadow-md hover:bg-blue-700 \n      hover:shadow-lg focus:outline-none focus:ring-2 focus:ring-offset-2 \n      focus:ring-blue-500 transition-all duration-300\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"w-5 h-5 mr-2 \n        transition-transform duration-300 group-hover:-translate-x-2\" viewBox=\"0 \n        0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n      <line x1=\"19\" y1=\"12\" x2=\"5\" y2=\"12\"></line>\n      <polyline points=\"12 19 5 12 12 5\"></polyline>\n    </svg>\n    Atrás\n  </button>\n\n  <!-- Tarjeta principal con efectos visuales mejorados -->\n  <div class=\"max-w-6xl mx-auto animate-fade-in\">\n    <div class=\"bg-white rounded-xl shadow-lg hover:shadow-xl transition-all \n        duration-300 overflow-hidden border border-gray-200\">\n      \n      <!-- Encabezado con gradiente dinámico y elementos flotantes -->\n      <div class=\"bg-gradient-to-r from-blue-600 via-blue-500 to-blue-700 \n          p-8 relative overflow-hidden\">\n        <div class=\"absolute inset-0 overflow-hidden opacity-10\">\n          <div class=\"absolute -top-24 -left-24 w-96 h-96 rounded-full \n              bg-white/20 animate-float\"></div>\n          <div class=\"absolute -bottom-24 -right-24 w-96 h-96 rounded-full bg-white/20 \n              animate-float\" style=\"animation-delay: 1s;\"></div>\n        </div>\n        <div class=\"flex flex-col md:flex-row items-center md:items-start \n            gap-5 relative z-10\">\n            <div class=\"bg-white p-4 rounded-xl shadow-lg transform \n            transition-all duration-300 hover:rotate-3 hover:scale-105 ring-4 ring-white/30\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-12 w-12 text-blue-500\" \n                viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" \n                stroke-linecap=\"round\" stroke-linejoin=\"round\">\n                <circle cx=\"12\" cy=\"12\" r=\"3\"></circle>\n                <path d=\"M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-.09A1.65 1.65 0 0 0 9 19.4a1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 0 1-2.83 0 2 2 0 0 1 0-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1-2-2 2 2 0 0 1 2-2h.09A1.65 1.65 0 0 0 4.6 9a1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 0-2.83 2 2 0 0 1 2.83 0l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1-1.51V3a2 2 0 0 1 2-2 2 2 0 0 1 2 2v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 0 1 2.83 0 2 2 0 0 1 0 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 2 2 2 2 0 0 1-2 2h-.09a1.65 1.65 0 0 0-1.51 1z\"></path>\n              </svg>\n            </div>\n          <div class=\"text-center md:text-left\">\n            <h1 class=\"text-white text-3xl font-bold tracking-tight drop-shadow-md\">Configuración del Sistema</h1>\n            <p class=\"text-blue-100 mt-2 text-lg font-light tracking-wide\">Gestión de \n                Departamentos y Empresas</p>\n          </div>\n        </div>\n      </div>\n      \n      <!-- Mensajes de Estado con animaciones -->\n      <div *ngIf=\"errorMessage\" class=\"mx-8 mt-4 p-4 bg-red-50 border-l-4 \n          border-red-500 flex items-start animate-error-shake status-message--error\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5 mr-2 flex-shrink-0 \n            text-red-500\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n          <path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 \n              0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zm-1 9a1 1 0 01-1-1v-4a1 1 0 112 0v4a1 1 \n              0 01-1 1z\" clip-rule=\"evenodd\" />\n        </svg>\n        {{ errorMessage }}\n        <button (click)=\"errorMessage = ''\" class=\"ml-auto text-red-400 hover:text-red-600\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-4 w-4\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n            <path fill-rule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clip-rule=\"evenodd\" />\n          </svg>\n        </button>\n      </div>\n      <div *ngIf=\"successMessage\" class=\"mx-8 mt-4 p-4 bg-green-50 \n          border-l-4 border-green-500 flex items-start animate-fade-in status-message--success\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5 mr-2 flex-shrink-0 \n            text-green-500\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n          <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 \n              16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 \n              1.414l2 2a1 1 0 001.414 0l4-4z\" clip-rule=\"evenodd\" />\n        </svg>\n        {{ successMessage }}\n        <button (click)=\"successMessage = ''\" class=\"ml-auto text-green-400 hover:text-green-600\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-4 w-4\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n            <path fill-rule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clip-rule=\"evenodd\" />\n          </svg>\n        </button>\n      </div>\n      \n      <!-- Indicador de carga mejorado -->\n      <div *ngIf=\"isLoading\" class=\"mx-8 mt-4 p-4 bg-blue-50 rounded-lg \n          flex items-center justify-center animate-pulse\">\n        <svg class=\"animate-spin h-6 w-6 text-blue-600 mr-3\"\n            xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n          <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\"\n              stroke=\"currentColor\" stroke-width=\"4\"></circle>\n          <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 \n              018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 \n              1.135 5.824 3 7.938l3-2.647z\"></path>\n        </svg>\n        <span class=\"text-blue-600 font-medium\">Cargando recursos...</span>\n      </div>\n      \n      <!-- Barra de herramientas y acciones -->\n      <div class=\"px-8 pt-6 flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4 border-b border-gray-100 pb-4\">\n        <!-- Barra de búsqueda global -->\n        <div class=\"relative w-full sm:w-64 md:w-80\">\n          <div class=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n            </svg>\n          </div>\n          <!-- Aquí usamos [formGroup] y formControlName en lugar de [formControl] -->\n          <form [formGroup]=\"searchForm\">\n            <input \n              type=\"text\" \n              formControlName=\"term\"\n              placeholder=\"Buscar en todo...\" \n              class=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\" \n            />\n          </form>\n        </div>\n        \n        <!-- Contadores de elementos -->\n        <div class=\"flex items-center gap-4\">\n          <div class=\"hidden md:flex items-center text-gray-500 text-sm\">\n            <span class=\"bg-blue-100 text-blue-800 py-1 px-2 rounded font-medium\">{{ departmentCount }}</span>\n            <span class=\"ml-1\">Departamentos</span>\n          </div>\n          <div class=\"hidden md:flex items-center text-gray-500 text-sm ml-4\">\n            <span class=\"bg-blue-100 text-blue-800 py-1 px-2 rounded font-medium\">{{ companyCount }}</span>\n            <span class=\"ml-1\">Empresas</span>\n          </div>\n          \n          <!-- Botón de actualizar -->\n          <button\n            (click)=\"refreshData()\"\n            class=\"p-2 text-gray-700 hover:text-white hover:bg-blue-500 rounded-full \n            transition-colors shadow-sm hover:shadow-md\"\n            [class.animate-spin]=\"animationState === 'refreshing'\"\n            title=\"Actualizar datos\"\n          >\n            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\n            </svg>\n          </button>\n          \n          <!-- Botón de limpiar filtros -->\n          <button \n            *ngIf=\"departmentFilterText || companyFilterText\"\n            (click)=\"clearFilters()\" \n            class=\"p-2 text-gray-500 hover:text-blue-600 hover:bg-blue-50 rounded-full transition-colors\"\n            title=\"Limpiar filtros\"\n          >\n            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n            </svg>\n          </button>\n        </div>\n      </div>\n      \n      <!-- Contenido principal -->\n      <div class=\"p-8\">\n        <!-- Tabs mejorados -->\n        <div class=\"mb-6 border-b border-gray-200\">\n          <div class=\"flex -mb-px space-x-8\">\n            <button\n            class=\"py-4 px-1 inline-flex items-center gap-2 border-b-2 \n            font-medium text-sm leading-5 focus:outline-none transition duration-150 \n            ease-in-out relative overflow-hidden group\"\n            [class.border-blue-500]=\"activeTab === 'departments'\"\n            [class.text-white]=\"activeTab === 'departments'\"\n            [class.bg-blue-600]=\"activeTab === 'departments'\"\n            [class.rounded-t-lg]=\"activeTab === 'departments'\"\n            [class.px-3]=\"activeTab === 'departments'\"\n            [class.border-transparent]=\"activeTab !== 'departments'\"\n            [class.text-gray-700]=\"activeTab !== 'departments'\"\n            [class.hover:text-gray-900]=\"activeTab !== 'departments'\"\n            [class.hover:border-gray-300]=\"activeTab !== 'departments'\"\n            (click)=\"setActiveTab('departments')\"\n          >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-4 w-4\"\n                  fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\"\n                    stroke-width=\"2\" d=\"M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 \n                    011 1v5m-4 0h4\" />\n              </svg>\n              Departamentos\n              <!-- Indicador de cantidad -->\n              <div class=\"absolute -top-1 -right-1 bg-blue-100 text-blue-800 text-xs px-1.5 py-0.5 rounded-full\" *ngIf=\"departmentCount > 0\">\n                {{departmentCount}}\n              </div>\n              <!-- Efecto hover -->\n              <span class=\"absolute bottom-0 left-0 w-full h-0.5 bg-blue-400 transform scale-x-0 group-hover:scale-x-100 transition-transform origin-left\" *ngIf=\"activeTab !== 'departments'\"></span>\n            </button>\n            <button\n              class=\"py-4 px-1 inline-flex items-center gap-2 border-b-2 \n              font-medium text-sm leading-5 focus:outline-none transition duration-150 \n              ease-in-out relative overflow-hidden group\"\n              [class.border-blue-500]=\"activeTab === 'companies'\"\n              [class.text-white]=\"activeTab === 'companies'\"\n              [class.bg-blue-600]=\"activeTab === 'companies'\"\n              [class.rounded-t-lg]=\"activeTab === 'companies'\"\n              [class.px-3]=\"activeTab === 'companies'\"\n              [class.border-transparent]=\"activeTab !== 'companies'\"\n              [class.text-gray-700]=\"activeTab !== 'companies'\"\n              [class.hover:text-gray-900]=\"activeTab !== 'companies'\"\n              [class.hover:border-gray-300]=\"activeTab !== 'companies'\"\n              (click)=\"setActiveTab('companies')\"\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-4 w-4\"\n                  fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\"\n                    stroke-width=\"2\" d=\"M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 3h1m-1 4h1m4-4h1m-1 4h1m4 14h-2m2 0V9a2 2 0 00-2-\n                    2H9a2 2 0 00-2 2v12m0 0h10\" />\n              </svg>\n              Empresas\n              <!-- Indicador de cantidad -->\n              <div class=\"absolute -top-1 -right-1 bg-blue-100 text-blue-800 text-xs px-1.5 py-0.5 rounded-full\" *ngIf=\"companyCount > 0\">\n                {{companyCount}}\n              </div>\n              <!-- Efecto hover -->\n              <span class=\"absolute bottom-0 left-0 w-full h-0.5 bg-blue-400 transform scale-x-0 group-hover:scale-x-100 transition-transform origin-left\" *ngIf=\"activeTab !== 'companies'\"></span>\n            </button>\n          </div>\n        </div>\n        \n        <!-- Contenido de Departamentos -->\n        <div *ngIf=\"activeTab === 'departments'\" class=\"animate-fade-in\" [class.opacity-50]=\"animationState === 'transitioning'\">\n          <div class=\"flex flex-col sm:flex-row justify-between items-center mb-6 gap-4\">\n            <h2 class=\"text-xl font-semibold text-gray-800 flex items-center\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6 mr-2 \n                  text-blue-500\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\"\n                    stroke-width=\"2\" d=\"M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 \n                    011 1v5m-4 0h4\" />\n              </svg>\n              Lista de Departamentos\n            </h2>\n            <!-- Búsqueda de departamentos -->\n            <div class=\"flex items-center w-full sm:w-auto\">\n              <div class=\"relative flex-grow sm:mr-2\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Buscar departamento...\"\n                  class=\"w-full py-2 px-4 pr-10 text-sm border border-gray-300 \n                      rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 \n                      focus:border-blue-500 transition-colors\"\n                  [(ngModel)]=\"departmentFilterText\"\n                  (input)=\"filterDepartments(departmentFilterText)\"\n                />\n                <div class=\"absolute inset-y-0 right-0 flex items-center \n                    pr-3 pointer-events-none\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-4 w-4 \n                      text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\"\n                        stroke-width=\"2\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n                  </svg>\n                </div>\n                <!-- Botón para limpiar búsqueda -->\n                <button \n                  *ngIf=\"departmentFilterText\" \n                  (click)=\"departmentFilterText = ''; filterDepartments('')\"\n                  class=\"absolute inset-y-0 right-0 pr-8 flex items-center text-gray-400 hover:text-gray-600\"\n                >\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n                  </svg>\n                </button>\n              </div>\n              <button\n                (click)=\"toggleDepartmentForm()\"\n                class=\"ml-2 px-4 py-2 bg-blue-600 text-white rounded-lg \n                    inline-flex items-center hover:bg-blue-700 focus:outline-none focus:ring-2 \n                    focus:ring-blue-500 focus:ring-offset-2 transition-colors shadow-md hover:shadow-lg\"\n              >\n                <svg *ngIf=\"!showDepartmentForm\"\n                    xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5 mr-2\" viewBox=\"0 0 20 \n                    20\" fill=\"currentColor\">\n                  <path fill-rule=\"evenodd\" d=\"M10 3a1 1 0 011 1v5h5a1 1 \n                      0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z\" clip-\n                      rule=\"evenodd\" />\n                </svg>\n                <svg *ngIf=\"showDepartmentForm\"\n                    xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5 mr-2\" viewBox=\"0 0 20 \n                    20\" fill=\"currentColor\">\n                  <path fill-rule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 \n                      0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 \n                      01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 \n                      5.707a1 1 0 010-1.414z\" clip-rule=\"evenodd\" />\n                </svg>\n                {{ showDepartmentForm ? 'Cancelar' : 'Añadir Departamento' }}\n              </button>\n            </div>\n          </div>\n          \n          <!-- Formulario para añadir departamento mejorado con efectos visuales -->\n          <form *ngIf=\"showDepartmentForm\" #departmentFormRef \n              [formGroup]=\"departmentForm\" (ngSubmit)=\"addDepartment()\" \n              class=\"bg-gradient-to-r from-blue-50 to-indigo-50 p-6 rounded-lg mb-6 border border-blue-100 shadow-lg animate-form-slide-up\">\n            <h3 class=\"text-lg font-medium text-blue-800 mb-4 flex items-center\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5 mr-2\" viewBox=\"0 \n                  0 20 20\" fill=\"currentColor\">\n                <path fill-rule=\"evenodd\" d=\"M10 3a1 1 0 011 1v5h5a1 1 0 \n                    110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z\" clip-rule=\"evenodd\"\n                />\n              </svg>\n              Nuevo Departamento\n            </h3>\n            <div class=\"mb-4\">\n              <label for=\"departmentName\" class=\"block text-sm font-medium text-gray-\n                  700 mb-1\">Nombre del Departamento</label>\n              <div class=\"relative\">\n                <div class=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-\n                    none\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5 \n                      text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\"\n                        stroke-width=\"2\" d=\"M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 \n                        011 1v5m-4 0h4\" />\n                  </svg>\n                </div>\n                <input\n                  type=\"text\"\n                  id=\"departmentName\"\n                  formControlName=\"name\"\n                  class=\"w-full pl-10 px-4 py-3 border rounded-lg shadow-sm\n                      focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\n                      transition-colors\"\n                  [ngClass]=\"{'border-red-500 bg-red-50': \n                      hasFieldError(departmentForm, 'name'), 'border-gray-300': \n                      !hasFieldError(departmentForm, 'name')}\"\n                  placeholder=\"Ingrese el nombre del departamento\"\n                />\n                <!-- Icono de validación -->\n                <div *ngIf=\"departmentForm.get('name')?.valid && departmentForm.get('name')?.value\" \n                    class=\"absolute inset-y-0 right-0 flex items-center pr-3 text-green-500\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                    <path fill-rule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clip-rule=\"evenodd\" />\n                  </svg>\n                </div>\n              </div>\n              <div *ngIf=\"hasFieldError(departmentForm, 'name')\"\n                  class=\"mt-1 text-sm text-red-600 flex items-center\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-4 w-4 mr-1\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zm-1 9a1 1 0 01-1-1v-4a1 1 0 112 0v4a1 1 0 01-1 1z\" clip-rule=\"evenodd\" />\n                </svg>\n                El nombre del departamento es requerido y debe tener al \n                menos 3 caracteres.\n              </div>\n            </div>\n            <!-- Botones de acción -->\n<div class=\"flex justify-end mt-6\">\n  <button\n    type=\"button\"\n    (click)=\"toggleDepartmentForm()\"\n    class=\"px-4 py-2 mr-2 bg-gray-200 text-gray-700 rounded-lg hover:bg-gray-\n        300 focus:outline-none focus:ring-2 focus:ring-gray-500 \n        focus:ring-offset-2 transition-colors shadow-sm\"\n  >\n    Cancelar\n  </button>\n  <button\n    type=\"submit\"\n    [disabled]=\"departmentForm.invalid || isLoading\"\n    class=\"inline-flex items-center px-4 py-2 bg-blue-600 \n        text-white rounded-lg shadow-sm hover:bg-blue-700 hover:shadow-md \n        focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 \n        transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n  >\n    <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5 \n        mr-2\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n      <path fill-rule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 \n          1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-\n          7.293a1 1 0 011.414 0z\" clip-rule=\"evenodd\" />\n    </svg>\n    Guardar\n  </button>\n</div>\n</form>\n\n<!-- Lista de departamentos para desktop con efectos mejorados -->\n<div class=\"hidden sm:block bg-white rounded-lg border border-gray-200 \n  overflow-hidden shadow-md hover:shadow-lg transition-all duration-300\">\n<table class=\"min-w-full divide-y divide-gray-200\">\n  <thead class=\"bg-gradient-to-r from-gray-50 to-gray-100\">\n    <tr>\n      <th scope=\"col\" class=\"px-6 py-3 text-left text-xs \n          font-medium text-gray-500 uppercase tracking-wider\">ID</th>\n      <th scope=\"col\" class=\"px-6 py-3 text-left text-xs \n          font-medium text-gray-500 uppercase tracking-wider\">Nombre</th>\n      <th scope=\"col\" class=\"px-6 py-3 text-right text-xs \n          font-medium text-gray-500 uppercase tracking-wider\">Acciones</th>\n    </tr>\n  </thead>\n  <tbody class=\"bg-white divide-y divide-gray-200\">\n    <tr *ngFor=\"let department of filteredDepartments$ |\n        async\" class=\"hover:bg-blue-50 transition-colors duration-150\">\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-\n          900\">{{ department.IdDepartamento }}</td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{{\n          department.Nombre }}</td>\n      <td class=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\n        <button\n          (click)=\"openDeleteConfirmation(department.IdDepartamento,\n              department.Nombre, 'department')\"\n          class=\"inline-flex items-center bg-red-50 text-red-700 px-3 py-1 \n              rounded-md hover:bg-red-100 focus:outline-none focus:ring-2 \n              focus:ring-red-500 focus:ring-offset-1 transition-colors shadow-sm hover:shadow-md\"\n          [disabled]=\"isLoading\"\n        >\n          <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-4 \n              w-4 mr-1\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n            <path fill-rule=\"evenodd\" d=\"M9 2a1 1 0 00-\n                .894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-\n                2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-\n                1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z\" clip-rule=\"evenodd\" />\n          </svg>\n          Eliminar\n        </button>\n      </td>\n    </tr>\n    <tr *ngIf=\"(filteredDepartments$ | async)?.length === 0\">\n      <td colspan=\"3\" class=\"px-6 py-8 text-center text-sm \n          text-gray-500\">\n        <div class=\"flex flex-col items-center py-6\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-16 \n              w-16 text-gray-300 mb-4\" fill=\"none\" viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                d=\"M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 \n                2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v5a1 1 0 \n                011-1h2a1 1 0 011 1v5m-4 0h4\" />\n          </svg>\n          <p class=\"text-lg font-medium text-gray-400\">No hay departamentos disponibles</p>\n          <button \n            *ngIf=\"!showDepartmentForm\" \n            (click)=\"toggleDepartmentForm()\" \n            class=\"mt-4 px-4 py-2 bg-blue-100 text-blue-700 rounded-md hover:bg-blue-200 transition-colors inline-flex items-center\"\n          >\n            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5 mr-2\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n              <path fill-rule=\"evenodd\" d=\"M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z\" clip-rule=\"evenodd\" />\n            </svg>\n            Agregar departamento\n          </button>\n        </div>\n      </td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n<!-- Vista para móviles de departamentos mejorada -->\n<div class=\"sm:hidden space-y-4\">\n<div *ngFor=\"let department of filteredDepartments$ | async\"\n    class=\"bg-white rounded-lg border border-gray-200 shadow-sm p-4 hover:shadow-md transition-all duration-200\">\n  <div class=\"flex justify-between items-start\">\n    <div>\n      <span class=\"text-xs font-medium text-gray-500 \n          uppercase\">ID</span>\n      <p class=\"text-gray-900 font-medium\">{{\n          department.IdDepartamento }}</p>\n    </div>\n    <button\n      (click)=\"openDeleteConfirmation(department.IdDepartamento,\n          department.Nombre, 'department')\"\n      class=\"text-white bg-red-500 hover:bg-red-600 p-2 \n          rounded-full focus:outline-none focus:ring-2 focus:ring-red-400 shadow-sm hover:shadow-md transition-all duration-200\"\n      [disabled]=\"isLoading\"\n    >\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\"\n          viewBox=\"0 0 20 20\" fill=\"currentColor\">\n        <path fill-rule=\"evenodd\" d=\"M9 2a1 1 0 00-\n            .894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-\n            2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-\n            1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z\" clip-rule=\"evenodd\" />\n      </svg>\n    </button>\n  </div>\n  <div class=\"mt-2 pt-2 border-t border-gray-200\">\n    <span class=\"text-xs font-medium text-gray-500 \n        uppercase\">Nombre</span>\n    <p class=\"text-gray-700 font-medium\">{{ department.Nombre }}</p>\n  </div>\n</div>\n<div *ngIf=\"(filteredDepartments$ | async)?.length === 0\"\n    class=\"bg-white rounded-lg border border-gray-200 shadow-sm p-8 text-center\">\n  <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-16 w-16 \n      mx-auto mb-4 text-gray-300\" fill=\"none\" viewBox=\"0 0 24 24\"\n      stroke=\"currentColor\">\n    <path stroke-linecap=\"round\" stroke-linejoin=\"round\"\n        stroke-width=\"2\" d=\"M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 \n        011 1v5m-4 0h4\" />\n  </svg>\n  <p class=\"text-gray-500 mb-4\">No hay departamentos disponibles</p>\n  <button \n    *ngIf=\"!showDepartmentForm\" \n    (click)=\"toggleDepartmentForm()\" \n    class=\"w-full px-4 py-2 bg-blue-100 text-blue-700 rounded-md hover:bg-blue-200 transition-colors inline-flex items-center justify-center\"\n  >\n    <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5 mr-2\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n      <path fill-rule=\"evenodd\" d=\"M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z\" clip-rule=\"evenodd\" />\n    </svg>\n    Agregar departamento\n  </button>\n</div>\n</div>\n</div>\n\n<!-- Contenido de Empresas -->\n<div *ngIf=\"activeTab === 'companies'\" class=\"animate-fade-in\" [class.opacity-50]=\"animationState === 'transitioning'\">\n<!-- ... Contenido existente ... -->\n</div>\n</div>\n</div>\n</div>\n</div>\n\n<!-- Modal de confirmación para eliminar - Mejorado con animación -->\n<div *ngIf=\"showConfirmModal\" class=\"fixed inset-0 bg-black bg-opacity-50 z-50 \nflex justify-center items-center p-4 backdrop-blur-sm animate-fade-in\">\n<div class=\"bg-white rounded-lg shadow-xl max-w-md w-full p-6 animate-fade-in-up\">\n<div class=\"flex items-center mb-4\">\n  <div class=\"bg-red-100 rounded-full p-3 mr-3 flex items-center justify-center\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6 text-red-600\"\n      fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n        d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\" />\n    </svg>\n  </div>\n  <h3 class=\"text-lg font-semibold text-gray-900\">{{confirmModalTitle}}</h3>\n</div>\n<p class=\"text-gray-600 mb-6 border-l-4 border-yellow-400 bg-yellow-50 p-4 rounded\">{{confirmModalMessage}}</p>\n<div class=\"flex justify-end space-x-3\">\n  <button\n    type=\"button\"\n    (click)=\"cancelDelete()\"\n    class=\"px-4 py-2 bg-gray-200 hover:bg-gray-300 text-gray-800 rounded-md \n        focus:outline-none focus:ring-2 focus:ring-gray-400 transition-colors shadow-sm\"\n  >\n    Cancelar\n  </button>\n  <button\n    type=\"button\"\n    (click)=\"confirmDelete()\"\n    class=\"px-4 py-2 bg-red-600 hover:bg-red-700 text-white rounded-md \n        focus:outline-none focus:ring-2 focus:ring-red-500 transition-colors shadow-md hover:shadow-lg\"\n  >\n    <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-4 w-4 mr-1 inline\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n      <path fill-rule=\"evenodd\" d=\"M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z\" clip-rule=\"evenodd\" />\n    </svg>\n    Eliminar\n  </button>\n</div>\n</div>\n</div>"],
  "mappings": "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",
  "names": ["ConfigStateService", "loadingState", "BehaviorSubject", "errorState", "successState", "loading$", "asObservable", "error$", "success$", "setLoading", "isLoading", "next", "setError", "message", "setTimeout", "getValue", "clearError", "setSuccess", "clearSuccess", "clearMessages", "processDepartmentList", "departments", "length", "processCompanyList", "companies", "filterDepartments", "searchTerm", "term", "toLowerCase", "trim", "filter", "dept", "Nombre", "includes", "IdDepartamento", "filterCompanies", "company", "Correo", "Sector", "IdEmpresa", "factory", "\u0275fac", "ConfigFormService", "fb", "constructor", "createDepartmentForm", "group", "name", "Validators", "required", "minLength", "maxLength", "createCompanyForm", "Nombre", "Correo", "email", "Direccion", "Sector", "createSearchForm", "term", "isValidEmail", "test", "hasFieldError", "form", "fieldName", "field", "get", "invalid", "dirty", "touched", "getFieldErrorMessage", "errors", "requiredLength", "markAllAsTouched", "Object", "keys", "controls", "forEach", "key", "control", "markAsTouched", "resetForm", "reset", "setErrors", "\u0275\u0275inject", "FormBuilder", "factory", "\u0275fac", "ConfigAnimationService", "animationStateSubject", "BehaviorSubject", "animationState$", "asObservable", "animationDurations", "fade", "slide", "transition", "refresh", "shake", "pulse", "constructor", "setState", "state", "next", "getState", "getValue", "applyTabTransition", "callback", "setTimeout", "applyLoadingEffect", "then", "catch", "error", "applySavingEffect", "applyDeletingEffect", "applyRefreshEffect", "getAnimationClasses", "baseClass", "classes", "factory", "\u0275fac", "\u0275\u0275elementStart", "\u0275\u0275element", "\u0275\u0275elementEnd", "\u0275\u0275text", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r1", "ctx_r1", "\u0275\u0275nextContext", "\u0275\u0275resetView", "errorMessage", "\u0275\u0275advance", "\u0275\u0275textInterpolate1", "_r3", "successMessage", "_r4", "clearFilters", "departmentCount", "companyCount", "_r6", "departmentFilterText", "filterDepartments", "_r7", "addDepartment", "\u0275\u0275template", "ManageConfigComponent_div_62_form_17_div_14_Template", "ManageConfigComponent_div_62_form_17_div_15_Template", "toggleDepartmentForm", "\u0275\u0275property", "departmentForm", "\u0275\u0275pureFunction2", "_c2", "hasFieldError", "tmp_5_0", "get", "valid", "value", "invalid", "isLoading", "department_r9", "_r8", "$implicit", "openDeleteConfirmation", "IdDepartamento", "Nombre", "\u0275\u0275textInterpolate", "_r10", "ManageConfigComponent_div_62_tr_31_button_7_Template", "showDepartmentForm", "department_r12", "_r11", "_r13", "ManageConfigComponent_div_62_div_36_button_5_Template", "\u0275\u0275twoWayListener", "$event", "_r5", "i0", "\u0275\u0275twoWayBindingSet", "ManageConfigComponent_div_62_button_12_Template", "ManageConfigComponent_div_62__svg_svg_14_Template", "ManageConfigComponent_div_62__svg_svg_15_Template", "ManageConfigComponent_div_62_form_17_Template", "ManageConfigComponent_div_62_tr_29_Template", "ManageConfigComponent_div_62_tr_31_Template", "ManageConfigComponent_div_62_div_34_Template", "ManageConfigComponent_div_62_div_36_Template", "\u0275\u0275classProp", "animationState", "\u0275\u0275twoWayProperty", "\u0275\u0275pipeBind1", "filteredDepartments$", "tmp_9_0", "length", "tmp_11_0", "_r14", "cancelDelete", "confirmDelete", "confirmModalTitle", "confirmModalMessage", "ManageConfigComponent", "departmentFormRef", "companyFormRef", "departmentService", "inject", "DepartmentService", "companyService", "CompanyService", "authService", "AuthService", "modalService", "SimpleModalService", "fb", "FormBuilder", "router", "Router", "destroyRef", "DestroyRef", "stateService", "ConfigStateService", "formService", "ConfigFormService", "animationService", "ConfigAnimationService", "departments$", "BehaviorSubject", "companies$", "filteredCompanies$", "isAdmin2OrHigher", "isAdmin3", "activeTab", "showCompanyForm", "companyFilterText", "lastUpdated", "Date", "searchTerm", "isSearching", "showConfirmModal", "itemToDeleteId", "itemToDeleteName", "itemTypeToDelete", "companyForm", "searchForm", "constructor", "createDepartmentForm", "createCompanyForm", "createSearchForm", "createFilteredDepartmentsObservable", "createFilteredCompaniesObservable", "pipe", "map", "departments", "filterText", "toLowerCase", "trim", "filter", "department", "includes", "companies", "company", "Correo", "Sector", "IdEmpresa", "ngOnInit", "checkAdminPermissions", "then", "setTimeout", "getDepartments", "takeUntilDestroyed", "catchError", "error", "console", "showError", "of", "subscribe", "next", "getCompanies", "finalize", "valueChanges", "debounceTime", "term", "applyGlobalSearch", "catch", "__async", "currentUser", "getCurrentUser", "navigate", "userData", "getUserData", "uid", "Rol", "NivelAdmin", "loadData", "setActiveTab", "tab", "reset", "toggleCompanyForm", "departmentName", "Error", "getValue", "some", "d", "showSuccess", "message", "itemId", "itemName", "itemType", "deleteDepartment", "deleteCompany", "updatedDepartments", "addCompany", "companyData", "isValidEmail", "c", "updatedCompanies", "filterCompanies", "email", "test", "form", "fieldName", "field", "dirty", "touched", "goBack", "refreshData", "timeoutId", "Promise", "all", "resolve", "take", "clearTimeout", "selectors", "viewQuery", "rf", "ctx", "ManageConfigComponent_div_22_Template", "ManageConfigComponent_div_23_Template", "ManageConfigComponent_div_24_Template", "ManageConfigComponent_button_46_Template", "ManageConfigComponent_div_54_Template", "ManageConfigComponent_span_55_Template", "ManageConfigComponent_div_60_Template", "ManageConfigComponent_span_61_Template", "ManageConfigComponent_div_62_Template", "ManageConfigComponent_div_63_Template", "ManageConfigComponent_div_64_Template", "CommonModule", "NgClass", "NgForOf", "NgIf", "AsyncPipe", "ReactiveFormsModule", "\u0275NgNoValidate", "DefaultValueAccessor", "NgControlStatus", "NgControlStatusGroup", "FormGroupDirective", "FormControlName", "FormsModule", "NgModel", "styles"]
}
