{
  "version": 3,
  "sources": ["src/app/Components/regist/regist.component.ts", "src/app/Components/regist/regist.component.html"],
  "sourcesContent": ["// regist.component.ts\nimport { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Auth, createUserWithEmailAndPassword } from '@angular/fire/auth';\nimport { Firestore, doc, setDoc } from '@angular/fire/firestore';\n\ninterface AccountData {\n  firstName: string;\n  lastName: string;\n  email: string;\n  phone: string;\n  username: string;\n  password: string;\n}\n\n@Component({\n  selector: 'app-regist',\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  templateUrl: './regist.component.html',\n  styleUrl: './regist.component.scss'\n})\nexport class RegistComponent {\n  showPassword = false;\n  isLoading = false;\n  showSuccessMessage = false;\n  showErrorMessage = false;\n\n  accountData: AccountData = {\n    firstName: '',\n    lastName: '',\n    email: '',\n    phone: '',\n    username: '',\n    password: ''\n  };\n\n  constructor(\n    private router: Router,\n    private auth: Auth,\n    private firestore: Firestore\n  ) {}\n\n  togglePasswordVisibility(): void {\n    this.showPassword = !this.showPassword;\n  }\n\n  async onSubmit(form: NgForm): Promise<void> {\n    if (form.invalid) return;\n\n    this.isLoading = true;\n\n    try {\n      const userCredential = await createUserWithEmailAndPassword(\n        this.auth,\n        this.accountData.email,\n        this.accountData.password\n      );\n\n      await setDoc(doc(this.firestore, 'Usuario', userCredential.user.uid), {\n        Nombre: `${this.accountData.firstName} ${this.accountData.lastName}`,\n        Correo: this.accountData.email,\n        IdUsuario: userCredential.user.uid,\n        Foto_Perfil: ' ',\n        Rol: 'user',\n        Telefono: this.accountData.phone,\n        Username: this.accountData.username\n      });\n\n      this.showSuccessMessage = true;\n      this.resetForm();\n      form.resetForm();\n      \n      setTimeout(() => {\n        this.showSuccessMessage = false;\n        this.router.navigate(['/login']);\n      }, 3000);\n\n    } catch (error) {\n      console.error('Error al crear la cuenta:', error);\n      this.showErrorMessage = true;\n      setTimeout(() => {\n        this.showErrorMessage = false;\n      }, 3000);\n    } finally {\n      this.isLoading = false;\n    }\n  }\n\n  private resetForm(): void {\n    this.accountData = {\n      firstName: '',\n      lastName: '',\n      email: '',\n      phone: '',\n      username: '',\n      password: ''\n    };\n  }\n\n  goBack(): void {\n    this.router.navigate(['/']);\n  }\n}", "<!-- regist.component.html -->\n<div class=\"container\">\n  <div class=\"card\">\n    <img src=\"icons/logo_Repo.png\" alt=\"Logo de la Aplicación\" class=\"app-logo\" />\n    <div class=\"card-header\">Registro de Usuario</div>\n    <div class=\"card-body\">\n      <p>Complete los datos para registrarse</p>\n\n      <div class=\"error-message\" *ngIf=\"showErrorMessage\">\n        Error al crear la cuenta\n      </div>\n\n      <div class=\"success-message\" *ngIf=\"showSuccessMessage\">\n        Cuenta creada exitosamente\n      </div>\n\n      <form #form=\"ngForm\" (ngSubmit)=\"onSubmit(form)\">\n        <label>Nombre</label>\n        <input\n          type=\"text\"\n          name=\"firstName\"\n          [(ngModel)]=\"accountData.firstName\"\n          required>\n\n        <label>Apellido</label>\n        <input\n          type=\"text\"\n          name=\"lastName\"\n          [(ngModel)]=\"accountData.lastName\"\n          required>\n\n        <label>Correo electrónico</label>\n        <input\n          type=\"email\"\n          name=\"email\"\n          [(ngModel)]=\"accountData.email\"\n          required>\n\n        <label>Teléfono</label>\n        <input\n          type=\"tel\"\n          name=\"phone\"\n          [(ngModel)]=\"accountData.phone\"\n          required>\n\n        <label>Usuario</label>\n        <input\n          type=\"text\"\n          name=\"username\"\n          [(ngModel)]=\"accountData.username\"\n          required>\n\n          <label>Contraseña</label>\n          <input\n            [type]=\"showPassword ? 'text' : 'password'\"\n            name=\"password\"\n            [(ngModel)]=\"accountData.password\"\n            required>\n          <div class=\"show-password\">\n            <label>\n              <input type=\"checkbox\" (change)=\"togglePasswordVisibility()\">\n              Mostrar contraseña\n            </label>\n          </div>\n          \n          <!-- Contenedor para los botones -->\n          <div class=\"button-group\">\n            <button type=\"submit\" [disabled]=\"form.invalid || isLoading\">\n              {{isLoading ? 'Registrando...' : 'Registrar'}}\n            </button>\n            <button type=\"button\" (click)=\"goBack()\" class=\"back-button\">\n              Volver\n            </button>\n          </div>\n\n        \n      </form>\n\n      <div class=\"login-link\">\n        <p>¿Ya tiene una cuenta? <a routerLink=\"/\">Iniciar sesión</a></p>\n      </div>\n    </div>\n  </div>\n</div>"],
  "mappings": "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",
  "names": ["\u0275\u0275elementStart", "\u0275\u0275text", "\u0275\u0275elementEnd", "RegistComponent", "router", "auth", "firestore", "showPassword", "isLoading", "showSuccessMessage", "showErrorMessage", "accountData", "firstName", "lastName", "email", "phone", "username", "password", "constructor", "togglePasswordVisibility", "onSubmit", "form", "__async", "invalid", "userCredential", "createUserWithEmailAndPassword", "setDoc", "doc", "user", "uid", "Nombre", "Correo", "IdUsuario", "Foto_Perfil", "Rol", "Telefono", "Username", "resetForm", "setTimeout", "navigate", "error", "console", "goBack", "\u0275\u0275directiveInject", "Router", "Auth", "Firestore", "selectors", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275element", "\u0275\u0275template", "RegistComponent_div_8_Template", "RegistComponent_div_9_Template", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r1", "form_r2", "\u0275\u0275reference", "\u0275\u0275resetView", "\u0275\u0275twoWayListener", "$event", "i0", "\u0275\u0275twoWayBindingSet", "\u0275\u0275advance", "\u0275\u0275property", "\u0275\u0275twoWayProperty", "\u0275\u0275textInterpolate1", "CommonModule", "NgIf", "FormsModule", "\u0275NgNoValidate", "DefaultValueAccessor", "NgControlStatus", "NgControlStatusGroup", "RequiredValidator", "NgModel", "NgForm", "styles"]
}
