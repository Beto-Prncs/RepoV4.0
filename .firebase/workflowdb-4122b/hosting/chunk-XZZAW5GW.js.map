{
  "version": 3,
  "sources": ["src/app/functionalities/worker-config/worker-config.component.ts", "src/app/functionalities/worker-config/worker-config.component.html"],
  "sourcesContent": ["import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Router } from '@angular/router';\n\ninterface CompanyConfig {\n  name: string;\n  language: string;\n  timezone: string;\n  theme: 'light' | 'dark';\n  emailNotifications: boolean;\n  autoSave: boolean;\n  currency: string;\n  dateFormat: string;\n}\n@Component({\n  selector: 'app-worker-config',\n  imports: [],\n  templateUrl: './worker-config.component.html',\n  styleUrl: './worker-config.component.scss'\n})\nexport class WorkerConfigComponent implements OnInit {\n  activeSection: string = 'general';\n  config: CompanyConfig = {\n    name: '',\n    language: 'Español',\n    timezone: 'América/Ciudad de México',\n    theme: 'light',\n    emailNotifications: true,\n    autoSave: false,\n    currency: 'MXN',\n    dateFormat: 'DD/MM/YYYY'\n  };\n\n  languages = ['Español', 'Inglés', 'Portugués', 'Francés'];\n  timezones = [\n    'América/Ciudad de México',\n    'América/Buenos Aires',\n    'América/Bogotá',\n    'América/Santiago',\n    'Europa/Madrid'\n  ];\n  currencies = ['MXN', 'USD', 'EUR', 'ARS', 'CLP'];\n  dateFormats = ['DD/MM/YYYY', 'MM/DD/YYYY', 'YYYY-MM-DD'];\n\n  constructor(private router: Router) {}\n\n  ngOnInit() {\n    // Cargar configuración guardada\n    const savedConfig = localStorage.getItem('companyConfig');\n    if (savedConfig) {\n      this.config = { ...this.config, ...JSON.parse(savedConfig) };\n    }\n  }\n\n  setActiveSection(section: string) {\n    this.activeSection = section;\n  }\n\n  saveConfiguration() {\n    try {\n      localStorage.setItem('companyConfig', JSON.stringify(this.config));\n      this.showNotification('Configuración guardada exitosamente');\n    } catch (error) {\n      this.showNotification('Error al guardar la configuración', 'error');\n    }\n  }\n\n  resetConfiguration() {\n    if (confirm('¿Estás seguro de que deseas restablecer la configuración?')) {\n      localStorage.removeItem('companyConfig');\n      this.config = {\n        name: '',\n        language: 'Español',\n        timezone: 'América/Ciudad de México',\n        theme: 'light',\n        emailNotifications: true,\n        autoSave: false,\n        currency: 'MXN',\n        dateFormat: 'DD/MM/YYYY'\n      };\n      this.showNotification('Configuración restablecida');\n    }\n  }\n\n  private showNotification(message: string, type: 'success' | 'error' = 'success') {\n    // Implementar lógica de notificación\n    console.log(`${type}: ${message}`);\n  }\n\n  exportConfiguration() {\n    const dataStr = JSON.stringify(this.config, null, 2);\n    const dataUri = 'data:application/json;charset=utf-8,' + encodeURIComponent(dataStr);\n    const exportFileDefaultName = 'company-config.json';\n\n    const linkElement = document.createElement('a');\n    linkElement.setAttribute('href', dataUri);\n    linkElement.setAttribute('download', exportFileDefaultName);\n    linkElement.click();\n  }\n\n  goBack(): void {\n    this.router.navigate(['/worker']);\n  }\n}\n\n\n\n", "<p>worker-config works!</p>\n"],
  "mappings": "oJAqBA,IAAaA,GAAqB,IAAA,CAA5B,MAAOA,CAAqB,CAwBZC,OAvBpBC,cAAwB,UACxBC,OAAwB,CACtBC,KAAM,GACNC,SAAU,aACVC,SAAU,iCACVC,MAAO,QACPC,mBAAoB,GACpBC,SAAU,GACVC,SAAU,MACVC,WAAY,cAGdC,UAAY,CAAC,aAAW,YAAU,eAAa,YAAS,EACxDC,UAAY,CACV,iCACA,0BACA,uBACA,sBACA,eAAe,EAEjBC,WAAa,CAAC,MAAO,MAAO,MAAO,MAAO,KAAK,EAC/CC,YAAc,CAAC,aAAc,aAAc,YAAY,EAEvDC,YAAoBf,EAAc,CAAd,KAAAA,OAAAA,CAAiB,CAErCgB,UAAQ,CAEN,IAAMC,EAAcC,aAAaC,QAAQ,eAAe,EACpDF,IACF,KAAKf,OAASkB,IAAA,GAAK,KAAKlB,QAAWmB,KAAKC,MAAML,CAAW,GAE7D,CAEAM,iBAAiBC,EAAe,CAC9B,KAAKvB,cAAgBuB,CACvB,CAEAC,mBAAiB,CACf,GAAI,CACFP,aAAaQ,QAAQ,gBAAiBL,KAAKM,UAAU,KAAKzB,MAAM,CAAC,EACjE,KAAK0B,iBAAiB,wCAAqC,CAC7D,MAAgB,CACd,KAAKA,iBAAiB,uCAAqC,OAAO,CACpE,CACF,CAEAC,oBAAkB,CACZC,QAAQ,oEAA2D,IACrEZ,aAAaa,WAAW,eAAe,EACvC,KAAK7B,OAAS,CACZC,KAAM,GACNC,SAAU,aACVC,SAAU,iCACVC,MAAO,QACPC,mBAAoB,GACpBC,SAAU,GACVC,SAAU,MACVC,WAAY,cAEd,KAAKkB,iBAAiB,+BAA4B,EAEtD,CAEQA,iBAAiBI,EAAiBC,EAA4B,UAAS,CAE7EC,QAAQC,IAAI,GAAGF,CAAI,KAAKD,CAAO,EAAE,CACnC,CAEAI,qBAAmB,CACjB,IAAMC,EAAUhB,KAAKM,UAAU,KAAKzB,OAAQ,KAAM,CAAC,EAC7CoC,EAAU,uCAAyCC,mBAAmBF,CAAO,EAC7EG,EAAwB,sBAExBC,EAAcC,SAASC,cAAc,GAAG,EAC9CF,EAAYG,aAAa,OAAQN,CAAO,EACxCG,EAAYG,aAAa,WAAYJ,CAAqB,EAC1DC,EAAYI,MAAK,CACnB,CAEAC,QAAM,CACJ,KAAK9C,OAAO+C,SAAS,CAAC,SAAS,CAAC,CAClC,4CAlFWhD,GAAqBiD,EAAAC,CAAA,CAAA,CAAA,2BAArBlD,EAAqBmD,UAAA,CAAA,CAAA,mBAAA,CAAA,EAAAC,MAAA,EAAAC,KAAA,EAAAC,SAAA,SAAAC,EAAAC,EAAA,CAAAD,EAAA,ICrBlCE,EAAA,EAAA,GAAA,EAAGC,EAAA,EAAA,sBAAA,EAAoBC,EAAA,6BDqBV3D,CAAqB,GAAA",
  "names": ["WorkerConfigComponent", "router", "activeSection", "config", "name", "language", "timezone", "theme", "emailNotifications", "autoSave", "currency", "dateFormat", "languages", "timezones", "currencies", "dateFormats", "constructor", "ngOnInit", "savedConfig", "localStorage", "getItem", "__spreadValues", "JSON", "parse", "setActiveSection", "section", "saveConfiguration", "setItem", "stringify", "showNotification", "resetConfiguration", "confirm", "removeItem", "message", "type", "console", "log", "exportConfiguration", "dataStr", "dataUri", "encodeURIComponent", "exportFileDefaultName", "linkElement", "document", "createElement", "setAttribute", "click", "goBack", "navigate", "\u0275\u0275directiveInject", "Router", "selectors", "decls", "vars", "template", "rf", "ctx", "\u0275\u0275elementStart", "\u0275\u0275text", "\u0275\u0275elementEnd"]
}
