{"version":3,"sources":["node_modules/@capacitor/preferences/dist/esm/index.js","src/app/functionalities/configuration/configuration.component.ts","src/app/functionalities/configuration/configuration.component.html"],"sourcesContent":["import { registerPlugin } from '@capacitor/core';\nconst Preferences = registerPlugin('Preferences', {\n  web: () => import('./web').then(m => new m.PreferencesWeb())\n});\nexport * from './definitions';\nexport { Preferences };\n","import { Component, OnInit, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { TranslateStore } from '@ngx-translate/core'; // Añadido para resolver el error\nimport { Preferences } from '@capacitor/preferences';\nimport { Usuario, AppConfig } from '../../models/interfaces';\n\n\ninterface Language {\n  code: string;\n  name: string;\n}\n\ninterface Timezone {\n  value: string;\n  label: string;\n}\n\ninterface Currency {\n  code: string;\n  name: string;\n  symbol: string;\n}\n\ninterface DateFormat {\n  value: string;\n  example: string;\n}\n\n@Component({\n  selector: 'app-configuration',\n  standalone: true,\n  imports: [CommonModule, FormsModule, TranslateModule],\n  templateUrl: './configuration.component.html',\n  styleUrl: './configuration.component.scss',\n  providers: [TranslateStore]\n})\nexport class ConfigurationComponent implements OnInit {\n  activeSection: string = 'general';\n  userRole: string = '';\n  isDarkMode: boolean = false;\n  inactivityTimer: any;\n  currentUser: Usuario | null = null;\n  config: AppConfig = {\n    name: '',\n    language: 'es',\n    timezone: 'America/Mexico_City',\n    theme: 'light',\n    textSize: 2,\n    autoSave: false,\n    currency: 'MXN',\n    dateFormat: 'DD/MM/YYYY',\n    autoLogout: false,\n    autoLogoutTime: '15',\n    debugMode: false,\n    // Adding compatibility with other interface properties\n    idioma: 'es',\n    tema: 'light',\n    notificaciones: false\n  };\n\n  languages: Language[] = [\n    { code: 'es', name: 'Español' },\n    { code: 'en', name: 'English' },\n    { code: 'pt', name: 'Português' },\n    { code: 'fr', name: 'Français' }\n  ];\n\n  timezones: Timezone[] = [\n    { value: 'America/Mexico_City', label: 'Ciudad de México (GMT-6)' },\n    { value: 'America/Argentina/Buenos_Aires', label: 'Buenos Aires (GMT-3)' },\n    { value: 'America/Bogota', label: 'Bogotá (GMT-5)' },\n    { value: 'America/Santiago', label: 'Santiago (GMT-4)' },\n    { value: 'Europe/Madrid', label: 'Madrid (GMT+1)' }\n  ];\n\n  currencies: Currency[] = [\n    { code: 'MXN', name: 'Peso Mexicano', symbol: '$' },\n    { code: 'USD', name: 'Dólar Estadounidense', symbol: '$' },\n    { code: 'EUR', name: 'Euro', symbol: '€' },\n    { code: 'ARS', name: 'Peso Argentino', symbol: '$' },\n    { code: 'CLP', name: 'Peso Chileno', symbol: '$' }\n  ];\n\n  dateFormats: DateFormat[] = [\n    { value: 'DD/MM/YYYY', example: '31/12/2023' },\n    { value: 'MM/DD/YYYY', example: '12/31/2023' },\n    { value: 'YYYY-MM-DD', example: '2023-12-31' }\n  ];\n\n  private router: Router = inject(Router);\n  private translate: TranslateService = inject(TranslateService);\n\n  ngOnInit() {\n    // Cargar información del usuario desde Preferences\n    this.loadUserInfo();\n    // Cargar configuración desde Preferences\n    this.loadConfiguration();\n    // Configurar monitoreo de inactividad\n    this.setupInactivityMonitor();\n    // Inicializar idioma\n    this.changeLanguage();\n    // Aplicar tema\n    this.applyTheme();\n    // Aplicar tamaño de texto\n    this.applyTextSize();\n  }\n\n  async loadUserInfo() {\n    try {\n      // Obtener información del usuario desde Preferences\n      const userRole = await this.getPreference('userRole', 'worker');\n      const userEmail = await this.getPreference('userEmail', 'demo@ejemplo.com');\n      this.userRole = userRole;\n      // Crear usuario demo para la UI\n      this.currentUser = {\n        IdUsuario: '1',\n        Nombre: 'Usuario de Demostración',\n        Correo: userEmail,\n        Rol: userRole as 'admin' | 'worker' | 'user', // Cast to valid enum value\n        // Adding the missing required properties\n        Departamento: 'Sistemas',\n        Telefono: '555-1234',\n        Foto_Perfil: undefined,\n        // Adding all other required properties from Usuario interface\n        Email: userEmail\n      };\n    } catch (error) {\n      console.error('Error loading user info:', error);\n      this.showToast('Error al cargar información de usuario', 'danger');\n    }\n  }\n\n  async loadConfiguration() {\n    try {\n      // Intentar cargar configuración desde Preferences\n      const savedConfigStr = await this.getPreference('appConfig', '');\n      if (savedConfigStr) {\n        const savedConfig = JSON.parse(savedConfigStr);\n        this.config = { ...this.config, ...savedConfig };\n        \n        // Ensure compatibility between language/idioma and theme/tema\n        this.config.idioma = this.config.language;\n        this.config.tema = this.config.theme;\n      }\n\n      // Aplicar configuración cargada\n      this.isDarkMode = this.config.theme === 'dark';\n    } catch (error) {\n      console.error('Error loading configuration:', error);\n      this.showToast('Error al cargar la configuración', 'danger');\n    }\n  }\n\n  setActiveSection(section: string) {\n    this.activeSection = section;\n  }\n\n  async saveConfiguration() {\n    try {\n      // Ensure compatibility between properties\n      this.config.idioma = this.config.language;\n      this.config.tema = this.config.theme;\n      \n      // Guardar en Preferences\n      await this.setPreference('appConfig', JSON.stringify(this.config));\n      this.showToast('Configuración guardada exitosamente', 'success');\n      // Aplicar cambios\n      this.applyTheme();\n      this.applyTextSize();\n    } catch (error) {\n      console.error('Error saving configuration:', error);\n      this.showToast('Error al guardar la configuración', 'danger');\n    }\n  }\n\n  async resetConfiguration() {\n    if (confirm('¿Estás seguro de que deseas restablecer la configuración?')) {\n      try {\n        // Restablecer a valores predeterminados\n        this.config = {\n          name: '',\n          language: 'es',\n          timezone: 'America/Mexico_City',\n          theme: 'light',\n          textSize: 2,\n          autoSave: false,\n          currency: 'MXN',\n          dateFormat: 'DD/MM/YYYY',\n          autoLogout: false,\n          autoLogoutTime: '15',\n          debugMode: false,\n          // Adding compatibility with other interface properties\n          idioma: 'es',\n          tema: 'light',\n          notificaciones: false\n        };\n        // Eliminar de Preferences\n        await Preferences.remove({ key: 'appConfig' });\n        // Aplicar configuración predeterminada\n        this.isDarkMode = false;\n        this.applyTheme();\n        this.applyTextSize();\n        this.changeLanguage();\n        this.showToast('Configuración restablecida correctamente', 'success');\n      } catch (error) {\n        console.error('Error resetting configuration:', error);\n        this.showToast('Error al restablecer la configuración', 'danger');\n      }\n    }\n  }\n\n  showToast(message: string, color: string = 'primary') {\n    // Implementación simple de alerta\n    alert(message);\n  }\n\n  // Funcionalidad de cambio de idioma\n  changeLanguage() {\n    // Update both language and idioma\n    this.config.idioma = this.config.language;\n    this.translate.use(this.config.language);\n  }\n\n  // Funcionalidad de tema oscuro/claro\n  toggleDarkMode() {\n    this.config.theme = this.isDarkMode ? 'dark' : 'light';\n    // Update tema as well\n    this.config.tema = this.config.theme;\n    this.applyTheme();\n  }\n\n  applyTheme() {\n    document.body.classList.toggle('dark', this.config.theme === 'dark');\n  }\n\n  // Tamaño de texto\n  applyTextSize() {\n    const sizeClass = `text-size-${this.config.textSize}`;\n    document.body.classList.remove('text-size-1', 'text-size-2', 'text-size-3');\n    document.body.classList.add(sizeClass);\n  }\n\n  // Cambio de contraseña\n  changePassword() {\n    const currentPassword = prompt('Ingrese su contraseña actual:');\n    if (!currentPassword) return;\n    const newPassword = prompt('Ingrese su nueva contraseña:');\n    if (!newPassword) return;\n    const confirmPassword = prompt('Confirme su nueva contraseña:');\n    if (!confirmPassword) return;\n    if (newPassword !== confirmPassword) {\n      this.showToast('Las contraseñas no coinciden', 'danger');\n      return;\n    }\n    if (newPassword.length < 6) {\n      this.showToast('La contraseña debe tener al menos 6 caracteres', 'danger');\n      return;\n    }\n    // Simular cambio de contraseña sin acceder a la base de datos\n    this.showToast('Contraseña actualizada correctamente (simulado)', 'success');\n  }\n\n  // Limpiar caché\n  async clearCache() {\n    if (confirm('¿Estás seguro de que deseas limpiar la caché? Esto eliminará datos temporales.')) {\n      try {\n        // Limpiar datos temporales de la aplicación\n        // Esto usaría la API FileSystem de Capacitor en una aplicación real\n        this.showToast('Caché limpiada correctamente', 'success');\n      } catch (error) {\n        console.error('Error clearing cache:', error);\n        this.showToast('Error al limpiar caché', 'danger');\n      }\n    }\n  }\n\n  // Exportar configuración\n  exportConfiguration() {\n    const dataStr = JSON.stringify(this.config, null, 2);\n    const dataUri = 'data:application/json;charset=utf-8,' + encodeURIComponent(dataStr);\n    const exportFileDefaultName = 'app-config.json';\n    const linkElement = document.createElement('a');\n    linkElement.setAttribute('href', dataUri);\n    linkElement.setAttribute('download', exportFileDefaultName);\n    linkElement.click();\n  }\n\n  // Monitoreo de inactividad para auto-logout\n  setupInactivityMonitor() {\n    if (this.config.autoLogout) {\n      this.setupAutoLogout();\n    }\n  }\n\n  setupAutoLogout() {\n    // Limpiar cualquier temporizador existente\n    if (this.inactivityTimer) {\n      clearTimeout(this.inactivityTimer);\n    }\n    // Eventos para reiniciar el temporizador de inactividad\n    const events = ['mousedown', 'mousemove', 'keypress', 'scroll', 'touchstart'];\n    // Tiempo de inactividad en minutos convertido a milisegundos\n    const timeoutInMinutes = parseInt(this.config.autoLogoutTime);\n    const timeoutInMs = timeoutInMinutes * 60 * 1000;\n    const resetInactivityTimer = () => {\n      if (this.inactivityTimer) {\n        clearTimeout(this.inactivityTimer);\n      }\n      this.inactivityTimer = setTimeout(() => this.autoLogoutDueToInactivity(), timeoutInMs);\n    };\n    // Registrar eventos para reiniciar el temporizador\n    events.forEach(event => {\n      window.addEventListener(event, resetInactivityTimer, false);\n    });\n    // Iniciar el temporizador\n    resetInactivityTimer();\n  }\n\n  autoLogoutDueToInactivity() {\n    // En lugar de cerrar sesión, solo mostramos un mensaje\n    this.showToast('Tu sesión ha expirado por inactividad. En una aplicación real, se cerraría la sesión.', 'warning');\n    // Reiniciar el temporizador\n    this.setupAutoLogout();\n  }\n\n  goBack(): void {\n    if (this.userRole === 'admin') {\n      this.router.navigate(['/admin1']); // Updated to match your routes\n    } else if (this.userRole === 'worker') {\n      this.router.navigate(['/worker']);\n    } else {\n      this.router.navigate(['/']);\n    }\n  }\n\n  // Métodos auxiliares para Capacitor Preferences\n  private async getPreference(key: string, defaultValue: string): Promise<string> {\n    const { value } = await Preferences.get({ key });\n    return value || defaultValue;\n  }\n\n  private async setPreference(key: string, value: string): Promise<void> {\n    await Preferences.set({ key, value });\n  }\n}","<div class=\"admin-config-container\">\n  <aside class=\"sidebar\">\n    <ul class=\"sidebar-menu\">\n      <li>\n        <a [class.active]=\"activeSection === 'general'\"\n          (click)=\"setActiveSection('general')\"\n          href=\"javascript:void(0)\">\n          {{ 'CONFIG.GENERAL' | translate }}\n        </a>\n      </li>\n      <li>\n        <a [class.active]=\"activeSection === 'appearance'\"\n          (click)=\"setActiveSection('appearance')\"\n          href=\"javascript:void(0)\">\n          {{ 'CONFIG.APPEARANCE' | translate }}\n        </a>\n      </li>\n      <li>\n        <a [class.active]=\"activeSection === 'regional'\"\n          (click)=\"setActiveSection('regional')\"\n          href=\"javascript:void(0)\">\n          {{ 'CONFIG.REGIONAL' | translate }}\n        </a>\n      </li>\n      <li>\n        <a [class.active]=\"activeSection === 'security'\"\n          (click)=\"setActiveSection('security')\"\n          href=\"javascript:void(0)\">\n          {{ 'CONFIG.SECURITY' | translate }}\n        </a>\n      </li>\n      <li>\n        <a [class.active]=\"activeSection === 'advanced'\"\n          (click)=\"setActiveSection('advanced')\"\n          href=\"javascript:void(0)\">\n          {{ 'CONFIG.ADVANCED' | translate }}\n        </a>\n      </li>\n    </ul>\n  </aside>\n  <main class=\"config-content\">\n    <form #configForm=\"ngForm\" (ngSubmit)=\"saveConfiguration()\">\n      <!-- General Configuration -->\n      <section class=\"config-section\" [ngClass]=\"{'active': activeSection === 'general'}\"\n        *ngIf=\"activeSection === 'general'\">\n        <h2>{{ 'CONFIG.GENERAL' | translate }}</h2>\n        <div class=\"form-group\" *ngIf=\"userRole === 'admin'\">\n          <label for=\"company-name\">{{ 'CONFIG.COMPANY_NAME' | translate }}</label>\n          <input\n            type=\"text\"\n            id=\"company-name\"\n            class=\"form-control\"\n            [(ngModel)]=\"config.name\"\n            name=\"companyName\"\n            placeholder=\"{{ 'CONFIG.ENTER_COMPANY_NAME' | translate }}\"\n            required\n          >\n        </div>\n        <div class=\"form-group\">\n          <label>{{ 'CONFIG.USER_INFO' | translate }}</label>\n          <div class=\"user-info\">\n            <p><strong>{{ 'CONFIG.NAME' | translate }}:</strong> {{ currentUser?.Nombre }}</p>\n            <p><strong>{{ 'CONFIG.EMAIL' | translate }}:</strong> {{ currentUser?.Correo }}</p>\n            <p><strong>{{ 'CONFIG.ROLE' | translate }}:</strong> {{ userRole | titlecase }}</p>\n            <p><strong>{{ 'CONFIG.DEPARTMENT' | translate }}:</strong> {{ currentUser?.Departamento }}</p>\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <div class=\"checkbox-container\">\n            <input\n              type=\"checkbox\"\n              id=\"auto-save\"\n              [(ngModel)]=\"config.autoSave\"\n              name=\"autoSave\">\n            <label for=\"auto-save\" class=\"checkbox-label\">{{ 'CONFIG.AUTO_SAVE' | translate }}</label>\n          </div>\n        </div>\n      </section>\n      \n      <!-- Appearance -->\n      <section class=\"config-section\" [ngClass]=\"{'active': activeSection === 'appearance'}\"\n        *ngIf=\"activeSection === 'appearance'\">\n        <h2>{{ 'CONFIG.APPEARANCE' | translate }}</h2>\n        <div class=\"form-group\">\n          <label>{{ 'CONFIG.APP_THEME' | translate }}</label>\n          <div class=\"toggle-switch\">\n            <div class=\"toggle-label\">{{ 'CONFIG.LIGHT_MODE' | translate }}</div>\n            <label class=\"switch\">\n              <input\n                type=\"checkbox\"\n                [(ngModel)]=\"isDarkMode\"\n                name=\"darkMode\"\n                (change)=\"toggleDarkMode()\">\n              <span class=\"slider round\"></span>\n            </label>\n            <div class=\"toggle-label\">{{ 'CONFIG.DARK_MODE' | translate }}</div>\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"text-size\">{{ 'CONFIG.TEXT_SIZE' | translate }}</label>\n          <div class=\"text-size-control\">\n            <span class=\"size-label small\">A</span>\n            <input\n              type=\"range\"\n              id=\"text-size\"\n              min=\"1\"\n              max=\"3\"\n              step=\"1\"\n              [(ngModel)]=\"config.textSize\"\n              name=\"textSize\"\n              (change)=\"applyTextSize()\">\n            <span class=\"size-label large\">A</span>\n          </div>\n        </div>\n      </section>\n      \n      <!-- Regional Configuration -->\n      <section class=\"config-section\" [ngClass]=\"{'active': activeSection === 'regional'}\"\n        *ngIf=\"activeSection === 'regional'\">\n        <h2>{{ 'CONFIG.REGIONAL' | translate }}</h2>\n        <div class=\"form-group\">\n          <label for=\"language\">{{ 'CONFIG.LANGUAGE' | translate }}</label>\n          <select\n            id=\"language\"\n            class=\"form-control\"\n            [(ngModel)]=\"config.language\"\n            name=\"language\"\n            (change)=\"changeLanguage()\"\n            required\n          >\n            <option *ngFor=\"let lang of languages\" [value]=\"lang.code\">\n              {{ lang.name }}\n            </option>\n          </select>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"timezone\">{{ 'CONFIG.TIMEZONE' | translate }}</label>\n          <select\n            id=\"timezone\"\n            class=\"form-control\"\n            [(ngModel)]=\"config.timezone\"\n            name=\"timezone\"\n            required\n          >\n            <option *ngFor=\"let tz of timezones\" [value]=\"tz.value\">\n              {{ tz.label }}\n            </option>\n          </select>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"dateFormat\">{{ 'CONFIG.DATE_FORMAT' | translate }}</label>\n          <select\n            id=\"dateFormat\"\n            class=\"form-control\"\n            [(ngModel)]=\"config.dateFormat\"\n            name=\"dateFormat\"\n            required\n          >\n            <option *ngFor=\"let format of dateFormats\" [value]=\"format.value\">\n              {{ format.example }}\n            </option>\n          </select>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"currency\">{{ 'CONFIG.CURRENCY' | translate }}</label>\n          <select\n            id=\"currency\"\n            class=\"form-control\"\n            [(ngModel)]=\"config.currency\"\n            name=\"currency\"\n            required\n          >\n            <option *ngFor=\"let currency of currencies\" [value]=\"currency.code\">\n              {{ currency.name }} ({{ currency.symbol }})\n            </option>\n          </select>\n        </div>\n      </section>\n      \n      <!-- Security -->\n      <section class=\"config-section\" [ngClass]=\"{'active': activeSection === 'security'}\"\n        *ngIf=\"activeSection === 'security'\">\n        <h2>{{ 'CONFIG.SECURITY' | translate }}</h2>\n        <div class=\"form-group\">\n          <button type=\"button\" class=\"btn btn-primary\" (click)=\"changePassword()\">\n            {{ 'CONFIG.CHANGE_PASSWORD' | translate }}\n          </button>\n        </div>\n        <div class=\"form-group\">\n          <div class=\"toggle-container\">\n            <label class=\"toggle-label\" for=\"auto-logout\">{{ 'CONFIG.AUTO_LOGOUT' | translate }}</label>\n            <div class=\"toggle-switch\">\n              <label class=\"switch\">\n                <input\n                  type=\"checkbox\"\n                  id=\"auto-logout\"\n                  [(ngModel)]=\"config.autoLogout\"\n                  name=\"autoLogout\"\n                  (change)=\"setupInactivityMonitor()\">\n                <span class=\"slider round\"></span>\n              </label>\n            </div>\n          </div>\n        </div>\n        <div class=\"form-group\" *ngIf=\"config.autoLogout\">\n          <label for=\"autoLogoutTime\">{{ 'CONFIG.AUTO_LOGOUT_TIME' | translate }}</label>\n          <select\n            id=\"autoLogoutTime\"\n            class=\"form-control\"\n            [(ngModel)]=\"config.autoLogoutTime\"\n            name=\"autoLogoutTime\"\n            (change)=\"setupAutoLogout()\"\n            required\n          >\n            <option value=\"5\">5 {{ 'CONFIG.MINUTES' | translate }}</option>\n            <option value=\"15\">15 {{ 'CONFIG.MINUTES' | translate }}</option>\n            <option value=\"30\">30 {{ 'CONFIG.MINUTES' | translate }}</option>\n            <option value=\"60\">1 {{ 'CONFIG.HOUR' | translate }}</option>\n          </select>\n        </div>\n      </section>\n      \n      <!-- Advanced Configuration -->\n      <section class=\"config-section\" [ngClass]=\"{'active': activeSection === 'advanced'}\"\n        *ngIf=\"activeSection === 'advanced'\">\n        <h2>{{ 'CONFIG.ADVANCED' | translate }}</h2>\n        <!-- Admin options -->\n        <div class=\"admin-options\" *ngIf=\"userRole === 'admin'\">\n          <h3>{{ 'CONFIG.ADMIN_OPTIONS' | translate }}</h3>\n          <div class=\"form-group\">\n            <div class=\"toggle-container\">\n              <label class=\"toggle-label\" for=\"debug-mode\">{{ 'CONFIG.DEBUG_MODE' | translate }}</label>\n              <div class=\"toggle-switch\">\n                <label class=\"switch\">\n                  <input\n                    type=\"checkbox\"\n                    id=\"debug-mode\"\n                    [(ngModel)]=\"config.debugMode\"\n                    name=\"debugMode\">\n                  <span class=\"slider round\"></span>\n                </label>\n              </div>\n            </div>\n            <small *ngIf=\"config.debugMode\">{{ 'CONFIG.DEBUG_WARNING' | translate }}</small>\n          </div>\n        </div>\n        <div class=\"button-group\">\n          <button type=\"button\" class=\"btn btn-secondary\" (click)=\"clearCache()\">\n            {{ 'CONFIG.CLEAR_CACHE' | translate }}\n          </button>\n          <button type=\"button\" class=\"btn btn-secondary\" (click)=\"exportConfiguration()\">\n            {{ 'CONFIG.EXPORT_CONFIG' | translate }}\n          </button>\n          <button type=\"button\" class=\"btn btn-danger\" (click)=\"resetConfiguration()\">\n            {{ 'CONFIG.RESET_CONFIG' | translate }}\n          </button>\n        </div>\n      </section>\n      \n      <!-- Action buttons -->\n      <div class=\"action-buttons\">\n        <button type=\"button\" class=\"btn btn-secondary\" (click)=\"goBack()\">\n          {{ 'COMMON.BACK' | translate }}\n        </button>\n        <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!configForm.form.valid\">\n          {{ 'COMMON.SAVE' | translate }}\n        </button>\n      </div>\n    </form>\n  </main>\n</div>"],"mappings":"2lBACA,IAAMA,EAAcC,EAAe,cAAe,CAChD,IAAK,IAAM,OAAO,qBAAO,EAAE,KAAKC,GAAK,IAAIA,EAAE,cAAgB,CAC7D,CAAC,2DE2COC,EAAA,EAAA,MAAA,EAAA,EAAqD,EAAA,QAAA,EAAA,EACzBC,EAAA,CAAA,mBAAuCC,EAAA,EACjEF,EAAA,EAAA,QAAA,EAAA,mBAIEG,EAAA,gBAAA,SAAAC,EAAA,CAAAC,EAAAC,CAAA,EAAA,IAAAC,EAAAC,EAAA,CAAA,EAAAC,OAAAC,EAAAH,EAAAI,OAAAC,KAAAR,CAAA,IAAAG,EAAAI,OAAAC,KAAAR,GAAAS,EAAAT,CAAA,CAAA,CAAA,EAJFF,EAAA,EAQC,qBATyBY,EAAA,CAAA,EAAAC,EAAAC,EAAA,EAAA,EAAA,qBAAA,CAAA,EAOxBF,EAAA,CAAA,EAAAG,EAAA,cAAAD,EAAA,EAAA,EAAA,2BAAA,CAAA,EAFAE,EAAA,UAAAX,EAAAI,OAAAC,IAAA,sCATNZ,EAAA,EAAA,UAAA,EAAA,EACsC,EAAA,IAAA,EAChCC,EAAA,CAAA,mBAAkCC,EAAA,EACtCiB,EAAA,EAAAC,GAAA,EAAA,EAAA,MAAA,EAAA,EAYApB,EAAA,EAAA,MAAA,EAAA,EAAwB,EAAA,OAAA,EACfC,EAAA,CAAA,mBAAoCC,EAAA,EAC3CF,EAAA,EAAA,MAAA,EAAA,EAAuB,GAAA,GAAA,EAClB,GAAA,QAAA,EAAQC,EAAA,EAAA,oBAAgCC,EAAA,EAAUD,EAAA,EAAA,EAAyBC,EAAA,EAC9EF,EAAA,GAAA,GAAA,EAAG,GAAA,QAAA,EAAQC,EAAA,EAAA,oBAAiCC,EAAA,EAAUD,EAAA,EAAA,EAAyBC,EAAA,EAC/EF,EAAA,GAAA,GAAA,EAAG,GAAA,QAAA,EAAQC,EAAA,EAAA,oBAAgCC,EAAA,EAAUD,EAAA,EAAA,oBAA0BC,EAAA,EAC/EF,EAAA,GAAA,GAAA,EAAG,GAAA,QAAA,EAAQC,EAAA,EAAA,oBAAsCC,EAAA,EAAUD,EAAA,EAAA,EAA+BC,EAAA,EAAI,EAC1F,EAERF,EAAA,GAAA,MAAA,EAAA,EAAwB,GAAA,MAAA,EAAA,EACU,GAAA,QAAA,EAAA,EAI5BG,EAAA,gBAAA,SAAAC,EAAA,CAAAC,EAAAgB,CAAA,EAAA,IAAAd,EAAAC,EAAA,EAAAC,OAAAC,EAAAH,EAAAI,OAAAW,SAAAlB,CAAA,IAAAG,EAAAI,OAAAW,SAAAlB,GAAAS,EAAAT,CAAA,CAAA,CAAA,EAHFF,EAAA,EAKAF,EAAA,GAAA,QAAA,EAAA,EAA8CC,EAAA,EAAA,oBAAoCC,EAAA,EAAQ,EACtF,EACF,oBAjCwBqB,EAAA,UAAAC,EAAA,GAAAC,EAAAlB,EAAAmB,gBAAA,SAAA,CAAA,EAE1BZ,EAAA,CAAA,EAAAC,EAAAC,EAAA,EAAA,GAAA,gBAAA,CAAA,EACqBF,EAAA,CAAA,EAAAS,EAAA,OAAAhB,EAAAoB,WAAA,OAAA,EAahBb,EAAA,CAAA,EAAAC,EAAAC,EAAA,EAAA,GAAA,kBAAA,CAAA,EAEMF,EAAA,CAAA,EAAAc,EAAA,GAAAZ,EAAA,GAAA,GAAA,aAAA,EAAA,GAAA,EAA0CF,EAAA,CAAA,EAAAc,EAAA,IAAArB,EAAAsB,aAAA,KAAA,KAAAtB,EAAAsB,YAAAC,OAAA,EAAA,EAC1ChB,EAAA,CAAA,EAAAc,EAAA,GAAAZ,EAAA,GAAA,GAAA,cAAA,EAAA,GAAA,EAA2CF,EAAA,CAAA,EAAAc,EAAA,IAAArB,EAAAsB,aAAA,KAAA,KAAAtB,EAAAsB,YAAAE,OAAA,EAAA,EAC3CjB,EAAA,CAAA,EAAAc,EAAA,GAAAZ,EAAA,GAAA,GAAA,aAAA,EAAA,GAAA,EAA0CF,EAAA,CAAA,EAAAc,EAAA,IAAAZ,EAAA,GAAA,GAAAT,EAAAoB,QAAA,EAAA,EAAA,EAC1Cb,EAAA,CAAA,EAAAc,EAAA,GAAAZ,EAAA,GAAA,GAAA,mBAAA,EAAA,GAAA,EAAgDF,EAAA,CAAA,EAAAc,EAAA,IAAArB,EAAAsB,aAAA,KAAA,KAAAtB,EAAAsB,YAAAG,aAAA,EAAA,EAQzDlB,EAAA,CAAA,EAAAI,EAAA,UAAAX,EAAAI,OAAAW,QAAA,EAE4CR,EAAA,CAAA,EAAAC,EAAAC,EAAA,GAAA,GAAA,kBAAA,CAAA,sCAMpDhB,EAAA,EAAA,UAAA,EAAA,EACyC,EAAA,IAAA,EACnCC,EAAA,CAAA,mBAAqCC,EAAA,EACzCF,EAAA,EAAA,MAAA,EAAA,EAAwB,EAAA,OAAA,EACfC,EAAA,CAAA,mBAAoCC,EAAA,EAC3CF,EAAA,EAAA,MAAA,EAAA,EAA2B,EAAA,MAAA,EAAA,EACCC,EAAA,EAAA,oBAAqCC,EAAA,EAC/DF,EAAA,GAAA,QAAA,EAAA,EAAsB,GAAA,QAAA,EAAA,EAGlBG,EAAA,gBAAA,SAAAC,EAAA,CAAAC,EAAA4B,CAAA,EAAA,IAAA1B,EAAAC,EAAA,EAAAC,OAAAC,EAAAH,EAAA2B,WAAA9B,CAAA,IAAAG,EAAA2B,WAAA9B,GAAAS,EAAAT,CAAA,CAAA,CAAA,EAEA+B,EAAA,SAAA,UAAA,CAAA9B,EAAA4B,CAAA,EAAA,IAAA1B,EAAAC,EAAA,EAAA,OAAAK,EAAUN,EAAA6B,eAAA,CAAgB,CAAA,CAAA,EAJ5BlC,EAAA,EAKAmC,EAAA,GAAA,OAAA,EAAA,EACFnC,EAAA,EACAF,EAAA,GAAA,MAAA,EAAA,EAA0BC,EAAA,EAAA,oBAAoCC,EAAA,EAAM,EAChE,EAERF,EAAA,GAAA,MAAA,EAAA,EAAwB,GAAA,QAAA,EAAA,EACCC,EAAA,EAAA,oBAAoCC,EAAA,EAC3DF,EAAA,GAAA,MAAA,EAAA,EAA+B,GAAA,OAAA,EAAA,EACEC,EAAA,GAAA,GAAA,EAACC,EAAA,EAChCF,EAAA,GAAA,QAAA,EAAA,EAMEG,EAAA,gBAAA,SAAAC,EAAA,CAAAC,EAAA4B,CAAA,EAAA,IAAA1B,EAAAC,EAAA,EAAAC,OAAAC,EAAAH,EAAAI,OAAA2B,SAAAlC,CAAA,IAAAG,EAAAI,OAAA2B,SAAAlC,GAAAS,EAAAT,CAAA,CAAA,CAAA,EAEA+B,EAAA,SAAA,UAAA,CAAA9B,EAAA4B,CAAA,EAAA,IAAA1B,EAAAC,EAAA,EAAA,OAAAK,EAAUN,EAAAgC,cAAA,CAAe,CAAA,CAAA,EAR3BrC,EAAA,EASAF,EAAA,GAAA,OAAA,EAAA,EAA+BC,EAAA,GAAA,GAAA,EAACC,EAAA,EAAO,EACnC,EACF,oBAjCwBqB,EAAA,UAAAC,EAAA,GAAAC,EAAAlB,EAAAmB,gBAAA,YAAA,CAAA,EAE1BZ,EAAA,CAAA,EAAAC,EAAAC,EAAA,EAAA,EAAA,mBAAA,CAAA,EAEKF,EAAA,CAAA,EAAAC,EAAAC,EAAA,EAAA,GAAA,kBAAA,CAAA,EAEqBF,EAAA,CAAA,EAAAC,EAAAC,EAAA,GAAA,GAAA,mBAAA,CAAA,EAItBF,EAAA,CAAA,EAAAI,EAAA,UAAAX,EAAA2B,UAAA,EAKsBpB,EAAA,CAAA,EAAAC,EAAAC,EAAA,GAAA,GAAA,kBAAA,CAAA,EAILF,EAAA,CAAA,EAAAC,EAAAC,EAAA,GAAA,GAAA,kBAAA,CAAA,EASnBF,EAAA,CAAA,EAAAI,EAAA,UAAAX,EAAAI,OAAA2B,QAAA,6BAsBFtC,EAAA,EAAA,SAAA,EAAA,EACEC,EAAA,CAAA,EACFC,EAAA,0BAFuCqB,EAAA,QAAAiB,EAAAC,IAAA,EACrC3B,EAAA,EAAAc,EAAA,IAAAY,EAAA5B,KAAA,GAAA,6BAaFZ,EAAA,EAAA,SAAA,EAAA,EACEC,EAAA,CAAA,EACFC,EAAA,0BAFqCqB,EAAA,QAAAmB,EAAAC,KAAA,EACnC7B,EAAA,EAAAc,EAAA,IAAAc,EAAAE,MAAA,GAAA,6BAaF5C,EAAA,EAAA,SAAA,EAAA,EACEC,EAAA,CAAA,EACFC,EAAA,0BAF2CqB,EAAA,QAAAsB,EAAAF,KAAA,EACzC7B,EAAA,EAAAc,EAAA,IAAAiB,EAAAC,QAAA,GAAA,6BAaF9C,EAAA,EAAA,SAAA,EAAA,EACEC,EAAA,CAAA,EACFC,EAAA,0BAF4CqB,EAAA,QAAAwB,EAAAN,IAAA,EAC1C3B,EAAA,EAAAkC,EAAA,IAAAD,EAAAnC,KAAA,KAAAmC,EAAAE,OAAA,IAAA,sCAxDRjD,EAAA,EAAA,UAAA,EAAA,EACuC,EAAA,IAAA,EACjCC,EAAA,CAAA,mBAAmCC,EAAA,EACvCF,EAAA,EAAA,MAAA,EAAA,EAAwB,EAAA,QAAA,EAAA,EACAC,EAAA,CAAA,mBAAmCC,EAAA,EACzDF,EAAA,EAAA,SAAA,EAAA,EAGEG,EAAA,gBAAA,SAAAC,EAAA,CAAAC,EAAA6C,CAAA,EAAA,IAAA3C,EAAAC,EAAA,EAAAC,OAAAC,EAAAH,EAAAI,OAAAwC,SAAA/C,CAAA,IAAAG,EAAAI,OAAAwC,SAAA/C,GAAAS,EAAAT,CAAA,CAAA,CAAA,EAEA+B,EAAA,SAAA,UAAA,CAAA9B,EAAA6C,CAAA,EAAA,IAAA3C,EAAAC,EAAA,EAAA,OAAAK,EAAUN,EAAA6C,eAAA,CAAgB,CAAA,CAAA,EAG1BjC,EAAA,EAAAkC,GAAA,EAAA,EAAA,SAAA,EAAA,EAGFnD,EAAA,EAAS,EAEXF,EAAA,GAAA,MAAA,EAAA,EAAwB,GAAA,QAAA,EAAA,EACAC,EAAA,EAAA,oBAAmCC,EAAA,EACzDF,EAAA,GAAA,SAAA,EAAA,EAGEG,EAAA,gBAAA,SAAAC,EAAA,CAAAC,EAAA6C,CAAA,EAAA,IAAA3C,EAAAC,EAAA,EAAAC,OAAAC,EAAAH,EAAAI,OAAA2C,SAAAlD,CAAA,IAAAG,EAAAI,OAAA2C,SAAAlD,GAAAS,EAAAT,CAAA,CAAA,CAAA,EAIAe,EAAA,GAAAoC,GAAA,EAAA,EAAA,SAAA,EAAA,EAGFrD,EAAA,EAAS,EAEXF,EAAA,GAAA,MAAA,EAAA,EAAwB,GAAA,QAAA,EAAA,EACEC,EAAA,EAAA,oBAAsCC,EAAA,EAC9DF,EAAA,GAAA,SAAA,EAAA,EAGEG,EAAA,gBAAA,SAAAC,EAAA,CAAAC,EAAA6C,CAAA,EAAA,IAAA3C,EAAAC,EAAA,EAAAC,OAAAC,EAAAH,EAAAI,OAAA6C,WAAApD,CAAA,IAAAG,EAAAI,OAAA6C,WAAApD,GAAAS,EAAAT,CAAA,CAAA,CAAA,EAIAe,EAAA,GAAAsC,GAAA,EAAA,EAAA,SAAA,EAAA,EAGFvD,EAAA,EAAS,EAEXF,EAAA,GAAA,MAAA,EAAA,EAAwB,GAAA,QAAA,EAAA,EACAC,EAAA,EAAA,oBAAmCC,EAAA,EACzDF,EAAA,GAAA,SAAA,EAAA,EAGEG,EAAA,gBAAA,SAAAC,EAAA,CAAAC,EAAA6C,CAAA,EAAA,IAAA3C,EAAAC,EAAA,EAAAC,OAAAC,EAAAH,EAAAI,OAAA+C,SAAAtD,CAAA,IAAAG,EAAAI,OAAA+C,SAAAtD,GAAAS,EAAAT,CAAA,CAAA,CAAA,EAIAe,EAAA,GAAAwC,GAAA,EAAA,EAAA,SAAA,EAAA,EAGFzD,EAAA,EAAS,EACL,oBA3DwBqB,EAAA,UAAAC,EAAA,GAAAC,EAAAlB,EAAAmB,gBAAA,UAAA,CAAA,EAE1BZ,EAAA,CAAA,EAAAC,EAAAC,EAAA,EAAA,GAAA,iBAAA,CAAA,EAEoBF,EAAA,CAAA,EAAAC,EAAAC,EAAA,EAAA,GAAA,iBAAA,CAAA,EAIpBF,EAAA,CAAA,EAAAI,EAAA,UAAAX,EAAAI,OAAAwC,QAAA,EAKyBrC,EAAA,EAAAS,EAAA,UAAAhB,EAAAqD,SAAA,EAML9C,EAAA,CAAA,EAAAC,EAAAC,EAAA,GAAA,GAAA,iBAAA,CAAA,EAIpBF,EAAA,CAAA,EAAAI,EAAA,UAAAX,EAAAI,OAAA2C,QAAA,EAIuBxC,EAAA,EAAAS,EAAA,UAAAhB,EAAAsD,SAAA,EAMD/C,EAAA,CAAA,EAAAC,EAAAC,EAAA,GAAA,GAAA,oBAAA,CAAA,EAItBF,EAAA,CAAA,EAAAI,EAAA,UAAAX,EAAAI,OAAA6C,UAAA,EAI2B1C,EAAA,EAAAS,EAAA,UAAAhB,EAAAuD,WAAA,EAMPhD,EAAA,CAAA,EAAAC,EAAAC,EAAA,GAAA,GAAA,iBAAA,CAAA,EAIpBF,EAAA,CAAA,EAAAI,EAAA,UAAAX,EAAAI,OAAA+C,QAAA,EAI6B5C,EAAA,EAAAS,EAAA,UAAAhB,EAAAwD,UAAA,sCAgCjC/D,EAAA,EAAA,MAAA,EAAA,EAAkD,EAAA,QAAA,EAAA,EACpBC,EAAA,CAAA,mBAA2CC,EAAA,EACvEF,EAAA,EAAA,SAAA,EAAA,EAGEG,EAAA,gBAAA,SAAAC,EAAA,CAAAC,EAAA2D,CAAA,EAAA,IAAAzD,EAAAC,EAAA,CAAA,EAAAC,OAAAC,EAAAH,EAAAI,OAAAsD,eAAA7D,CAAA,IAAAG,EAAAI,OAAAsD,eAAA7D,GAAAS,EAAAT,CAAA,CAAA,CAAA,EAEA+B,EAAA,SAAA,UAAA,CAAA9B,EAAA2D,CAAA,EAAA,IAAAzD,EAAAC,EAAA,CAAA,EAAA,OAAAK,EAAUN,EAAA2D,gBAAA,CAAiB,CAAA,CAAA,EAG3BlE,EAAA,EAAA,SAAA,EAAA,EAAkBC,EAAA,CAAA,mBAAoCC,EAAA,EACtDF,EAAA,EAAA,SAAA,EAAA,EAAmBC,EAAA,CAAA,oBAAqCC,EAAA,EACxDF,EAAA,GAAA,SAAA,EAAA,EAAmBC,EAAA,EAAA,oBAAqCC,EAAA,EACxDF,EAAA,GAAA,SAAA,EAAA,EAAmBC,EAAA,EAAA,oBAAiCC,EAAA,EAAS,EACtD,qBAbmBY,EAAA,CAAA,EAAAC,EAAAC,EAAA,EAAA,EAAA,yBAAA,CAAA,EAI1BF,EAAA,CAAA,EAAAI,EAAA,UAAAX,EAAAI,OAAAsD,cAAA,EAKkBnD,EAAA,CAAA,EAAAc,EAAA,KAAAZ,EAAA,EAAA,EAAA,gBAAA,EAAA,EAAA,EACCF,EAAA,CAAA,EAAAc,EAAA,MAAAZ,EAAA,GAAA,GAAA,gBAAA,EAAA,EAAA,EACAF,EAAA,CAAA,EAAAc,EAAA,MAAAZ,EAAA,GAAA,GAAA,gBAAA,EAAA,EAAA,EACAF,EAAA,CAAA,EAAAc,EAAA,KAAAZ,EAAA,GAAA,GAAA,aAAA,EAAA,EAAA,sCArCzBhB,EAAA,EAAA,UAAA,EAAA,EACuC,EAAA,IAAA,EACjCC,EAAA,CAAA,mBAAmCC,EAAA,EACvCF,EAAA,EAAA,MAAA,EAAA,EAAwB,EAAA,SAAA,EAAA,EACwBmC,EAAA,QAAA,UAAA,CAAA9B,EAAA8D,CAAA,EAAA,IAAA5D,EAAAC,EAAA,EAAA,OAAAK,EAASN,EAAA6D,eAAA,CAAgB,CAAA,CAAA,EACrEnE,EAAA,CAAA,mBACFC,EAAA,EAAS,EAEXF,EAAA,EAAA,MAAA,EAAA,EAAwB,EAAA,MAAA,EAAA,EACQ,GAAA,QAAA,EAAA,EACkBC,EAAA,EAAA,oBAAsCC,EAAA,EACpFF,EAAA,GAAA,MAAA,EAAA,EAA2B,GAAA,QAAA,EAAA,EACH,GAAA,QAAA,EAAA,EAIlBG,EAAA,gBAAA,SAAAC,EAAA,CAAAC,EAAA8D,CAAA,EAAA,IAAA5D,EAAAC,EAAA,EAAAC,OAAAC,EAAAH,EAAAI,OAAA0D,WAAAjE,CAAA,IAAAG,EAAAI,OAAA0D,WAAAjE,GAAAS,EAAAT,CAAA,CAAA,CAAA,EAEA+B,EAAA,SAAA,UAAA,CAAA9B,EAAA8D,CAAA,EAAA,IAAA5D,EAAAC,EAAA,EAAA,OAAAK,EAAUN,EAAA+D,uBAAA,CAAwB,CAAA,CAAA,EALpCpE,EAAA,EAMAmC,EAAA,GAAA,OAAA,EAAA,EACFnC,EAAA,EAAQ,EACJ,EACF,EAERiB,EAAA,GAAAoD,GAAA,GAAA,GAAA,MAAA,EAAA,EAgBFrE,EAAA,oBAxCgCqB,EAAA,UAAAC,EAAA,GAAAC,EAAAlB,EAAAmB,gBAAA,UAAA,CAAA,EAE1BZ,EAAA,CAAA,EAAAC,EAAAC,EAAA,EAAA,EAAA,iBAAA,CAAA,EAGAF,EAAA,CAAA,EAAAc,EAAA,IAAAZ,EAAA,EAAA,EAAA,wBAAA,EAAA,GAAA,EAK8CF,EAAA,CAAA,EAAAC,EAAAC,EAAA,GAAA,GAAA,oBAAA,CAAA,EAMxCF,EAAA,CAAA,EAAAI,EAAA,UAAAX,EAAAI,OAAA0D,UAAA,EAQevD,EAAA,CAAA,EAAAS,EAAA,OAAAhB,EAAAI,OAAA0D,UAAA,0BAuCrBrE,EAAA,EAAA,OAAA,EAAgCC,EAAA,CAAA,mBAAwCC,EAAA,SAAxCY,EAAA,EAAAC,EAAAC,EAAA,EAAA,EAAA,sBAAA,CAAA,sCAhBpChB,EAAA,EAAA,MAAA,EAAA,EAAwD,EAAA,IAAA,EAClDC,EAAA,CAAA,mBAAwCC,EAAA,EAC5CF,EAAA,EAAA,MAAA,EAAA,EAAwB,EAAA,MAAA,EAAA,EACQ,EAAA,QAAA,EAAA,EACiBC,EAAA,CAAA,mBAAqCC,EAAA,EAClFF,EAAA,EAAA,MAAA,EAAA,EAA2B,GAAA,QAAA,EAAA,EACH,GAAA,QAAA,EAAA,EAIlBG,EAAA,gBAAA,SAAAC,EAAA,CAAAC,EAAAmE,CAAA,EAAA,IAAAjE,EAAAC,EAAA,CAAA,EAAAC,OAAAC,EAAAH,EAAAI,OAAA8D,UAAArE,CAAA,IAAAG,EAAAI,OAAA8D,UAAArE,GAAAS,EAAAT,CAAA,CAAA,CAAA,EAHFF,EAAA,EAKAmC,EAAA,GAAA,OAAA,EAAA,EACFnC,EAAA,EAAQ,EACJ,EAERiB,EAAA,GAAAuD,GAAA,EAAA,EAAA,QAAA,EAAA,EACFxE,EAAA,EAAM,qBAhBFY,EAAA,CAAA,EAAAC,EAAAC,EAAA,EAAA,EAAA,sBAAA,CAAA,EAG6CF,EAAA,CAAA,EAAAC,EAAAC,EAAA,EAAA,EAAA,mBAAA,CAAA,EAMvCF,EAAA,CAAA,EAAAI,EAAA,UAAAX,EAAAI,OAAA8D,SAAA,EAMA3D,EAAA,CAAA,EAAAS,EAAA,OAAAhB,EAAAI,OAAA8D,SAAA,sCApBdzE,EAAA,EAAA,UAAA,EAAA,EACuC,EAAA,IAAA,EACjCC,EAAA,CAAA,mBAAmCC,EAAA,EAEvCiB,EAAA,EAAAwD,GAAA,GAAA,EAAA,MAAA,EAAA,EAmBA3E,EAAA,EAAA,MAAA,EAAA,EAA0B,EAAA,SAAA,CAAA,EACwBmC,EAAA,QAAA,UAAA,CAAA9B,EAAAuE,CAAA,EAAA,IAAArE,EAAAC,EAAA,EAAA,OAAAK,EAASN,EAAAsE,WAAA,CAAY,CAAA,CAAA,EACnE5E,EAAA,CAAA,mBACFC,EAAA,EACAF,EAAA,EAAA,SAAA,CAAA,EAAgDmC,EAAA,QAAA,UAAA,CAAA9B,EAAAuE,CAAA,EAAA,IAAArE,EAAAC,EAAA,EAAA,OAAAK,EAASN,EAAAuE,oBAAA,CAAqB,CAAA,CAAA,EAC5E7E,EAAA,EAAA,oBACFC,EAAA,EACAF,EAAA,GAAA,SAAA,EAAA,EAA6CmC,EAAA,QAAA,UAAA,CAAA9B,EAAAuE,CAAA,EAAA,IAAArE,EAAAC,EAAA,EAAA,OAAAK,EAASN,EAAAwE,mBAAA,CAAoB,CAAA,CAAA,EACxE9E,EAAA,EAAA,oBACFC,EAAA,EAAS,EACL,oBAjCwBqB,EAAA,UAAAC,EAAA,GAAAC,EAAAlB,EAAAmB,gBAAA,UAAA,CAAA,EAE1BZ,EAAA,CAAA,EAAAC,EAAAC,EAAA,EAAA,EAAA,iBAAA,CAAA,EAEwBF,EAAA,CAAA,EAAAS,EAAA,OAAAhB,EAAAoB,WAAA,OAAA,EAqBxBb,EAAA,CAAA,EAAAc,EAAA,IAAAZ,EAAA,EAAA,EAAA,oBAAA,EAAA,GAAA,EAGAF,EAAA,CAAA,EAAAc,EAAA,IAAAZ,EAAA,GAAA,GAAA,sBAAA,EAAA,GAAA,EAGAF,EAAA,CAAA,EAAAc,EAAA,IAAAZ,EAAA,GAAA,GAAA,qBAAA,EAAA,GAAA,GDvNZ,IAAagE,IAAsB,IAAA,CAA7B,MAAOA,CAAsB,CACjCtD,cAAwB,UACxBC,SAAmB,GACnBO,WAAsB,GACtB+C,gBACApD,YAA8B,KAC9BlB,OAAoB,CAClBC,KAAM,GACNuC,SAAU,KACVG,SAAU,sBACV4B,MAAO,QACP5C,SAAU,EACVhB,SAAU,GACVoC,SAAU,MACVF,WAAY,aACZa,WAAY,GACZJ,eAAgB,KAChBQ,UAAW,GAEXU,OAAQ,KACRC,KAAM,QACNC,eAAgB,IAGlBzB,UAAwB,CACtB,CAAEnB,KAAM,KAAM7B,KAAM,YAAS,EAC7B,CAAE6B,KAAM,KAAM7B,KAAM,SAAS,EAC7B,CAAE6B,KAAM,KAAM7B,KAAM,cAAW,EAC/B,CAAE6B,KAAM,KAAM7B,KAAM,aAAU,CAAE,EAGlCiD,UAAwB,CACtB,CAAElB,MAAO,sBAAuBC,MAAO,6BAA0B,EACjE,CAAED,MAAO,iCAAkCC,MAAO,sBAAsB,EACxE,CAAED,MAAO,iBAAkBC,MAAO,mBAAgB,EAClD,CAAED,MAAO,mBAAoBC,MAAO,kBAAkB,EACtD,CAAED,MAAO,gBAAiBC,MAAO,gBAAgB,CAAE,EAGrDmB,WAAyB,CACvB,CAAEtB,KAAM,MAAO7B,KAAM,gBAAiBqC,OAAQ,GAAG,EACjD,CAAER,KAAM,MAAO7B,KAAM,0BAAwBqC,OAAQ,GAAG,EACxD,CAAER,KAAM,MAAO7B,KAAM,OAAQqC,OAAQ,QAAG,EACxC,CAAER,KAAM,MAAO7B,KAAM,iBAAkBqC,OAAQ,GAAG,EAClD,CAAER,KAAM,MAAO7B,KAAM,eAAgBqC,OAAQ,GAAG,CAAE,EAGpDa,YAA4B,CAC1B,CAAEnB,MAAO,aAAcG,QAAS,YAAY,EAC5C,CAAEH,MAAO,aAAcG,QAAS,YAAY,EAC5C,CAAEH,MAAO,aAAcG,QAAS,YAAY,CAAE,EAGxCwC,OAAiBC,EAAOC,CAAM,EAC9BC,UAA8BF,EAAOG,EAAgB,EAE7DC,UAAQ,CAEN,KAAKC,aAAY,EAEjB,KAAKC,kBAAiB,EAEtB,KAAKvB,uBAAsB,EAE3B,KAAKlB,eAAc,EAEnB,KAAK0C,WAAU,EAEf,KAAKvD,cAAa,CACpB,CAEMqD,cAAY,QAAAG,EAAA,sBAChB,GAAI,CAEF,IAAMpE,EAAW,MAAM,KAAKqE,cAAc,WAAY,QAAQ,EACxDC,EAAY,MAAM,KAAKD,cAAc,YAAa,kBAAkB,EAC1E,KAAKrE,SAAWA,EAEhB,KAAKE,YAAc,CACjBqE,UAAW,IACXpE,OAAQ,6BACRC,OAAQkE,EACRE,IAAKxE,EAELK,aAAc,WACdoE,SAAU,WACVC,YAAaC,OAEbC,MAAON,EAEX,OAASO,EAAO,CACdC,QAAQD,MAAM,2BAA4BA,CAAK,EAC/C,KAAKE,UAAU,4CAA0C,QAAQ,CACnE,CACF,GAEMb,mBAAiB,QAAAE,EAAA,sBACrB,GAAI,CAEF,IAAMY,EAAiB,MAAM,KAAKX,cAAc,YAAa,EAAE,EAC/D,GAAIW,EAAgB,CAClB,IAAMC,EAAcC,KAAKC,MAAMH,CAAc,EAC7C,KAAKhG,OAASoG,IAAA,GAAK,KAAKpG,QAAWiG,GAGnC,KAAKjG,OAAOwE,OAAS,KAAKxE,OAAOwC,SACjC,KAAKxC,OAAOyE,KAAO,KAAKzE,OAAOuE,KACjC,CAGA,KAAKhD,WAAa,KAAKvB,OAAOuE,QAAU,MAC1C,OAASsB,EAAO,CACdC,QAAQD,MAAM,+BAAgCA,CAAK,EACnD,KAAKE,UAAU,sCAAoC,QAAQ,CAC7D,CACF,GAEAM,iBAAiBC,EAAe,CAC9B,KAAKvF,cAAgBuF,CACvB,CAEMC,mBAAiB,QAAAnB,EAAA,sBACrB,GAAI,CAEF,KAAKpF,OAAOwE,OAAS,KAAKxE,OAAOwC,SACjC,KAAKxC,OAAOyE,KAAO,KAAKzE,OAAOuE,MAG/B,MAAM,KAAKiC,cAAc,YAAaN,KAAKO,UAAU,KAAKzG,MAAM,CAAC,EACjE,KAAK+F,UAAU,yCAAuC,SAAS,EAE/D,KAAKZ,WAAU,EACf,KAAKvD,cAAa,CACpB,OAASiE,EAAO,CACdC,QAAQD,MAAM,8BAA+BA,CAAK,EAClD,KAAKE,UAAU,uCAAqC,QAAQ,CAC9D,CACF,GAEM3B,oBAAkB,QAAAgB,EAAA,sBACtB,GAAIsB,QAAQ,oEAA2D,EACrE,GAAI,CAEF,KAAK1G,OAAS,CACZC,KAAM,GACNuC,SAAU,KACVG,SAAU,sBACV4B,MAAO,QACP5C,SAAU,EACVhB,SAAU,GACVoC,SAAU,MACVF,WAAY,aACZa,WAAY,GACZJ,eAAgB,KAChBQ,UAAW,GAEXU,OAAQ,KACRC,KAAM,QACNC,eAAgB,IAGlB,MAAMiC,EAAYC,OAAO,CAAEC,IAAK,WAAW,CAAE,EAE7C,KAAKtF,WAAa,GAClB,KAAK4D,WAAU,EACf,KAAKvD,cAAa,EAClB,KAAKa,eAAc,EACnB,KAAKsD,UAAU,8CAA4C,SAAS,CACtE,OAASF,EAAO,CACdC,QAAQD,MAAM,iCAAkCA,CAAK,EACrD,KAAKE,UAAU,2CAAyC,QAAQ,CAClE,CAEJ,GAEAA,UAAUe,EAAiBC,EAAgB,UAAS,CAElDC,MAAMF,CAAO,CACf,CAGArE,gBAAc,CAEZ,KAAKzC,OAAOwE,OAAS,KAAKxE,OAAOwC,SACjC,KAAKsC,UAAUmC,IAAI,KAAKjH,OAAOwC,QAAQ,CACzC,CAGAf,gBAAc,CACZ,KAAKzB,OAAOuE,MAAQ,KAAKhD,WAAa,OAAS,QAE/C,KAAKvB,OAAOyE,KAAO,KAAKzE,OAAOuE,MAC/B,KAAKY,WAAU,CACjB,CAEAA,YAAU,CACR+B,SAASC,KAAKC,UAAUC,OAAO,OAAQ,KAAKrH,OAAOuE,QAAU,MAAM,CACrE,CAGA3C,eAAa,CACX,IAAM0F,EAAY,aAAa,KAAKtH,OAAO2B,QAAQ,GACnDuF,SAASC,KAAKC,UAAUR,OAAO,cAAe,cAAe,aAAa,EAC1EM,SAASC,KAAKC,UAAUG,IAAID,CAAS,CACvC,CAGA7D,gBAAc,CAEZ,GAAI,CADoB+D,OAAO,kCAA+B,EACxC,OACtB,IAAMC,EAAcD,OAAO,iCAA8B,EACzD,GAAI,CAACC,EAAa,OAClB,IAAMC,EAAkBF,OAAO,kCAA+B,EAC9D,GAAKE,EACL,IAAID,IAAgBC,EAAiB,CACnC,KAAK3B,UAAU,kCAAgC,QAAQ,EACvD,MACF,CACA,GAAI0B,EAAYE,OAAS,EAAG,CAC1B,KAAK5B,UAAU,oDAAkD,QAAQ,EACzE,MACF,CAEA,KAAKA,UAAU,qDAAmD,SAAS,EAC7E,CAGM7B,YAAU,QAAAkB,EAAA,sBACd,GAAIsB,QAAQ,4FAAgF,EAC1F,GAAI,CAGF,KAAKX,UAAU,kCAAgC,SAAS,CAC1D,OAASF,EAAO,CACdC,QAAQD,MAAM,wBAAyBA,CAAK,EAC5C,KAAKE,UAAU,4BAA0B,QAAQ,CACnD,CAEJ,GAGA5B,qBAAmB,CACjB,IAAMyD,EAAU1B,KAAKO,UAAU,KAAKzG,OAAQ,KAAM,CAAC,EAC7C6H,EAAU,uCAAyCC,mBAAmBF,CAAO,EAC7EG,EAAwB,kBACxBC,EAAcd,SAASe,cAAc,GAAG,EAC9CD,EAAYE,aAAa,OAAQL,CAAO,EACxCG,EAAYE,aAAa,WAAYH,CAAqB,EAC1DC,EAAYG,MAAK,CACnB,CAGAxE,wBAAsB,CAChB,KAAK3D,OAAO0D,YACd,KAAKH,gBAAe,CAExB,CAEAA,iBAAe,CAET,KAAKe,iBACP8D,aAAa,KAAK9D,eAAe,EAGnC,IAAM+D,EAAS,CAAC,YAAa,YAAa,WAAY,SAAU,YAAY,EAGtEC,EADmBC,SAAS,KAAKvI,OAAOsD,cAAc,EACrB,GAAK,IACtCkF,EAAuBA,IAAK,CAC5B,KAAKlE,iBACP8D,aAAa,KAAK9D,eAAe,EAEnC,KAAKA,gBAAkBmE,WAAW,IAAM,KAAKC,0BAAyB,EAAIJ,CAAW,CACvF,EAEAD,EAAOM,QAAQC,GAAQ,CACrBC,OAAOC,iBAAiBF,EAAOJ,EAAsB,EAAK,CAC5D,CAAC,EAEDA,EAAoB,CACtB,CAEAE,2BAAyB,CAEvB,KAAK3C,UAAU,oGAAyF,SAAS,EAEjH,KAAKxC,gBAAe,CACtB,CAEAwF,QAAM,CACA,KAAK/H,WAAa,QACpB,KAAK2D,OAAOqE,SAAS,CAAC,SAAS,CAAC,EACvB,KAAKhI,WAAa,SAC3B,KAAK2D,OAAOqE,SAAS,CAAC,SAAS,CAAC,EAEhC,KAAKrE,OAAOqE,SAAS,CAAC,GAAG,CAAC,CAE9B,CAGc3D,cAAcwB,EAAaoC,EAAoB,QAAA7D,EAAA,sBAC3D,GAAM,CAAEpD,MAAAA,CAAK,EAAK,MAAM2E,EAAYuC,IAAI,CAAErC,IAAAA,CAAG,CAAE,EAC/C,OAAO7E,GAASiH,CAClB,GAEczC,cAAcK,EAAa7E,EAAa,QAAAoD,EAAA,sBACpD,MAAMuB,EAAYwC,IAAI,CAAEtC,IAAAA,EAAK7E,MAAAA,CAAK,CAAE,CACtC,8CAnTWqC,EAAsB,2BAAtBA,EAAsB+E,UAAA,CAAA,CAAA,mBAAA,CAAA,EAAAC,SAAA,CAAAC,EAFtB,CAACC,EAAc,CAAC,CAAA,EAAAC,MAAA,GAAAC,KAAA,GAAAC,OAAA,CAAA,CAAA,aAAA,QAAA,EAAA,CAAA,EAAA,wBAAA,EAAA,CAAA,EAAA,SAAA,EAAA,CAAA,EAAA,cAAA,EAAA,CAAA,OAAA,qBAAA,EAAA,OAAA,EAAA,CAAA,EAAA,gBAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,QAAA,iBAAA,EAAA,UAAA,EAAA,MAAA,EAAA,CAAA,EAAA,gBAAA,EAAA,CAAA,OAAA,SAAA,EAAA,MAAA,gBAAA,EAAA,OAAA,EAAA,CAAA,OAAA,SAAA,EAAA,MAAA,cAAA,EAAA,UAAA,EAAA,CAAA,EAAA,iBAAA,EAAA,SAAA,EAAA,CAAA,QAAA,aAAA,EAAA,MAAA,EAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,WAAA,EAAA,CAAA,EAAA,oBAAA,EAAA,CAAA,OAAA,WAAA,KAAA,YAAA,OAAA,WAAA,EAAA,gBAAA,SAAA,EAAA,CAAA,MAAA,YAAA,EAAA,gBAAA,EAAA,CAAA,MAAA,cAAA,EAAA,CAAA,OAAA,OAAA,KAAA,eAAA,OAAA,cAAA,WAAA,GAAA,EAAA,eAAA,EAAA,gBAAA,UAAA,aAAA,EAAA,CAAA,EAAA,eAAA,EAAA,CAAA,EAAA,cAAA,EAAA,CAAA,EAAA,QAAA,EAAA,CAAA,OAAA,WAAA,OAAA,WAAA,EAAA,gBAAA,SAAA,SAAA,EAAA,CAAA,EAAA,SAAA,OAAA,EAAA,CAAA,MAAA,WAAA,EAAA,CAAA,EAAA,mBAAA,EAAA,CAAA,EAAA,aAAA,OAAA,EAAA,CAAA,OAAA,QAAA,KAAA,YAAA,MAAA,IAAA,MAAA,IAAA,OAAA,IAAA,OAAA,WAAA,EAAA,gBAAA,SAAA,SAAA,EAAA,CAAA,EAAA,aAAA,OAAA,EAAA,CAAA,MAAA,UAAA,EAAA,CAAA,KAAA,WAAA,OAAA,WAAA,WAAA,GAAA,EAAA,eAAA,EAAA,gBAAA,SAAA,SAAA,EAAA,CAAA,EAAA,QAAA,EAAA,QAAA,SAAA,EAAA,CAAA,MAAA,UAAA,EAAA,CAAA,KAAA,WAAA,OAAA,WAAA,WAAA,GAAA,EAAA,eAAA,EAAA,gBAAA,SAAA,EAAA,CAAA,MAAA,YAAA,EAAA,CAAA,KAAA,aAAA,OAAA,aAAA,WAAA,GAAA,EAAA,eAAA,EAAA,gBAAA,SAAA,EAAA,CAAA,MAAA,UAAA,EAAA,CAAA,KAAA,WAAA,OAAA,WAAA,WAAA,GAAA,EAAA,eAAA,EAAA,gBAAA,SAAA,EAAA,CAAA,EAAA,OAAA,EAAA,CAAA,OAAA,SAAA,EAAA,MAAA,cAAA,EAAA,OAAA,EAAA,CAAA,EAAA,kBAAA,EAAA,CAAA,MAAA,cAAA,EAAA,cAAA,EAAA,CAAA,OAAA,WAAA,KAAA,cAAA,OAAA,aAAA,EAAA,gBAAA,SAAA,SAAA,EAAA,CAAA,MAAA,gBAAA,EAAA,CAAA,KAAA,iBAAA,OAAA,iBAAA,WAAA,GAAA,EAAA,eAAA,EAAA,gBAAA,SAAA,SAAA,EAAA,CAAA,QAAA,GAAA,EAAA,CAAA,QAAA,IAAA,EAAA,CAAA,QAAA,IAAA,EAAA,CAAA,QAAA,IAAA,EAAA,CAAA,QAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,EAAA,cAAA,EAAA,CAAA,OAAA,SAAA,EAAA,MAAA,aAAA,EAAA,OAAA,EAAA,CAAA,EAAA,eAAA,EAAA,CAAA,MAAA,aAAA,EAAA,cAAA,EAAA,CAAA,OAAA,WAAA,KAAA,aAAA,OAAA,YAAA,EAAA,gBAAA,SAAA,EAAA,CAAA,EAAA,MAAA,CAAA,EAAAC,SAAA,SAAAC,EAAAC,EAAA,CAAA,GAAAD,EAAA,EAAA,WCrC7BvK,EAAA,EAAA,MAAA,CAAA,EAAoC,EAAA,QAAA,CAAA,EACX,EAAA,KAAA,CAAA,EACI,EAAA,IAAA,EACnB,EAAA,IAAA,CAAA,EAEAmC,EAAA,QAAA,UAAA,CAAA1B,OAAAJ,EAAAoK,CAAA,EAAA5J,EAAS2J,EAAAxD,iBAAiB,SAAS,CAAC,CAAA,CAAA,EAEpC/G,EAAA,CAAA,mBACFC,EAAA,EAAI,EAENF,EAAA,EAAA,IAAA,EAAI,EAAA,IAAA,CAAA,EAEAmC,EAAA,QAAA,UAAA,CAAA1B,OAAAJ,EAAAoK,CAAA,EAAA5J,EAAS2J,EAAAxD,iBAAiB,YAAY,CAAC,CAAA,CAAA,EAEvC/G,EAAA,CAAA,oBACFC,EAAA,EAAI,EAENF,EAAA,GAAA,IAAA,EAAI,GAAA,IAAA,CAAA,EAEAmC,EAAA,QAAA,UAAA,CAAA1B,OAAAJ,EAAAoK,CAAA,EAAA5J,EAAS2J,EAAAxD,iBAAiB,UAAU,CAAC,CAAA,CAAA,EAErC/G,EAAA,EAAA,oBACFC,EAAA,EAAI,EAENF,EAAA,GAAA,IAAA,EAAI,GAAA,IAAA,CAAA,EAEAmC,EAAA,QAAA,UAAA,CAAA1B,OAAAJ,EAAAoK,CAAA,EAAA5J,EAAS2J,EAAAxD,iBAAiB,UAAU,CAAC,CAAA,CAAA,EAErC/G,EAAA,EAAA,oBACFC,EAAA,EAAI,EAENF,EAAA,GAAA,IAAA,EAAI,GAAA,IAAA,CAAA,EAEAmC,EAAA,QAAA,UAAA,CAAA1B,OAAAJ,EAAAoK,CAAA,EAAA5J,EAAS2J,EAAAxD,iBAAiB,UAAU,CAAC,CAAA,CAAA,EAErC/G,EAAA,EAAA,oBACFC,EAAA,EAAI,EACD,EACF,EAEPF,EAAA,GAAA,OAAA,CAAA,EAA6B,GAAA,OAAA,EAAA,CAAA,EACAmC,EAAA,WAAA,UAAA,CAAA1B,OAAAJ,EAAAoK,CAAA,EAAA5J,EAAY2J,EAAAtD,kBAAA,CAAmB,CAAA,CAAA,EAExD/F,EAAA,GAAAuJ,GAAA,GAAA,GAAA,UAAA,CAAA,EACsC,GAAAC,GAAA,GAAA,GAAA,UAAA,CAAA,EAqCG,GAAAC,GAAA,GAAA,GAAA,UAAA,CAAA,EAqCF,GAAAC,GAAA,GAAA,GAAA,UAAA,CAAA,EA+DA,GAAAC,GAAA,GAAA,GAAA,UAAA,CAAA,EA+EvC9K,EAAA,GAAA,MAAA,CAAA,EAA4B,GAAA,SAAA,CAAA,EACsBmC,EAAA,QAAA,UAAA,CAAA1B,OAAAJ,EAAAoK,CAAA,EAAA5J,EAAS2J,EAAAd,OAAA,CAAQ,CAAA,CAAA,EAC/DzJ,EAAA,EAAA,oBACFC,EAAA,EACAF,EAAA,GAAA,SAAA,EAAA,EACEC,EAAA,EAAA,oBACFC,EAAA,EAAS,EACL,EACD,EACF,sBAzQEY,EAAA,CAAA,EAAAiK,EAAA,SAAAP,EAAA9I,gBAAA,SAAA,EAGDZ,EAAA,EAAAc,EAAA,IAAAZ,EAAA,EAAA,GAAA,gBAAA,EAAA,GAAA,EAICF,EAAA,CAAA,EAAAiK,EAAA,SAAAP,EAAA9I,gBAAA,YAAA,EAGDZ,EAAA,EAAAc,EAAA,IAAAZ,EAAA,GAAA,GAAA,mBAAA,EAAA,GAAA,EAICF,EAAA,CAAA,EAAAiK,EAAA,SAAAP,EAAA9I,gBAAA,UAAA,EAGDZ,EAAA,EAAAc,EAAA,IAAAZ,EAAA,GAAA,GAAA,iBAAA,EAAA,GAAA,EAICF,EAAA,CAAA,EAAAiK,EAAA,SAAAP,EAAA9I,gBAAA,UAAA,EAGDZ,EAAA,EAAAc,EAAA,IAAAZ,EAAA,GAAA,GAAA,iBAAA,EAAA,GAAA,EAICF,EAAA,CAAA,EAAAiK,EAAA,SAAAP,EAAA9I,gBAAA,UAAA,EAGDZ,EAAA,EAAAc,EAAA,IAAAZ,EAAA,GAAA,GAAA,iBAAA,EAAA,GAAA,EASDF,EAAA,CAAA,EAAAS,EAAA,OAAAiJ,EAAA9I,gBAAA,SAAA,EAqCAZ,EAAA,EAAAS,EAAA,OAAAiJ,EAAA9I,gBAAA,YAAA,EAqCAZ,EAAA,EAAAS,EAAA,OAAAiJ,EAAA9I,gBAAA,UAAA,EA+DAZ,EAAA,EAAAS,EAAA,OAAAiJ,EAAA9I,gBAAA,UAAA,EA2CAZ,EAAA,EAAAS,EAAA,OAAAiJ,EAAA9I,gBAAA,UAAA,EAsCCZ,EAAA,CAAA,EAAAc,EAAA,IAAAZ,EAAA,GAAA,GAAA,aAAA,EAAA,GAAA,EAE4CF,EAAA,CAAA,EAAAS,EAAA,WAAA,CAAAyJ,EAAAC,KAAAC,KAAA,EAC5CpK,EAAA,EAAAc,EAAA,IAAAZ,EAAA,GAAA,GAAA,aAAA,EAAA,GAAA,kBDvOEmK,EAAYC,EAAAC,EAAAC,EAAAC,EAAEC,GAAWC,EAAAC,GAAAC,GAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAAC,EAAAC,EAAEC,GAAeC,EAAA,EAAAC,cAAA,CAAA,CAAA,SAKzCvH,CAAsB,GAAA","names":["Preferences","registerPlugin","m","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtwoWayListener","$event","ɵɵrestoreView","_r3","ctx_r3","ɵɵnextContext","i0","ɵɵtwoWayBindingSet","config","name","ɵɵresetView","ɵɵadvance","ɵɵtextInterpolate","ɵɵpipeBind1","ɵɵpropertyInterpolate","ɵɵtwoWayProperty","ɵɵtemplate","ConfigurationComponent_section_26_div_4_Template","_r2","autoSave","ɵɵproperty","ɵɵpureFunction1","_c0","activeSection","userRole","ɵɵtextInterpolate1","currentUser","Nombre","Correo","Departamento","_r5","isDarkMode","ɵɵlistener","toggleDarkMode","ɵɵelement","textSize","applyTextSize","lang_r7","code","tz_r8","value","label","format_r9","example","currency_r10","ɵɵtextInterpolate2","symbol","_r6","language","changeLanguage","ConfigurationComponent_section_28_option_9_Template","timezone","ConfigurationComponent_section_28_option_15_Template","dateFormat","ConfigurationComponent_section_28_option_21_Template","currency","ConfigurationComponent_section_28_option_27_Template","languages","timezones","dateFormats","currencies","_r12","autoLogoutTime","setupAutoLogout","_r11","changePassword","autoLogout","setupInactivityMonitor","ConfigurationComponent_section_29_div_17_Template","_r14","debugMode","ConfigurationComponent_section_30_div_4_small_13_Template","ConfigurationComponent_section_30_div_4_Template","_r13","clearCache","exportConfiguration","resetConfiguration","ConfigurationComponent","inactivityTimer","theme","idioma","tema","notificaciones","router","inject","Router","translate","TranslateService","ngOnInit","loadUserInfo","loadConfiguration","applyTheme","__async","getPreference","userEmail","IdUsuario","Rol","Telefono","Foto_Perfil","undefined","Email","error","console","showToast","savedConfigStr","savedConfig","JSON","parse","__spreadValues","setActiveSection","section","saveConfiguration","setPreference","stringify","confirm","Preferences","remove","key","message","color","alert","use","document","body","classList","toggle","sizeClass","add","prompt","newPassword","confirmPassword","length","dataStr","dataUri","encodeURIComponent","exportFileDefaultName","linkElement","createElement","setAttribute","click","clearTimeout","events","timeoutInMs","parseInt","resetInactivityTimer","setTimeout","autoLogoutDueToInactivity","forEach","event","window","addEventListener","goBack","navigate","defaultValue","get","set","selectors","features","ɵɵProvidersFeature","TranslateStore","decls","vars","consts","template","rf","ctx","_r1","ConfigurationComponent_section_26_Template","ConfigurationComponent_section_27_Template","ConfigurationComponent_section_28_Template","ConfigurationComponent_section_29_Template","ConfigurationComponent_section_30_Template","ɵɵclassProp","configForm_r15","form","valid","CommonModule","NgClass","NgForOf","NgIf","TitleCasePipe","FormsModule","ɵNgNoValidate","NgSelectOption","ɵNgSelectMultipleOption","DefaultValueAccessor","RangeValueAccessor","CheckboxControlValueAccessor","SelectControlValueAccessor","NgControlStatus","NgControlStatusGroup","RequiredValidator","NgModel","NgForm","TranslateModule","TranslatePipe","encapsulation"],"x_google_ignoreList":[0]}