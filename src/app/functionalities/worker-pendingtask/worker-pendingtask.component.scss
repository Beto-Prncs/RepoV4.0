// Define variables at the top of the file
$border-radius: 6px;
$primary-color: #1a237e;
$primary-light: #e8eaf6;
$primary-dark: #0e1446;
$text-secondary: #6c757d;
$error-color: #dc3545;
$transition: all 0.2s ease-in-out;

// Import the Sass color module to use color functions
@use "sass:color";

// Define the button-reset mixin if it doesn't exist elsewhere
@mixin button-reset {
  background: none;
  border: none;
  padding: 0;
  margin: 0;
  font: inherit;
  cursor: pointer;
}

.task-actions {
  display: flex;
  justify-content: space-between;
  gap: 1rem;
  margin-top: 1.5rem;
  
  button {
    flex: 1;
    padding: 0.75rem 1rem;
    border: none;
    border-radius: $border-radius;
    font-weight: 500;
    cursor: pointer;
    transition: $transition;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    
    &:disabled {
      opacity: 0.6;
      cursor: not-allowed;
    }
    
    .spinner-small {
      width: 16px;
      height: 16px;
      border: 2px solid rgba(255, 255, 255, 0.3);
      border-left-color: white;
      border-radius: 50%;
      animation: spin 1s linear infinite;
    }
  }
  
  .btn-preview {
    background-color: white;
    color: $primary-color;
    border: 1px solid $primary-color;
    
    &:hover:not(:disabled) {
      background-color: $primary-light;
    }
  }
  
  .btn-complete {
    background-color: $primary-color;
    color: white;
    
    &:hover:not(:disabled) {
      background-color: $primary-dark;
      transform: translateY(-2px);
    }
  }
}

// PDF/Camera Modal
.pdf-modal {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000;
  
  .pdf-modal-content {
    background-color: white;
    border-radius: $border-radius;
    width: 90%;
    max-width: 800px;
    max-height: 90vh;
    display: flex;
    flex-direction: column;
    overflow: hidden;
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);
    
    // Hacer el modal más grande para la cámara
    &.camera-modal-content {
      max-width: 900px;
      height: 90vh;
    }
    
    .pdf-modal-header {
      padding: 1rem 1.5rem;
      display: flex;
      justify-content: space-between;
      align-items: center;
      border-bottom: 1px solid $primary-light;
      
      h3 {
        margin: 0;
        color: $primary-dark;
        font-size: 1.25rem;
      }
      
      .btn-close {
        background: none;
        border: none;
        font-size: 1.5rem;
        line-height: 1;
        color: $text-secondary;
        cursor: pointer;
        transition: $transition;
        
        &:hover {
          color: $error-color;
          transform: scale(1.1);
        }
      }
    }
    
    .pdf-modal-body {
      flex-grow: 1;
      padding: 1.5rem;
      overflow-y: auto;
      
      // Estilos específicos para el cuerpo del modal cuando contiene el componente de cámara
      app-camera {
        display: block;
        width: 100%;
        height: 100%;
        min-height: 400px;
      }
      
      .preview-content {
        h3 {
          color: $primary-dark;
          font-size: 1.5rem;
          margin-top: 0;
          margin-bottom: 1rem;
        }
        
        p {
          margin-bottom: 1rem;
          
          strong {
            color: $primary-color;
          }
        }
        
        h4 {
          color: $primary-dark;
          margin-top: 1.5rem;
          margin-bottom: 0.75rem;
        }
      }
    }
    
    .pdf-modal-footer {
      padding: 1rem 1.5rem;
      display: flex;
      justify-content: flex-end;
      gap: 1rem;
      border-top: 1px solid $primary-light;
      
      button {
        padding: 0.6rem 1.2rem;
        font-weight: 500;
        border-radius: $border-radius;
        cursor: pointer;
        transition: $transition;
      }
      
      .btn-cancel {
        background-color: white;
        color: $text-secondary;
        border: 1px solid $primary-light;
        
        &:hover {
          background-color: $primary-light;
          color: $primary-dark;
        }
      }
      
      .btn-confirm {
        background-color: $primary-color;
        color: white;
        border: none;
        
        &:hover {
          // Replace deprecated darken() function with color.adjust()
          background-color: color.adjust($primary-color, $lightness: -5%);
          transform: translateY(-2px);
        }
      }
    }
  }
}

// Estilos específicos para el componente de cámara dentro del modal
// Estos estilos complementan los que ya tiene el componente
::ng-deep .camera-container {
  height: 100%;
  min-height: 400px;
  
  .camera-tabs {
    margin-top: 0 !important;
  }
  
  .camera-view, .gallery-view {
    flex-grow: 1;
  }
  
  .web-camera, .mobile-camera {
    min-height: 300px;
    max-height: 500px;
  }
  
  // Estilos adicionales para la galería dentro del componente de cámara
  .gallery-grid {
    grid-template-columns: repeat(auto-fill, minmax(100px, 1fr)) !important;
  }
}

// Responsive
@media screen and (max-width: 768px) {
  .tasks-container {
    padding: 1rem;
  }
  
  .tasks-grid {
    grid-template-columns: 1fr;
  }
  
  .task-actions {
    flex-direction: column;
    
    button {
      width: 100%;
    }
  }
  
  .pdf-modal-content {
    width: 95% !important;
    max-height: 95vh !important;
  }
  
  .image-previews {
    grid-template-columns: repeat(auto-fill, minmax(80px, 1fr)) !important;
  }
}

// Animación de entrada y salida para modales
@keyframes modalFadeIn {
  from { opacity: 0; transform: translateY(-20px); }
  to { opacity: 1; transform: translateY(0); }
}

@keyframes spin {
  to { transform: rotate(360deg); }
}

.pdf-modal {
  animation: modalFadeIn 0.3s ease-out;
}