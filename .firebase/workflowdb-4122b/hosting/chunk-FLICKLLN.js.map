{
  "version": 3,
  "sources": ["src/app/functionalities/manage-config/manage-config.component.ts", "src/app/functionalities/manage-config/manage-config.component.html"],
  "sourcesContent": ["import { Component, OnInit, inject, DestroyRef } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormBuilder, FormGroup, Validators, ReactiveFormsModule } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { BehaviorSubject, Observable, debounceTime, finalize, catchError, of, map } from 'rxjs';\nimport { DepartmentService } from '../../services/department.service';\nimport { CompanyService } from '../../services/company.service';\nimport { AuthService } from '../../services/auth.service';\nimport { Departamento, Empresa } from '../../models/interfaces';\n\n@Component({\n  selector: 'app-manage-config',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule],\n  templateUrl: './manage-config.component.html',\n  styleUrl: './manage-config.component.scss'\n})\nexport class ManageConfigComponent implements OnInit {\n  private departmentService: DepartmentService = inject(DepartmentService);\n  private companyService: CompanyService = inject(CompanyService);\n  private authService: AuthService = inject(AuthService);\n  private fb: FormBuilder = inject(FormBuilder);\n  private router: Router = inject(Router);\n  private destroyRef: DestroyRef = inject(DestroyRef);\n\n  // Variables para la interfaz\n  departments$ = new BehaviorSubject<Departamento[]>([]);\n  companies$ = new BehaviorSubject<Empresa[]>([]);\n  filteredDepartments$: Observable<Departamento[]>; // Observable para departamentos filtrados\n  filteredCompanies$: Observable<Empresa[]>; // Observable para empresas filtradas\n  isAdmin2OrHigher = false;\n  isAdmin3 = false;\n  isLoading = false;\n  activeTab: 'departments' | 'companies' = 'departments';\n  showDepartmentForm = false;\n  showCompanyForm = false;\n  errorMessage = '';\n  successMessage = '';\n\n  // Variables para el filtrado\n  departmentFilterText = '';\n  companyFilterText = '';\n\n  // Nuevas variables para mejorar la UX\n  departmentCount = 0;\n  companyCount = 0;\n  lastUpdated = new Date();\n  searchTerm = '';\n  isSearching = false;\n  animationState = 'idle';\n\n  // Formularios\n  departmentForm: FormGroup;\n  companyForm: FormGroup;\n  searchForm: FormGroup;\n\n  constructor() {\n    this.departmentForm = this.fb.group({\n      name: ['', [Validators.required, Validators.minLength(3)]]\n    });\n\n    this.companyForm = this.fb.group({\n      Nombre: ['', [Validators.required, Validators.minLength(3)]],\n      Correo: ['', [Validators.required, Validators.email]],\n      Direccion: ['', [Validators.required]],\n      Sector: ['', [Validators.required]]\n    });\n\n    this.searchForm = this.fb.group({\n      term: ['']\n    });\n\n    // Inicializar observables filtrados\n    this.filteredDepartments$ = this.departments$.pipe(\n      map(departments => this.filterDepartmentsList(departments, this.departmentFilterText))\n    );\n\n    this.filteredCompanies$ = this.companies$.pipe(\n      map(companies => this.filterCompaniesList(companies, this.companyFilterText))\n    );\n  }\n\n  async ngOnInit() {\n    // Mostrar animación de carga\n    this.animationState = 'loading';\n    this.isLoading = true;\n    \n    try {\n      await this.checkAdminPermissions();\n      this.loadData();\n      \n      // Configurar búsqueda con debounce\n      this.searchForm.get('term')?.valueChanges\n        .pipe(\n          debounceTime(300),\n          takeUntilDestroyed(this.destroyRef)\n        )\n        .subscribe(term => {\n          this.searchTerm = term;\n          // Aquí implementaríamos la lógica de filtrado general\n        });\n    } catch (error) {\n      console.error('Error en la inicialización:', error);\n      this.showError('Error al inicializar el componente');\n    } finally {\n      this.isLoading = false;\n      this.animationState = 'loaded';\n    }\n  }\n\n  private async checkAdminPermissions(): Promise<void> {\n    try {\n      const currentUser = await this.authService.getCurrentUser();\n      if (!currentUser) {\n        this.router.navigate(['/login']);\n        return;\n      }\n\n      const userData = await this.authService.getUserData(currentUser.uid);\n      if (!userData || userData.Rol !== 'admin') {\n        this.showError('No tiene permisos para acceder a esta sección');\n        this.router.navigate(['/admin1']);\n        return;\n      }\n\n      // Verificar nivel de admin\n      this.isAdmin3 = userData.NivelAdmin === '3';\n      this.isAdmin2OrHigher = userData.NivelAdmin === '2' || userData.NivelAdmin === '3';\n      \n      if (!this.isAdmin2OrHigher) {\n        this.showError('Se requiere nivel de administrador 2 o superior');\n        this.router.navigate(['/admin1']);\n      }\n    } catch (error) {\n      console.error('Error verificando permisos:', error);\n      this.showError('Error al verificar permisos de administrador');\n      this.router.navigate(['/admin1']);\n    }\n  }\n\n  private loadData(): void {\n    this.isLoading = true;\n    \n    // Cargar departamentos\n    this.departmentService.getDepartments()\n      .pipe(\n        takeUntilDestroyed(this.destroyRef),\n        catchError(error => {\n          console.error('Error cargando departamentos:', error);\n          this.showError('Error al cargar departamentos');\n          return of([]);\n        }),\n        finalize(() => this.isLoading = false)\n      )\n      .subscribe(departments => {\n        this.departments$.next(departments);\n        this.departmentCount = departments.length;\n        this.lastUpdated = new Date();\n      });\n\n    // Cargar empresas\n    this.companyService.getCompanies()\n      .pipe(\n        takeUntilDestroyed(this.destroyRef),\n        catchError(error => {\n          console.error('Error cargando empresas:', error);\n          this.showError('Error al cargar empresas');\n          return of([]);\n        })\n      )\n      .subscribe(companies => {\n        this.companies$.next(companies);\n        this.companyCount = companies.length;\n      });\n  }\n\n  setActiveTab(tab: 'departments' | 'companies'): void {\n    // Agregar efecto de transición\n    this.animationState = 'transitioning';\n    setTimeout(() => {\n      this.activeTab = tab;\n      this.animationState = 'loaded';\n    }, 150);\n  }\n\n  toggleDepartmentForm(): void {\n    this.showDepartmentForm = !this.showDepartmentForm;\n    if (this.showDepartmentForm) {\n      this.departmentForm.reset();\n      // Cerrar el formulario de empresas si está abierto\n      if (this.showCompanyForm) {\n        this.showCompanyForm = false;\n      }\n    }\n  }\n  toggleCompanyForm(): void {\n    this.showCompanyForm = !this.showCompanyForm;\n    if (this.showCompanyForm) {\n      this.companyForm.reset();\n      // Cerrar el formulario de departamentos si está abierto\n      if (this.showDepartmentForm) {\n        this.showDepartmentForm = false;\n      }\n    }\n  }\n\n  async addDepartment() {\n    if (this.departmentForm.invalid) return;\n    \n    // Activar estado de carga y animación\n    this.isLoading = true;\n    this.animationState = 'saving';\n    \n    try {\n      const departmentName = this.departmentForm.get('name')?.value;\n      \n      // Validación adicional\n      if (!departmentName || departmentName.trim().length < 3) {\n        throw new Error('El nombre del departamento debe tener al menos 3 caracteres');\n      }\n      \n      // Verificar si ya existe un departamento con el mismo nombre\n      const existingDepartments = this.departments$.getValue();\n      const exists = existingDepartments.some(d => \n        d.Nombre.toLowerCase() === departmentName.toLowerCase()\n      );\n      \n      if (exists) {\n        throw new Error(`El departamento \"${departmentName}\" ya existe`);\n      }\n      \n      // Guardar el departamento\n      await this.departmentService.addDepartment(departmentName);\n      \n      // Mostrar mensaje de éxito con el nombre\n      this.showSuccess(`Departamento \"${departmentName}\" añadido correctamente`);\n      \n      // Cerrar el formulario\n      this.toggleDepartmentForm();\n      \n      // Recargar los datos\n      this.loadData();\n    } catch (error: any) {\n      this.showError(error.message || 'Error al añadir departamento');\n    } finally {\n      this.isLoading = false;\n      this.animationState = 'idle';\n    }\n  }\n\n  async deleteDepartment(departmentId: string, departmentName: string) {\n    // Confirmación con diálogo mejorado\n    if (!confirm(`¿Está seguro de eliminar el departamento \"${departmentName}\"?\\n\\nEsta acción no se puede deshacer.`)) {\n      return;\n    }\n    \n    this.isLoading = true;\n    this.animationState = 'deleting';\n    \n    try {\n      await this.departmentService.deleteDepartment(departmentId);\n      \n      // Actualizar la lista sin necesidad de recargar\n      const currentDepartments = this.departments$.getValue();\n      const updatedDepartments = currentDepartments.filter(d => \n        d.IdDepartamento !== departmentId\n      );\n      this.departments$.next(updatedDepartments);\n      this.departmentCount = updatedDepartments.length;\n      \n      this.showSuccess(`Departamento \"${departmentName}\" eliminado correctamente`);\n    } catch (error: any) {\n      console.error('Error al eliminar departamento:', error);\n      this.showError(error.message || 'Error al eliminar departamento');\n    } finally {\n      this.isLoading = false;\n      this.animationState = 'idle';\n    }\n  }\n\n  async addCompany() {\n    if (this.companyForm.invalid) return;\n    \n    this.isLoading = true;\n    this.animationState = 'saving';\n    \n    try {\n      const companyData = this.companyForm.value;\n      \n      // Validación adicional para correo electrónico\n      if (!this.isValidEmail(companyData.Correo)) {\n        throw new Error('El formato del correo electrónico no es válido');\n      }\n      \n      // Verificar si ya existe una empresa con el mismo nombre\n      const existingCompanies = this.companies$.getValue();\n      const exists = existingCompanies.some(c => \n        c.Nombre.toLowerCase() === companyData.Nombre.toLowerCase()\n      );\n      \n      if (exists) {\n        throw new Error(`La empresa \"${companyData.Nombre}\" ya existe`);\n      }\n      \n      await this.companyService.addCompany(companyData);\n      this.showSuccess(`Empresa \"${companyData.Nombre}\" añadida correctamente`);\n      this.toggleCompanyForm();\n      \n      // Recargar datos\n      this.loadData();\n    } catch (error: any) {\n      this.showError(error.message || 'Error al añadir empresa');\n    } finally {\n      this.isLoading = false;\n      this.animationState = 'idle';\n    }\n  }\n\n  async deleteCompany(companyId: string, companyName: string) {\n    if (!confirm(`¿Está seguro de eliminar la empresa \"${companyName}\"?\\n\\nEsta acción no se puede deshacer.`)) {\n      return;\n    }\n    \n    this.isLoading = true;\n    this.animationState = 'deleting';\n    \n    try {\n      await this.companyService.deleteCompany(companyId);\n      \n      // Actualizar la lista sin necesidad de recargar\n      const currentCompanies = this.companies$.getValue();\n      const updatedCompanies = currentCompanies.filter(c => \n        c.IdEmpresa !== companyId\n      );\n      this.companies$.next(updatedCompanies);\n      this.companyCount = updatedCompanies.length;\n      \n      this.showSuccess(`Empresa \"${companyName}\" eliminada correctamente`);\n    } catch (error: any) {\n      console.error('Error al eliminar empresa:', error);\n      this.showError(error.message || 'Error al eliminar empresa');\n    } finally {\n      this.isLoading = false;\n      this.animationState = 'idle';\n    }\n  }\n\n  // Función para filtrar departamentos\n  filterDepartments(filterText: string): void {\n    this.departmentFilterText = filterText;\n    const departments = this.departments$.getValue();\n    const filtered = this.filterDepartmentsList(departments, filterText);\n    \n    // Aquí no actualizamos directamente departments$, sino que\n    // dejamos que el observable filteredDepartments$ maneje esto\n  }\n\n  // Función para filtrar empresas\n  filterCompanies(filterText: string): void {\n    this.companyFilterText = filterText;\n    const companies = this.companies$.getValue();\n    const filtered = this.filterCompaniesList(companies, filterText);\n    \n    // Aquí no actualizamos directamente companies$, sino que\n    // dejamos que el observable filteredCompanies$ maneje esto\n  }\n\n  // Función auxiliar para filtrar la lista de departamentos\n  private filterDepartmentsList(departments: Departamento[], filterText: string): Departamento[] {\n    if (!filterText || filterText.trim() === '') {\n      return departments;\n    }\n    \n    filterText = filterText.toLowerCase().trim();\n    return departments.filter(department => \n      department.Nombre.toLowerCase().includes(filterText) || \n      (department.IdDepartamento && department.IdDepartamento.toLowerCase().includes(filterText))\n    );\n  }\n\n  // Función auxiliar para filtrar la lista de empresas\n  private filterCompaniesList(companies: Empresa[], filterText: string): Empresa[] {\n    if (!filterText || filterText.trim() === '') {\n      return companies;\n    }\n    \n    filterText = filterText.toLowerCase().trim();\n    return companies.filter(company => \n      company.Nombre.toLowerCase().includes(filterText) || \n      (company.Correo && company.Correo.toLowerCase().includes(filterText)) ||\n      (company.Sector && company.Sector.toLowerCase().includes(filterText)) ||\n      (company.IdEmpresa && company.IdEmpresa.toLowerCase().includes(filterText))\n    );\n  }\n\n  // Función para validar formato de correo electrónico\n  private isValidEmail(email: string): boolean {\n    const emailPattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/;\n    return emailPattern.test(email);\n  }\n\n  // Función para verificar errores en campos de formulario\n  hasFieldError(form: FormGroup, fieldName: string): boolean {\n    const field = form.get(fieldName);\n    return field ? field.invalid && (field.dirty || field.touched) : false;\n  }\n\n  goBack() {\n    this.router.navigate(['/admin1']);\n  }\n\n  // Funciones mejoradas para mostrar mensajes\n  private showError(message: string): void {\n    this.errorMessage = message;\n    this.successMessage = '';\n    \n    // Auto-desaparecer después de 5 segundos\n    setTimeout(() => {\n      if (this.errorMessage === message) {\n        this.errorMessage = '';\n      }\n    }, 5000);\n  }\n\n  private showSuccess(message: string): void {\n    this.successMessage = message;\n    this.errorMessage = '';\n    \n    // Auto-desaparecer después de 3 segundos\n    setTimeout(() => {\n      if (this.successMessage === message) {\n        this.successMessage = '';\n      }\n    }, 3000);\n  }\n\n  // Nuevos métodos para mejorar la experiencia de usuario\n  refreshData(): void {\n    this.animationState = 'refreshing';\n    this.loadData();\n    setTimeout(() => {\n      this.animationState = 'idle';\n    }, 500);\n  }\n\n  searchItems(term: string): void {\n    this.isSearching = !!term;\n    // Implementación de búsqueda general si es necesario\n  }\n\n  clearAll(): void {\n    if (confirm('¿Está seguro de limpiar todos los filtros?')) {\n      this.searchForm.reset();\n      this.searchTerm = '';\n      this.departmentFilterText = '';\n      this.companyFilterText = '';\n      this.isSearching = false;\n      this.refreshData();\n    }\n  }\n}", "<!-- manage-config.component.html -->\n<div class=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 py-6 sm:py-12 px-4\">\n  <!-- Botón de retroceso -->\n  <button (click)=\"goBack()\" class=\"group mb-6 inline-flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg shadow-sm hover:bg-blue-700 hover:shadow-md focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-all duration-300\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"w-5 h-5 mr-2 transition-transform duration-300 group-hover:-translate-x-2\"\n      viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\"\n      stroke-linecap=\"round\" stroke-linejoin=\"round\">\n      <line x1=\"19\" y1=\"12\" x2=\"5\" y2=\"12\"></line>\n      <polyline points=\"12 19 5 12 12 5\"></polyline>\n    </svg>\n    Atrás\n  </button>\n  <!-- Tarjeta principal -->\n  <div class=\"max-w-6xl mx-auto animate-fade-in\">\n    <div class=\"bg-white rounded-xl shadow-md hover:shadow-xl transition-all duration-300 overflow-hidden border border-gray-200\">\n      <!-- Encabezado -->\n      <div class=\"bg-gradient-to-r from-blue-600 via-blue-500 to-blue-700 p-8 relative overflow-hidden\">\n        <div class=\"absolute inset-0 overflow-hidden opacity-10\">\n          <div class=\"absolute -top-24 -left-24 w-96 h-96 rounded-full bg-white/20 animate-float\"></div>\n          <div class=\"absolute -bottom-24 -right-24 w-96 h-96 rounded-full bg-white/20 animate-float\" style=\"animation-delay: 1s;\"></div>\n        </div>\n        <div class=\"flex flex-col md:flex-row items-center md:items-start gap-5 relative z-10\">\n          <div class=\"bg-white p-4 rounded-xl shadow-lg transform transition-all duration-300 hover:rotate-3 hover:scale-105 ring-4 ring-white/30\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-12 w-12 text-blue-500\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n              <path fill-rule=\"evenodd\" d=\"M11.49 3.17c-.38-1.56-2.6-1.56-2.98 0a1.532 1.532 0 01-2.286.948c-1.372-.836-2.942.734-2.106 2.106.54.886.061 2.042-.947 2.287-1.561.379-1.561 2.6 0 2.978a1.532 1.532 0 01.947 2.287c-.836 1.372.734 2.942 2.106 2.106a1.532 1.532 0 012.287.947c.379 1.561 2.6 1.561 2.978 0a1.533 1.533 0 012.287-.947c1.372.836 2.942-.734 2.106-2.106a1.533 1.533 0 01.947-2.287c1.561-.379 1.561-2.6 0-2.978a1.532 1.532 0 01-.947-2.287c.836-1.372-.734-2.942-2.106-2.106a1.532 1.532 0 01-2.287-.947zM10 13a3 3 0 100-6 3 3 0 000 6z\" clip-rule=\"evenodd\" />\n            </svg>\n          </div>\n          <div class=\"text-center md:text-left\">\n            <h1 class=\"text-white text-3xl font-bold tracking-tight drop-shadow-md\">Configuración del Sistema</h1>\n            <p class=\"text-blue-100 mt-2 text-lg font-light tracking-wide\">Gestión de Departamentos y Empresas</p>\n          </div>\n        </div>\n      </div>\n      <!-- Mensajes de Estado -->\n      <div *ngIf=\"errorMessage\" class=\"mx-8 mt-4 p-4 bg-red-50 border-l-4 border-red-500 flex items-start animate-shake status-message--error\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5 mr-2 flex-shrink-0 text-red-500\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n          <path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zm-1 9a1 1 0 01-1-1v-4a1 1 0 112 0v4a1 1 0 01-1 1z\" clip-rule=\"evenodd\" />\n        </svg>\n        {{ errorMessage }}\n      </div>\n      <div *ngIf=\"successMessage\" class=\"mx-8 mt-4 p-4 bg-green-50 border-l-4 border-green-500 flex items-start animate-fade-in status-message--success\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5 mr-2 flex-shrink-0 text-green-500\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n          <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clip-rule=\"evenodd\" />\n        </svg>\n        {{ successMessage }}\n      </div>\n      <!-- Indicador de carga -->\n      <div *ngIf=\"isLoading\" class=\"mx-8 mt-4 p-4 bg-blue-50 rounded-lg flex items-center justify-center animate-pulse\">\n        <svg class=\"animate-spin h-5 w-5 text-blue-600 mr-3\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n          <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n          <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n        </svg>\n        <span class=\"text-blue-600 font-medium\">Cargando...</span>\n      </div>\n      <!-- Contenido principal -->\n      <div class=\"p-8\">\n        <!-- Tabs -->\n        <div class=\"mb-6 border-b border-gray-200\">\n          <div class=\"flex -mb-px space-x-8\">\n            <button\n              class=\"py-4 px-1 inline-flex items-center gap-2 border-b-2 font-medium text-sm leading-5 focus:outline-none transition duration-150 ease-in-out\"\n              [class.border-blue-500]=\"activeTab === 'departments'\"\n              [class.text-blue-600]=\"activeTab === 'departments'\"\n              [class.border-transparent]=\"activeTab !== 'departments'\"\n              [class.text-gray-500]=\"activeTab !== 'departments'\"\n              [class.hover:text-gray-700]=\"activeTab !== 'departments'\"\n              [class.hover:border-gray-300]=\"activeTab !== 'departments'\"\n              (click)=\"setActiveTab('departments')\"\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4\" />\n              </svg>\n              Departamentos\n            </button>\n            <button\n              class=\"py-4 px-1 inline-flex items-center gap-2 border-b-2 font-medium text-sm leading-5 focus:outline-none transition duration-150 ease-in-out\"\n              [class.border-blue-500]=\"activeTab === 'companies'\"\n              [class.text-blue-600]=\"activeTab === 'companies'\"\n              [class.border-transparent]=\"activeTab !== 'companies'\"\n              [class.text-gray-500]=\"activeTab !== 'companies'\"\n              [class.hover:text-gray-700]=\"activeTab !== 'companies'\"\n              [class.hover:border-gray-300]=\"activeTab !== 'companies'\"\n              (click)=\"setActiveTab('companies')\"\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 3h1m-1 4h1m4-4h1m-1 4h1m4 14h-2m2 0V9a2 2 0 00-2-2H9a2 2 0 00-2 2v12m0 0h10\" />\n              </svg>\n              Empresas\n            </button>\n          </div>\n        </div>\n        \n        <!-- Contenido de Departamentos -->\n        <div *ngIf=\"activeTab === 'departments'\" class=\"animate-fade-in\">\n          <div class=\"flex flex-col sm:flex-row justify-between items-center mb-6 gap-4\">\n            <h2 class=\"text-xl font-semibold text-gray-800 flex items-center\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6 mr-2 text-blue-500\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4\" />\n              </svg>\n              Lista de Departamentos\n            </h2>\n            \n            <!-- Búsqueda de departamentos -->\n            <div class=\"flex items-center\">\n              <div class=\"relative mr-2\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Buscar departamento...\"\n                  class=\"py-2 px-4 pr-8 text-sm border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                  [value]=\"departmentFilterText\"\n                  (input)=\"filterDepartments($any($event.target).value)\"\n                />\n                <div class=\"absolute inset-y-0 right-0 flex items-center pr-3 pointer-events-none\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-4 w-4 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n                  </svg>\n                </div>\n              </div>\n              <button\n                (click)=\"toggleDepartmentForm()\"\n                class=\"px-4 py-2 bg-blue-600 text-white rounded-lg inline-flex items-center hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-colors\"\n              >\n                <svg *ngIf=\"!showDepartmentForm\" xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5 mr-2\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path fill-rule=\"evenodd\" d=\"M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z\" clip-rule=\"evenodd\" />\n                </svg>\n                <svg *ngIf=\"showDepartmentForm\" xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5 mr-2\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path fill-rule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clip-rule=\"evenodd\" />\n                </svg>\n                {{ showDepartmentForm ? 'Cancelar' : 'Añadir Departamento' }}\n              </button>\n            </div>\n          </div>\n\n          <!-- Formulario para añadir departamento -->\n          <form *ngIf=\"showDepartmentForm\" #departmentFormRef [formGroup]=\"departmentForm\" (ngSubmit)=\"addDepartment()\" class=\"bg-blue-50 p-6 rounded-lg mb-6 border border-blue-100 shadow-md animate-slide-up\">\n            <h3 class=\"text-lg font-medium text-blue-800 mb-4 flex items-center\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5 mr-2\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fill-rule=\"evenodd\" d=\"M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z\" clip-rule=\"evenodd\" />\n              </svg>\n              Nuevo Departamento\n            </h3>\n            <div class=\"mb-4\">\n              <label for=\"departmentName\" class=\"block text-sm font-medium text-gray-700 mb-1\">Nombre del Departamento</label>\n              <div class=\"relative\">\n                <div class=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4\" />\n                  </svg>\n                </div>\n                <input\n                  type=\"text\"\n                  id=\"departmentName\"\n                  formControlName=\"name\"\n                  class=\"w-full pl-10 px-4 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                  [ngClass]=\"{'border-red-500': hasFieldError(departmentForm, 'name'), 'border-gray-300': !hasFieldError(departmentForm, 'name')}\"\n                  placeholder=\"Ingrese el nombre del departamento\"\n                >\n              </div>\n              <div *ngIf=\"hasFieldError(departmentForm, 'name')\" class=\"mt-1 text-sm text-red-600\">\n                El nombre del departamento es requerido y debe tener al menos 3 caracteres.\n              </div>\n            </div>\n            <!-- Botones de acción -->\n            <div class=\"flex justify-end mt-6\">\n              <button\n                type=\"button\"\n                (click)=\"toggleDepartmentForm()\"\n                class=\"px-4 py-2 mr-2 bg-gray-200 text-gray-700 rounded-lg hover:bg-gray-300 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2 transition-colors\"\n              >\n                Cancelar\n              </button>\n              <button\n                type=\"submit\"\n                [disabled]=\"departmentForm.invalid || isLoading\"\n                class=\"inline-flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg shadow-sm hover:bg-blue-700 hover:shadow-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5 mr-2\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path fill-rule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clip-rule=\"evenodd\" />\n                </svg>\n                Guardar\n              </button>\n            </div>\n          </form>\n\n          <!-- Lista de departamentos para desktop -->\n          <div class=\"hidden sm:block bg-white rounded-lg border border-gray-200 overflow-hidden shadow-md\">\n            <table class=\"min-w-full divide-y divide-gray-200\">\n              <thead class=\"bg-gray-50\">\n                <tr>\n                  <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">ID</th>\n                  <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Nombre</th>\n                  <th scope=\"col\" class=\"px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">Acciones</th>\n                </tr>\n              </thead>\n              <tbody class=\"bg-white divide-y divide-gray-200\">\n                <tr *ngFor=\"let department of filteredDepartments$ | async\" class=\"hover:bg-gray-50 transition-colors duration-150\">\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">{{ department.IdDepartamento }}</td>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{{ department.Nombre }}</td>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\n                    <button\n                      *ngIf=\"isAdmin3\"\n                      (click)=\"deleteDepartment(department.IdDepartamento, department.Nombre)\"\n                      class=\"inline-flex items-center text-red-600 hover:text-red-900 focus:outline-none focus:underline\"\n                      [disabled]=\"isLoading\"\n                    >\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-4 w-4 mr-1\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                        <path fill-rule=\"evenodd\" d=\"M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z\" clip-rule=\"evenodd\" />\n                      </svg>\n                      Eliminar\n                    </button>\n                  </td>\n                </tr>\n                <tr *ngIf=\"(filteredDepartments$ | async)?.length === 0\">\n                  <td colspan=\"3\" class=\"px-6 py-4 text-center text-sm text-gray-500\">\n                    <div class=\"flex flex-col items-center py-6\">\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-12 w-12 text-gray-300 mb-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4\" />\n                      </svg>\n                      <p>No hay departamentos disponibles</p>\n                    </div>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n\n          <!-- Vista para móviles de departamentos -->\n          <div class=\"sm:hidden space-y-4\">\n            <div *ngFor=\"let department of filteredDepartments$ | async\" class=\"bg-white rounded-lg border border-gray-200 shadow-sm p-4\">\n              <div class=\"flex justify-between items-start\">\n                <div>\n                  <span class=\"text-xs font-medium text-gray-500 uppercase\">ID</span>\n                  <p class=\"text-gray-900 font-medium\">{{ department.IdDepartamento }}</p>\n                </div>\n                <button\n                  *ngIf=\"isAdmin3\"\n                  (click)=\"deleteDepartment(department.IdDepartamento, department.Nombre)\"\n                  class=\"text-red-600 hover:text-red-900 focus:outline-none\"\n                  [disabled]=\"isLoading\"\n                >\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                    <path fill-rule=\"evenodd\" d=\"M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z\" clip-rule=\"evenodd\" />\n                  </svg>\n                </button>\n              </div>\n              <div class=\"mt-2 pt-2 border-t border-gray-200\">\n                <span class=\"text-xs font-medium text-gray-500 uppercase\">Nombre</span>\n                <p class=\"text-gray-700\">{{ department.Nombre }}</p>\n              </div>\n            </div>\n            <div *ngIf=\"(filteredDepartments$ | async)?.length === 0\" class=\"bg-white rounded-lg border border-gray-200 shadow-sm p-6 text-center\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-12 w-12 mx-auto mb-2 text-gray-300\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4\" />\n              </svg>\n              <p class=\"text-gray-500\">No hay departamentos disponibles</p>\n            </div>\n          </div>\n        </div>\n        \n        <!-- Contenido de Empresas -->\n        <div *ngIf=\"activeTab === 'companies'\" class=\"animate-fade-in\">\n          <div class=\"flex flex-col sm:flex-row justify-between items-center mb-6 gap-4\">\n            <h2 class=\"text-xl font-semibold text-gray-800 flex items-center\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6 mr-2 text-blue-500\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 3h1m-1 4h1m4-4h1m-1 4h1m4 14h-2m2 0V9a2 2 0 00-2-2H9a2 2 0 00-2 2v12m0 0h10\" />\n              </svg>\n              Lista de Empresas\n            </h2>\n            \n            <!-- Búsqueda de empresas -->\n            <div class=\"flex items-center\">\n              <div class=\"relative mr-2\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Buscar empresa...\"\n                  class=\"py-2 px-4 pr-8 text-sm border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                  [value]=\"companyFilterText\"\n                  (input)=\"filterCompanies($any($event.target).value)\"\n                />\n                <div class=\"absolute inset-y-0 right-0 flex items-center pr-3 pointer-events-none\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-4 w-4 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n                  </svg>\n                </div>\n              </div>\n              <button\n                (click)=\"toggleCompanyForm()\"\n                class=\"px-4 py-2 bg-blue-600 text-white rounded-lg inline-flex items-center hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-colors\"\n              >\n                <svg *ngIf=\"!showCompanyForm\" xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5 mr-2\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path fill-rule=\"evenodd\" d=\"M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z\" clip-rule=\"evenodd\" />\n                </svg>\n                <svg *ngIf=\"showCompanyForm\" xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5 mr-2\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path fill-rule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clip-rule=\"evenodd\" />\n                </svg>\n                {{ showCompanyForm ? 'Cancelar' : 'Añadir Empresa' }}\n              </button>\n            </div>\n          </div>\n\n          <!-- Formulario para añadir empresa -->\n          <form *ngIf=\"showCompanyForm\" #companyFormRef [formGroup]=\"companyForm\" (ngSubmit)=\"addCompany()\" class=\"bg-blue-50 p-6 rounded-lg mb-6 border border-blue-100 shadow-md animate-slide-up\">\n            <h3 class=\"text-lg font-medium text-blue-800 mb-4 flex items-center\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5 mr-2\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fill-rule=\"evenodd\" d=\"M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z\" clip-rule=\"evenodd\" />\n              </svg>\n              Nueva Empresa\n            </h3>\n            <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <!-- Nombre de la empresa -->\n              <div class=\"mb-4\">\n                <label for=\"companyName\" class=\"block text-sm font-medium text-gray-700 mb-1\">Nombre de la Empresa</label>\n                <div class=\"relative\">\n                  <div class=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 3h1m-1 4h1m4-4h1m-1 4h1m4 14h-2m2 0V9a2 2 0 00-2-2H9a2 2 0 00-2 2v12m0 0h10\" />\n                    </svg>\n                  </div>\n                  <input\n                    type=\"text\"\n                    id=\"companyName\"\n                    formControlName=\"Nombre\"\n                    class=\"w-full pl-10 px-4 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                    [ngClass]=\"{'border-red-500': hasFieldError(companyForm, 'Nombre'), 'border-gray-300': !hasFieldError(companyForm, 'Nombre')}\"\n                    placeholder=\"Ingrese el nombre de la empresa\"\n                  >\n                </div>\n                <div *ngIf=\"hasFieldError(companyForm, 'Nombre')\" class=\"mt-1 text-sm text-red-600\">\n                  El nombre de la empresa es requerido y debe tener al menos 3 caracteres.\n                </div>\n              </div>\n              <!-- Correo de la empresa -->\n              <div class=\"mb-4\">\n                <label for=\"companyEmail\" class=\"block text-sm font-medium text-gray-700 mb-1\">Correo de la Empresa</label>\n                <div class=\"relative\">\n                  <div class=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\" />\n                    </svg>\n                  </div>\n                  <input\n                    type=\"email\"\n                    id=\"companyEmail\"\n                    formControlName=\"Correo\"\n                    class=\"w-full pl-10 px-4 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                    [ngClass]=\"{'border-red-500': hasFieldError(companyForm, 'Correo'), 'border-gray-300': !hasFieldError(companyForm, 'Correo')}\"\n                    placeholder=\"empresa@ejemplo.com\"\n                  >\n                </div>\n                <div *ngIf=\"hasFieldError(companyForm, 'Correo')\" class=\"mt-1 text-sm text-red-600\">\n                  Ingrese un correo electrónico válido.\n                </div>\n              </div>\n              <!-- Dirección -->\n              <div class=\"mb-4\">\n                <label for=\"companyAddress\" class=\"block text-sm font-medium text-gray-700 mb-1\">Dirección</label>\n                <div class=\"relative\">\n                  <div class=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\" />\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\" />\n                    </svg>\n                  </div>\n                  <input\n                    type=\"text\"\n                    id=\"companyAddress\"\n                    formControlName=\"Direccion\"\n                    class=\"w-full pl-10 px-4 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                    [ngClass]=\"{'border-red-500': hasFieldError(companyForm, 'Direccion'), 'border-gray-300': !hasFieldError(companyForm, 'Direccion')}\"\n                    placeholder=\"Ingrese la dirección\"\n                  >\n                </div>\n                <div *ngIf=\"hasFieldError(companyForm, 'Direccion')\" class=\"mt-1 text-sm text-red-600\">\n                  La dirección es requerida.\n                </div>\n              </div>\n              <!-- Sector -->\n              <div class=\"mb-4\">\n                <label for=\"companySector\" class=\"block text-sm font-medium text-gray-700 mb-1\">Sector</label>\n                <div class=\"relative\">\n                  <div class=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z\" />\n                    </svg>\n                  </div>\n                  <input\n                    type=\"text\"\n                    id=\"companySector\"\n                    formControlName=\"Sector\"\n                    class=\"w-full pl-10 px-4 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n                    [ngClass]=\"{'border-red-500': hasFieldError(companyForm, 'Sector'), 'border-gray-300': !hasFieldError(companyForm, 'Sector')}\"\n                    placeholder=\"Ingrese el sector\"\n                  >\n                </div>\n                <div *ngIf=\"hasFieldError(companyForm, 'Sector')\" class=\"mt-1 text-sm text-red-600\">\n                  El sector es requerido.\n                </div>\n              </div>\n            </div>\n            <!-- Botones de acción -->\n            <div class=\"flex justify-end mt-6\">\n              <button\n                type=\"button\"\n                (click)=\"toggleCompanyForm()\"\n                class=\"px-4 py-2 mr-2 bg-gray-200 text-gray-700 rounded-lg hover:bg-gray-300 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2 transition-colors\"\n              >\n                Cancelar\n              </button>\n              <button\n                type=\"submit\"\n                [disabled]=\"companyForm.invalid || isLoading\"\n                class=\"inline-flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg shadow-sm hover:bg-blue-700 hover:shadow-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n              >\n                <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5 mr-2\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path fill-rule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clip-rule=\"evenodd\" />\n                </svg>\n                Guardar\n              </button>\n            </div>\n          </form>\n\n          <!-- Lista de empresas para desktop -->\n          <div class=\"hidden sm:block bg-white rounded-lg border border-gray-200 overflow-hidden shadow-md\">\n            <table class=\"min-w-full divide-y divide-gray-200\">\n              <thead class=\"bg-gray-50\">\n                <tr>\n                  <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">ID</th>\n                  <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Nombre</th>\n                  <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Correo</th>\n                  <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Sector</th>\n                  <th scope=\"col\" class=\"px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">Acciones</th>\n                </tr>\n              </thead>\n              <tbody class=\"bg-white divide-y divide-gray-200\">\n                <tr *ngFor=\"let company of filteredCompanies$ | async\" class=\"hover:bg-gray-50 transition-colors duration-150\">\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">{{ company.IdEmpresa }}</td>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{{ company.Nombre }}</td>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{{ company.Correo }}</td>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{{ company.Sector }}</td>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\n                    <button\n                      *ngIf=\"company.IdEmpresa !== 'other'\"\n                      (click)=\"deleteCompany(company.IdEmpresa, company.Nombre)\"\n                      class=\"inline-flex items-center text-red-600 hover:text-red-900 focus:outline-none focus:underline\"\n                      [disabled]=\"isLoading\"\n                    >\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-4 w-4 mr-1\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                        <path fill-rule=\"evenodd\" d=\"M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z\" clip-rule=\"evenodd\" />\n                      </svg>\n                      Eliminar\n                    </button>\n                  </td>\n                </tr>\n                <tr *ngIf=\"(filteredCompanies$ | async)?.length === 0 || ((filteredCompanies$ | async)?.length === 1 && (filteredCompanies$ | async)[0].IdEmpresa === 'other')\">\n                  <td colspan=\"5\" class=\"px-6 py-4 text-center text-sm text-gray-500\">\n                    <div class=\"flex flex-col items-center py-6\">\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-12 w-12 text-gray-300 mb-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 3h1m-1 4h1m4-4h1m-1 4h1m4 14h-2m2 0V9a2 2 0 00-2-2H9a2 2 0 00-2 2v12m0 0h10\" />\n                      </svg>\n                      <p>No hay empresas disponibles</p>\n                    </div>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n\n          <!-- Vista para móviles de empresas -->\n          <div class=\"sm:hidden space-y-4\">\n            <div *ngFor=\"let company of filteredCompanies$ | async\" class=\"bg-white rounded-lg border border-gray-200 shadow-sm p-4\">\n              <div class=\"flex justify-between items-start\">\n                <div>\n                  <span class=\"text-xs font-medium text-gray-500 uppercase\">ID</span>\n                  <p class=\"text-gray-900 font-medium\">{{ company.IdEmpresa }}</p>\n                </div>\n                <button\n                  *ngIf=\"company.IdEmpresa !== 'other'\"\n                  (click)=\"deleteCompany(company.IdEmpresa, company.Nombre)\"\n                  class=\"text-red-600 hover:text-red-900 focus:outline-none\"\n                  [disabled]=\"isLoading\"\n                >\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                    <path fill-rule=\"evenodd\" d=\"M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z\" clip-rule=\"evenodd\" />\n                  </svg>\n                </button>\n              </div>\n              <div class=\"mt-2 pt-2 border-t border-gray-200\">\n                <span class=\"text-xs font-medium text-gray-500 uppercase\">Nombre</span>\n                <p class=\"text-gray-700\">{{ company.Nombre }}</p>\n              </div>\n              <div class=\"mt-2 pt-2 border-t border-gray-200\">\n                <span class=\"text-xs font-medium text-gray-500 uppercase\">Correo</span>\n                <p class=\"text-gray-700\">{{ company.Correo }}</p>\n              </div>\n              <div class=\"mt-2 pt-2 border-t border-gray-200\">\n                <span class=\"text-xs font-medium text-gray-500 uppercase\">Sector</span>\n                <p class=\"text-gray-700\">{{ company.Sector }}</p>\n              </div>\n            </div>\n            <div *ngIf=\"(filteredCompanies$ | async)?.length === 0 || ((filteredCompanies$ | async)?.length === 1 && (filteredCompanies$ | async)[0].IdEmpresa === 'other')\" class=\"bg-white rounded-lg border border-gray-200 shadow-sm p-6 text-center\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-12 w-12 mx-auto mb-2 text-gray-300\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 3h1m-1 4h1m4-4h1m-1 4h1m4 14h-2m2 0V9a2 2 0 00-2-2H9a2 2 0 00-2 2v12m0 0h10\" />\n              </svg>\n              <p class=\"text-gray-500\">No hay empresas disponibles</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>"],
  "mappings": "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",
  "names": ["\u0275\u0275elementStart", "\u0275\u0275element", "\u0275\u0275elementEnd", "\u0275\u0275text", "\u0275\u0275advance", "\u0275\u0275textInterpolate1", "ctx_r0", "errorMessage", "successMessage", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r3", "\u0275\u0275nextContext", "\u0275\u0275resetView", "addDepartment", "\u0275\u0275template", "ManageConfigComponent_div_35_form_16_div_14_Template", "toggleDepartmentForm", "\u0275\u0275property", "departmentForm", "\u0275\u0275pureFunction2", "_c0", "hasFieldError", "invalid", "isLoading", "_r4", "department_r5", "$implicit", "deleteDepartment", "IdDepartamento", "Nombre", "ManageConfigComponent_div_35_tr_28_button_6_Template", "\u0275\u0275textInterpolate", "isAdmin3", "_r6", "department_r7", "ManageConfigComponent_div_35_div_33_button_7_Template", "$event", "_r2", "filterDepartments", "target", "value", "ManageConfigComponent_div_35__svg_svg_13_Template", "ManageConfigComponent_div_35__svg_svg_14_Template", "ManageConfigComponent_div_35_form_16_Template", "ManageConfigComponent_div_35_tr_28_Template", "ManageConfigComponent_div_35_tr_30_Template", "ManageConfigComponent_div_35_div_33_Template", "ManageConfigComponent_div_35_div_35_Template", "departmentFilterText", "showDepartmentForm", "\u0275\u0275pipeBind1", "filteredDepartments$", "tmp_7_0", "length", "tmp_9_0", "_r9", "addCompany", "ManageConfigComponent_div_36_form_16_div_15_Template", "ManageConfigComponent_div_36_form_16_div_24_Template", "ManageConfigComponent_div_36_form_16_div_34_Template", "ManageConfigComponent_div_36_form_16_div_43_Template", "toggleCompanyForm", "companyForm", "_r10", "company_r11", "deleteCompany", "IdEmpresa", "ManageConfigComponent_div_36_tr_32_button_10_Template", "Correo", "Sector", "_r12", "company_r13", "ManageConfigComponent_div_36_div_39_button_7_Template", "_r8", "filterCompanies", "ManageConfigComponent_div_36__svg_svg_13_Template", "ManageConfigComponent_div_36__svg_svg_14_Template", "ManageConfigComponent_div_36_form_16_Template", "ManageConfigComponent_div_36_tr_32_Template", "ManageConfigComponent_div_36_tr_34_Template", "ManageConfigComponent_div_36_div_39_Template", "ManageConfigComponent_div_36_div_41_Template", "companyFilterText", "showCompanyForm", "filteredCompanies$", "ManageConfigComponent", "departmentService", "inject", "DepartmentService", "companyService", "CompanyService", "authService", "AuthService", "fb", "FormBuilder", "router", "Router", "destroyRef", "DestroyRef", "departments$", "BehaviorSubject", "companies$", "isAdmin2OrHigher", "activeTab", "departmentCount", "companyCount", "lastUpdated", "Date", "searchTerm", "isSearching", "animationState", "searchForm", "constructor", "group", "name", "Validators", "required", "minLength", "email", "Direccion", "term", "pipe", "map", "departments", "filterDepartmentsList", "companies", "filterCompaniesList", "ngOnInit", "__async", "checkAdminPermissions", "loadData", "get", "valueChanges", "debounceTime", "takeUntilDestroyed", "subscribe", "error", "console", "showError", "currentUser", "getCurrentUser", "navigate", "userData", "getUserData", "uid", "Rol", "NivelAdmin", "getDepartments", "catchError", "of", "finalize", "next", "getCompanies", "setActiveTab", "tab", "setTimeout", "reset", "departmentName", "trim", "Error", "getValue", "some", "d", "toLowerCase", "showSuccess", "message", "departmentId", "confirm", "updatedDepartments", "filter", "companyData", "isValidEmail", "c", "companyId", "companyName", "updatedCompanies", "filterText", "filtered", "department", "includes", "company", "test", "form", "fieldName", "field", "dirty", "touched", "goBack", "refreshData", "searchItems", "clearAll", "selectors", "decls", "vars", "consts", "template", "rf", "ctx", "ManageConfigComponent_div_21_Template", "ManageConfigComponent_div_22_Template", "ManageConfigComponent_div_23_Template", "ManageConfigComponent_div_35_Template", "ManageConfigComponent_div_36_Template", "\u0275\u0275classProp", "CommonModule", "NgClass", "NgForOf", "NgIf", "AsyncPipe", "ReactiveFormsModule", "\u0275NgNoValidate", "DefaultValueAccessor", "NgControlStatus", "NgControlStatusGroup", "FormGroupDirective", "FormControlName", "styles"]
}
