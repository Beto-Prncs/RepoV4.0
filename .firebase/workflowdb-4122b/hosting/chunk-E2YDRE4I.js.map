{"version":3,"sources":["node_modules/@firebase/functions/dist/esm/index.esm2017.js","node_modules/@angular/fire/fesm2022/angular-fire-functions.mjs","src/app/functionalities/create-accounts/create-accounts.component.ts","src/app/functionalities/create-accounts/create-accounts.component.html"],"sourcesContent":["import { _isFirebaseServerApp, _registerComponent, registerVersion, _getProvider, getApp } from '@firebase/app';\nimport { FirebaseError, getModularInstance, getDefaultEmulatorHostnameAndPort } from '@firebase/util';\nimport { Component } from '@firebase/component';\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst LONG_TYPE = 'type.googleapis.com/google.protobuf.Int64Value';\nconst UNSIGNED_LONG_TYPE = 'type.googleapis.com/google.protobuf.UInt64Value';\nfunction mapValues(\n// { [k: string]: unknown } is no longer a wildcard assignment target after typescript 3.5\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\no, f) {\n  const result = {};\n  for (const key in o) {\n    if (o.hasOwnProperty(key)) {\n      result[key] = f(o[key]);\n    }\n  }\n  return result;\n}\n/**\n * Takes data and encodes it in a JSON-friendly way, such that types such as\n * Date are preserved.\n * @internal\n * @param data - Data to encode.\n */\nfunction encode(data) {\n  if (data == null) {\n    return null;\n  }\n  if (data instanceof Number) {\n    data = data.valueOf();\n  }\n  if (typeof data === 'number' && isFinite(data)) {\n    // Any number in JS is safe to put directly in JSON and parse as a double\n    // without any loss of precision.\n    return data;\n  }\n  if (data === true || data === false) {\n    return data;\n  }\n  if (Object.prototype.toString.call(data) === '[object String]') {\n    return data;\n  }\n  if (data instanceof Date) {\n    return data.toISOString();\n  }\n  if (Array.isArray(data)) {\n    return data.map(x => encode(x));\n  }\n  if (typeof data === 'function' || typeof data === 'object') {\n    return mapValues(data, x => encode(x));\n  }\n  // If we got this far, the data is not encodable.\n  throw new Error('Data cannot be encoded in JSON: ' + data);\n}\n/**\n * Takes data that's been encoded in a JSON-friendly form and returns a form\n * with richer datatypes, such as Dates, etc.\n * @internal\n * @param json - JSON to convert.\n */\nfunction decode(json) {\n  if (json == null) {\n    return json;\n  }\n  if (json['@type']) {\n    switch (json['@type']) {\n      case LONG_TYPE:\n      // Fall through and handle this the same as unsigned.\n      case UNSIGNED_LONG_TYPE:\n        {\n          // Technically, this could work return a valid number for malformed\n          // data if there was a number followed by garbage. But it's just not\n          // worth all the extra code to detect that case.\n          const value = Number(json['value']);\n          if (isNaN(value)) {\n            throw new Error('Data cannot be decoded from JSON: ' + json);\n          }\n          return value;\n        }\n      default:\n        {\n          throw new Error('Data cannot be decoded from JSON: ' + json);\n        }\n    }\n  }\n  if (Array.isArray(json)) {\n    return json.map(x => decode(x));\n  }\n  if (typeof json === 'function' || typeof json === 'object') {\n    return mapValues(json, x => decode(x));\n  }\n  // Anything else is safe to return.\n  return json;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Type constant for Firebase Functions.\n */\nconst FUNCTIONS_TYPE = 'functions';\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Standard error codes for different ways a request can fail, as defined by:\n * https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\n *\n * This map is used primarily to convert from a backend error code string to\n * a client SDK error code string, and make sure it's in the supported set.\n */\nconst errorCodeMap = {\n  OK: 'ok',\n  CANCELLED: 'cancelled',\n  UNKNOWN: 'unknown',\n  INVALID_ARGUMENT: 'invalid-argument',\n  DEADLINE_EXCEEDED: 'deadline-exceeded',\n  NOT_FOUND: 'not-found',\n  ALREADY_EXISTS: 'already-exists',\n  PERMISSION_DENIED: 'permission-denied',\n  UNAUTHENTICATED: 'unauthenticated',\n  RESOURCE_EXHAUSTED: 'resource-exhausted',\n  FAILED_PRECONDITION: 'failed-precondition',\n  ABORTED: 'aborted',\n  OUT_OF_RANGE: 'out-of-range',\n  UNIMPLEMENTED: 'unimplemented',\n  INTERNAL: 'internal',\n  UNAVAILABLE: 'unavailable',\n  DATA_LOSS: 'data-loss'\n};\n/**\n * An error returned by the Firebase Functions client SDK.\n *\n * See {@link FunctionsErrorCode} for full documentation of codes.\n *\n * @public\n */\nclass FunctionsError extends FirebaseError {\n  /**\n   * Constructs a new instance of the `FunctionsError` class.\n   */\n  constructor(\n  /**\n   * A standard error code that will be returned to the client. This also\n   * determines the HTTP status code of the response, as defined in code.proto.\n   */\n  code, message,\n  /**\n   * Additional details to be converted to JSON and included in the error response.\n   */\n  details) {\n    super(`${FUNCTIONS_TYPE}/${code}`, message || '');\n    this.details = details;\n    // Since the FirebaseError constructor sets the prototype of `this` to FirebaseError.prototype,\n    // we also have to do it in all subclasses to allow for correct `instanceof` checks.\n    Object.setPrototypeOf(this, FunctionsError.prototype);\n  }\n}\n/**\n * Takes an HTTP status code and returns the corresponding ErrorCode.\n * This is the standard HTTP status code -> error mapping defined in:\n * https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\n *\n * @param status An HTTP status code.\n * @return The corresponding ErrorCode, or ErrorCode.UNKNOWN if none.\n */\nfunction codeForHTTPStatus(status) {\n  // Make sure any successful status is OK.\n  if (status >= 200 && status < 300) {\n    return 'ok';\n  }\n  switch (status) {\n    case 0:\n      // This can happen if the server returns 500.\n      return 'internal';\n    case 400:\n      return 'invalid-argument';\n    case 401:\n      return 'unauthenticated';\n    case 403:\n      return 'permission-denied';\n    case 404:\n      return 'not-found';\n    case 409:\n      return 'aborted';\n    case 429:\n      return 'resource-exhausted';\n    case 499:\n      return 'cancelled';\n    case 500:\n      return 'internal';\n    case 501:\n      return 'unimplemented';\n    case 503:\n      return 'unavailable';\n    case 504:\n      return 'deadline-exceeded';\n  }\n  return 'unknown';\n}\n/**\n * Takes an HTTP response and returns the corresponding Error, if any.\n */\nfunction _errorForResponse(status, bodyJSON) {\n  let code = codeForHTTPStatus(status);\n  // Start with reasonable defaults from the status code.\n  let description = code;\n  let details = undefined;\n  // Then look through the body for explicit details.\n  try {\n    const errorJSON = bodyJSON && bodyJSON.error;\n    if (errorJSON) {\n      const status = errorJSON.status;\n      if (typeof status === 'string') {\n        if (!errorCodeMap[status]) {\n          // They must've included an unknown error code in the body.\n          return new FunctionsError('internal', 'internal');\n        }\n        code = errorCodeMap[status];\n        // TODO(klimt): Add better default descriptions for error enums.\n        // The default description needs to be updated for the new code.\n        description = status;\n      }\n      const message = errorJSON.message;\n      if (typeof message === 'string') {\n        description = message;\n      }\n      details = errorJSON.details;\n      if (details !== undefined) {\n        details = decode(details);\n      }\n    }\n  } catch (e) {\n    // If we couldn't parse explicit error data, that's fine.\n  }\n  if (code === 'ok') {\n    // Technically, there's an edge case where a developer could explicitly\n    // return an error code of OK, and we will treat it as success, but that\n    // seems reasonable.\n    return null;\n  }\n  return new FunctionsError(code, description, details);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Helper class to get metadata that should be included with a function call.\n * @internal\n */\nclass ContextProvider {\n  constructor(app, authProvider, messagingProvider, appCheckProvider) {\n    this.app = app;\n    this.auth = null;\n    this.messaging = null;\n    this.appCheck = null;\n    this.serverAppAppCheckToken = null;\n    if (_isFirebaseServerApp(app) && app.settings.appCheckToken) {\n      this.serverAppAppCheckToken = app.settings.appCheckToken;\n    }\n    this.auth = authProvider.getImmediate({\n      optional: true\n    });\n    this.messaging = messagingProvider.getImmediate({\n      optional: true\n    });\n    if (!this.auth) {\n      authProvider.get().then(auth => this.auth = auth, () => {\n        /* get() never rejects */\n      });\n    }\n    if (!this.messaging) {\n      messagingProvider.get().then(messaging => this.messaging = messaging, () => {\n        /* get() never rejects */\n      });\n    }\n    if (!this.appCheck) {\n      appCheckProvider === null || appCheckProvider === void 0 ? void 0 : appCheckProvider.get().then(appCheck => this.appCheck = appCheck, () => {\n        /* get() never rejects */\n      });\n    }\n  }\n  async getAuthToken() {\n    if (!this.auth) {\n      return undefined;\n    }\n    try {\n      const token = await this.auth.getToken();\n      return token === null || token === void 0 ? void 0 : token.accessToken;\n    } catch (e) {\n      // If there's any error when trying to get the auth token, leave it off.\n      return undefined;\n    }\n  }\n  async getMessagingToken() {\n    if (!this.messaging || !('Notification' in self) || Notification.permission !== 'granted') {\n      return undefined;\n    }\n    try {\n      return await this.messaging.getToken();\n    } catch (e) {\n      // We don't warn on this, because it usually means messaging isn't set up.\n      // console.warn('Failed to retrieve instance id token.', e);\n      // If there's any error when trying to get the token, leave it off.\n      return undefined;\n    }\n  }\n  async getAppCheckToken(limitedUseAppCheckTokens) {\n    if (this.serverAppAppCheckToken) {\n      return this.serverAppAppCheckToken;\n    }\n    if (this.appCheck) {\n      const result = limitedUseAppCheckTokens ? await this.appCheck.getLimitedUseToken() : await this.appCheck.getToken();\n      if (result.error) {\n        // Do not send the App Check header to the functions endpoint if\n        // there was an error from the App Check exchange endpoint. The App\n        // Check SDK will already have logged the error to console.\n        return null;\n      }\n      return result.token;\n    }\n    return null;\n  }\n  async getContext(limitedUseAppCheckTokens) {\n    const authToken = await this.getAuthToken();\n    const messagingToken = await this.getMessagingToken();\n    const appCheckToken = await this.getAppCheckToken(limitedUseAppCheckTokens);\n    return {\n      authToken,\n      messagingToken,\n      appCheckToken\n    };\n  }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst DEFAULT_REGION = 'us-central1';\nconst responseLineRE = /^data: (.*?)(?:\\n|$)/;\n/**\n * Returns a Promise that will be rejected after the given duration.\n * The error will be of type FunctionsError.\n *\n * @param millis Number of milliseconds to wait before rejecting.\n */\nfunction failAfter(millis) {\n  // Node timers and browser timers are fundamentally incompatible, but we\n  // don't care about the value here\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  let timer = null;\n  return {\n    promise: new Promise((_, reject) => {\n      timer = setTimeout(() => {\n        reject(new FunctionsError('deadline-exceeded', 'deadline-exceeded'));\n      }, millis);\n    }),\n    cancel: () => {\n      if (timer) {\n        clearTimeout(timer);\n      }\n    }\n  };\n}\n/**\n * The main class for the Firebase Functions SDK.\n * @internal\n */\nclass FunctionsService {\n  /**\n   * Creates a new Functions service for the given app.\n   * @param app - The FirebaseApp to use.\n   */\n  constructor(app, authProvider, messagingProvider, appCheckProvider, regionOrCustomDomain = DEFAULT_REGION, fetchImpl = (...args) => fetch(...args)) {\n    this.app = app;\n    this.fetchImpl = fetchImpl;\n    this.emulatorOrigin = null;\n    this.contextProvider = new ContextProvider(app, authProvider, messagingProvider, appCheckProvider);\n    // Cancels all ongoing requests when resolved.\n    this.cancelAllRequests = new Promise(resolve => {\n      this.deleteService = () => {\n        return Promise.resolve(resolve());\n      };\n    });\n    // Resolve the region or custom domain overload by attempting to parse it.\n    try {\n      const url = new URL(regionOrCustomDomain);\n      this.customDomain = url.origin + (url.pathname === '/' ? '' : url.pathname);\n      this.region = DEFAULT_REGION;\n    } catch (e) {\n      this.customDomain = null;\n      this.region = regionOrCustomDomain;\n    }\n  }\n  _delete() {\n    return this.deleteService();\n  }\n  /**\n   * Returns the URL for a callable with the given name.\n   * @param name - The name of the callable.\n   * @internal\n   */\n  _url(name) {\n    const projectId = this.app.options.projectId;\n    if (this.emulatorOrigin !== null) {\n      const origin = this.emulatorOrigin;\n      return `${origin}/${projectId}/${this.region}/${name}`;\n    }\n    if (this.customDomain !== null) {\n      return `${this.customDomain}/${name}`;\n    }\n    return `https://${this.region}-${projectId}.cloudfunctions.net/${name}`;\n  }\n}\n/**\n * Modify this instance to communicate with the Cloud Functions emulator.\n *\n * Note: this must be called before this instance has been used to do any operations.\n *\n * @param host The emulator host (ex: localhost)\n * @param port The emulator port (ex: 5001)\n * @public\n */\nfunction connectFunctionsEmulator$1(functionsInstance, host, port) {\n  functionsInstance.emulatorOrigin = `http://${host}:${port}`;\n}\n/**\n * Returns a reference to the callable https trigger with the given name.\n * @param name - The name of the trigger.\n * @public\n */\nfunction httpsCallable$1(functionsInstance, name, options) {\n  const callable = data => {\n    return call(functionsInstance, name, data, options || {});\n  };\n  callable.stream = (data, options) => {\n    return stream(functionsInstance, name, data, options);\n  };\n  return callable;\n}\n/**\n * Returns a reference to the callable https trigger with the given url.\n * @param url - The url of the trigger.\n * @public\n */\nfunction httpsCallableFromURL$1(functionsInstance, url, options) {\n  const callable = data => {\n    return callAtURL(functionsInstance, url, data, options || {});\n  };\n  callable.stream = (data, options) => {\n    return streamAtURL(functionsInstance, url, data, options || {});\n  };\n  return callable;\n}\n/**\n * Does an HTTP POST and returns the completed response.\n * @param url The url to post to.\n * @param body The JSON body of the post.\n * @param headers The HTTP headers to include in the request.\n * @return A Promise that will succeed when the request finishes.\n */\nasync function postJSON(url, body, headers, fetchImpl) {\n  headers['Content-Type'] = 'application/json';\n  let response;\n  try {\n    response = await fetchImpl(url, {\n      method: 'POST',\n      body: JSON.stringify(body),\n      headers\n    });\n  } catch (e) {\n    // This could be an unhandled error on the backend, or it could be a\n    // network error. There's no way to know, since an unhandled error on the\n    // backend will fail to set the proper CORS header, and thus will be\n    // treated as a network error by fetch.\n    return {\n      status: 0,\n      json: null\n    };\n  }\n  let json = null;\n  try {\n    json = await response.json();\n  } catch (e) {\n    // If we fail to parse JSON, it will fail the same as an empty body.\n  }\n  return {\n    status: response.status,\n    json\n  };\n}\n/**\n * Creates authorization headers for Firebase Functions requests.\n * @param functionsInstance The Firebase Functions service instance.\n * @param options Options for the callable function, including AppCheck token settings.\n * @return A Promise that resolves a headers map to include in outgoing fetch request.\n */\nasync function makeAuthHeaders(functionsInstance, options) {\n  const headers = {};\n  const context = await functionsInstance.contextProvider.getContext(options.limitedUseAppCheckTokens);\n  if (context.authToken) {\n    headers['Authorization'] = 'Bearer ' + context.authToken;\n  }\n  if (context.messagingToken) {\n    headers['Firebase-Instance-ID-Token'] = context.messagingToken;\n  }\n  if (context.appCheckToken !== null) {\n    headers['X-Firebase-AppCheck'] = context.appCheckToken;\n  }\n  return headers;\n}\n/**\n * Calls a callable function asynchronously and returns the result.\n * @param name The name of the callable trigger.\n * @param data The data to pass as params to the function.\n */\nfunction call(functionsInstance, name, data, options) {\n  const url = functionsInstance._url(name);\n  return callAtURL(functionsInstance, url, data, options);\n}\n/**\n * Calls a callable function asynchronously and returns the result.\n * @param url The url of the callable trigger.\n * @param data The data to pass as params to the function.\n */\nasync function callAtURL(functionsInstance, url, data, options) {\n  // Encode any special types, such as dates, in the input data.\n  data = encode(data);\n  const body = {\n    data\n  };\n  // Add a header for the authToken.\n  const headers = await makeAuthHeaders(functionsInstance, options);\n  // Default timeout to 70s, but let the options override it.\n  const timeout = options.timeout || 70000;\n  const failAfterHandle = failAfter(timeout);\n  const response = await Promise.race([postJSON(url, body, headers, functionsInstance.fetchImpl), failAfterHandle.promise, functionsInstance.cancelAllRequests]);\n  // Always clear the failAfter timeout\n  failAfterHandle.cancel();\n  // If service was deleted, interrupted response throws an error.\n  if (!response) {\n    throw new FunctionsError('cancelled', 'Firebase Functions instance was deleted.');\n  }\n  // Check for an error status, regardless of http status.\n  const error = _errorForResponse(response.status, response.json);\n  if (error) {\n    throw error;\n  }\n  if (!response.json) {\n    throw new FunctionsError('internal', 'Response is not valid JSON object.');\n  }\n  let responseData = response.json.data;\n  // TODO(klimt): For right now, allow \"result\" instead of \"data\", for\n  // backwards compatibility.\n  if (typeof responseData === 'undefined') {\n    responseData = response.json.result;\n  }\n  if (typeof responseData === 'undefined') {\n    // Consider the response malformed.\n    throw new FunctionsError('internal', 'Response is missing data field.');\n  }\n  // Decode any special types, such as dates, in the returned data.\n  const decodedData = decode(responseData);\n  return {\n    data: decodedData\n  };\n}\n/**\n * Calls a callable function asynchronously and returns a streaming result.\n * @param name The name of the callable trigger.\n * @param data The data to pass as params to the function.\n * @param options Streaming request options.\n */\nfunction stream(functionsInstance, name, data, options) {\n  const url = functionsInstance._url(name);\n  return streamAtURL(functionsInstance, url, data, options || {});\n}\n/**\n * Calls a callable function asynchronously and return a streaming result.\n * @param url The url of the callable trigger.\n * @param data The data to pass as params to the function.\n * @param options Streaming request options.\n */\nasync function streamAtURL(functionsInstance, url, data, options) {\n  var _a;\n  // Encode any special types, such as dates, in the input data.\n  data = encode(data);\n  const body = {\n    data\n  };\n  //\n  // Add a header for the authToken.\n  const headers = await makeAuthHeaders(functionsInstance, options);\n  headers['Content-Type'] = 'application/json';\n  headers['Accept'] = 'text/event-stream';\n  let response;\n  try {\n    response = await functionsInstance.fetchImpl(url, {\n      method: 'POST',\n      body: JSON.stringify(body),\n      headers,\n      signal: options === null || options === void 0 ? void 0 : options.signal\n    });\n  } catch (e) {\n    if (e instanceof Error && e.name === 'AbortError') {\n      const error = new FunctionsError('cancelled', 'Request was cancelled.');\n      return {\n        data: Promise.reject(error),\n        stream: {\n          [Symbol.asyncIterator]() {\n            return {\n              next() {\n                return Promise.reject(error);\n              }\n            };\n          }\n        }\n      };\n    }\n    // This could be an unhandled error on the backend, or it could be a\n    // network error. There's no way to know, since an unhandled error on the\n    // backend will fail to set the proper CORS header, and thus will be\n    // treated as a network error by fetch.\n    const error = _errorForResponse(0, null);\n    return {\n      data: Promise.reject(error),\n      // Return an empty async iterator\n      stream: {\n        [Symbol.asyncIterator]() {\n          return {\n            next() {\n              return Promise.reject(error);\n            }\n          };\n        }\n      }\n    };\n  }\n  let resultResolver;\n  let resultRejecter;\n  const resultPromise = new Promise((resolve, reject) => {\n    resultResolver = resolve;\n    resultRejecter = reject;\n  });\n  (_a = options === null || options === void 0 ? void 0 : options.signal) === null || _a === void 0 ? void 0 : _a.addEventListener('abort', () => {\n    const error = new FunctionsError('cancelled', 'Request was cancelled.');\n    resultRejecter(error);\n  });\n  const reader = response.body.getReader();\n  const rstream = createResponseStream(reader, resultResolver, resultRejecter, options === null || options === void 0 ? void 0 : options.signal);\n  return {\n    stream: {\n      [Symbol.asyncIterator]() {\n        const rreader = rstream.getReader();\n        return {\n          async next() {\n            const {\n              value,\n              done\n            } = await rreader.read();\n            return {\n              value: value,\n              done\n            };\n          },\n          async return() {\n            await rreader.cancel();\n            return {\n              done: true,\n              value: undefined\n            };\n          }\n        };\n      }\n    },\n    data: resultPromise\n  };\n}\n/**\n * Creates a ReadableStream that processes a streaming response from a streaming\n * callable function that returns data in server-sent event format.\n *\n * @param reader The underlying reader providing raw response data\n * @param resultResolver Callback to resolve the final result when received\n * @param resultRejecter Callback to reject with an error if encountered\n * @param signal Optional AbortSignal to cancel the stream processing\n * @returns A ReadableStream that emits decoded messages from the response\n *\n * The returned ReadableStream:\n *   1. Emits individual messages when \"message\" data is received\n *   2. Resolves with the final result when a \"result\" message is received\n *   3. Rejects with an error if an \"error\" message is received\n */\nfunction createResponseStream(reader, resultResolver, resultRejecter, signal) {\n  const processLine = (line, controller) => {\n    const match = line.match(responseLineRE);\n    // ignore all other lines (newline, comments, etc.)\n    if (!match) {\n      return;\n    }\n    const data = match[1];\n    try {\n      const jsonData = JSON.parse(data);\n      if ('result' in jsonData) {\n        resultResolver(decode(jsonData.result));\n        return;\n      }\n      if ('message' in jsonData) {\n        controller.enqueue(decode(jsonData.message));\n        return;\n      }\n      if ('error' in jsonData) {\n        const error = _errorForResponse(0, jsonData);\n        controller.error(error);\n        resultRejecter(error);\n        return;\n      }\n    } catch (error) {\n      if (error instanceof FunctionsError) {\n        controller.error(error);\n        resultRejecter(error);\n        return;\n      }\n      // ignore other parsing errors\n    }\n  };\n  const decoder = new TextDecoder();\n  return new ReadableStream({\n    start(controller) {\n      let currentText = '';\n      return pump();\n      async function pump() {\n        if (signal === null || signal === void 0 ? void 0 : signal.aborted) {\n          const error = new FunctionsError('cancelled', 'Request was cancelled');\n          controller.error(error);\n          resultRejecter(error);\n          return Promise.resolve();\n        }\n        try {\n          const {\n            value,\n            done\n          } = await reader.read();\n          if (done) {\n            if (currentText.trim()) {\n              processLine(currentText.trim(), controller);\n            }\n            controller.close();\n            return;\n          }\n          if (signal === null || signal === void 0 ? void 0 : signal.aborted) {\n            const error = new FunctionsError('cancelled', 'Request was cancelled');\n            controller.error(error);\n            resultRejecter(error);\n            await reader.cancel();\n            return;\n          }\n          currentText += decoder.decode(value, {\n            stream: true\n          });\n          const lines = currentText.split('\\n');\n          currentText = lines.pop() || '';\n          for (const line of lines) {\n            if (line.trim()) {\n              processLine(line.trim(), controller);\n            }\n          }\n          return pump();\n        } catch (error) {\n          const functionsError = error instanceof FunctionsError ? error : _errorForResponse(0, null);\n          controller.error(functionsError);\n          resultRejecter(functionsError);\n        }\n      }\n    },\n    cancel() {\n      return reader.cancel();\n    }\n  });\n}\nconst name = \"@firebase/functions\";\nconst version = \"0.12.3\";\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst AUTH_INTERNAL_NAME = 'auth-internal';\nconst APP_CHECK_INTERNAL_NAME = 'app-check-internal';\nconst MESSAGING_INTERNAL_NAME = 'messaging-internal';\nfunction registerFunctions(variant) {\n  const factory = (container, {\n    instanceIdentifier: regionOrCustomDomain\n  }) => {\n    // Dependencies\n    const app = container.getProvider('app').getImmediate();\n    const authProvider = container.getProvider(AUTH_INTERNAL_NAME);\n    const messagingProvider = container.getProvider(MESSAGING_INTERNAL_NAME);\n    const appCheckProvider = container.getProvider(APP_CHECK_INTERNAL_NAME);\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return new FunctionsService(app, authProvider, messagingProvider, appCheckProvider, regionOrCustomDomain);\n  };\n  _registerComponent(new Component(FUNCTIONS_TYPE, factory, \"PUBLIC\" /* ComponentType.PUBLIC */).setMultipleInstances(true));\n  registerVersion(name, version, variant);\n  // BUILD_TARGET will be replaced by values like esm2017, cjs2017, etc during the compilation\n  registerVersion(name, version, 'esm2017');\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns a {@link Functions} instance for the given app.\n * @param app - The {@link @firebase/app#FirebaseApp} to use.\n * @param regionOrCustomDomain - one of:\n *   a) The region the callable functions are located in (ex: us-central1)\n *   b) A custom domain hosting the callable functions (ex: https://mydomain.com)\n * @public\n */\nfunction getFunctions(app = getApp(), regionOrCustomDomain = DEFAULT_REGION) {\n  // Dependencies\n  const functionsProvider = _getProvider(getModularInstance(app), FUNCTIONS_TYPE);\n  const functionsInstance = functionsProvider.getImmediate({\n    identifier: regionOrCustomDomain\n  });\n  const emulator = getDefaultEmulatorHostnameAndPort('functions');\n  if (emulator) {\n    connectFunctionsEmulator(functionsInstance, ...emulator);\n  }\n  return functionsInstance;\n}\n/**\n * Modify this instance to communicate with the Cloud Functions emulator.\n *\n * Note: this must be called before this instance has been used to do any operations.\n *\n * @param host - The emulator host (ex: localhost)\n * @param port - The emulator port (ex: 5001)\n * @public\n */\nfunction connectFunctionsEmulator(functionsInstance, host, port) {\n  connectFunctionsEmulator$1(getModularInstance(functionsInstance), host, port);\n}\n/**\n * Returns a reference to the callable HTTPS trigger with the given name.\n * @param name - The name of the trigger.\n * @public\n */\nfunction httpsCallable(functionsInstance, name, options) {\n  return httpsCallable$1(getModularInstance(functionsInstance), name, options);\n}\n/**\n * Returns a reference to the callable HTTPS trigger with the specified url.\n * @param url - The url of the trigger.\n * @public\n */\nfunction httpsCallableFromURL(functionsInstance, url, options) {\n  return httpsCallableFromURL$1(getModularInstance(functionsInstance), url, options);\n}\n\n/**\n * Cloud Functions for Firebase\n *\n * @packageDocumentation\n */\nregisterFunctions();\nexport { FunctionsError, connectFunctionsEmulator, getFunctions, httpsCallable, httpsCallableFromURL };\n","import * as i0 from '@angular/core';\nimport { InjectionToken, Optional, NgModule, makeEnvironmentProviders, NgZone, Injector } from '@angular/core';\nimport { ɵgetAllInstancesOf as _getAllInstancesOf, ɵgetDefaultInstanceOf as _getDefaultInstanceOf, VERSION, ɵAngularFireSchedulers as _AngularFireSchedulers, ɵzoneWrap as _zoneWrap } from '@angular/fire';\nimport { FirebaseApp, FirebaseApps } from '@angular/fire/app';\nimport { AppCheckInstances } from '@angular/fire/app-check';\nimport { AuthInstances } from '@angular/fire/auth';\nimport { registerVersion } from 'firebase/app';\nimport { timer, from } from 'rxjs';\nimport { concatMap, distinct } from 'rxjs/operators';\nimport { httpsCallable as httpsCallable$1 } from 'rxfire/functions';\nimport { connectFunctionsEmulator as connectFunctionsEmulator$1, getFunctions as getFunctions$1, httpsCallable as httpsCallable$2, httpsCallableFromURL as httpsCallableFromURL$1 } from 'firebase/functions';\nexport * from 'firebase/functions';\nclass Functions {\n  constructor(functions) {\n    return functions;\n  }\n}\nconst FUNCTIONS_PROVIDER_NAME = 'functions';\nclass FunctionsInstances {\n  constructor() {\n    return _getAllInstancesOf(FUNCTIONS_PROVIDER_NAME);\n  }\n}\nconst functionInstance$ = /*#__PURE__*/ /*#__PURE__*/timer(0, 300).pipe(/*#__PURE__*/concatMap(() => from(_getAllInstancesOf(FUNCTIONS_PROVIDER_NAME))), /*#__PURE__*/distinct());\nconst PROVIDED_FUNCTIONS_INSTANCES = /*#__PURE__*/new InjectionToken('angularfire2.functions-instances');\nfunction defaultFunctionsInstanceFactory(provided, defaultApp) {\n  const defaultAuth = _getDefaultInstanceOf(FUNCTIONS_PROVIDER_NAME, provided, defaultApp);\n  return defaultAuth && new Functions(defaultAuth);\n}\nfunction functionsInstanceFactory(fn) {\n  return (zone, injector) => {\n    const functions = zone.runOutsideAngular(() => fn(injector));\n    return new Functions(functions);\n  };\n}\nconst FUNCTIONS_INSTANCES_PROVIDER = {\n  provide: FunctionsInstances,\n  deps: [[/*#__PURE__*/new Optional(), PROVIDED_FUNCTIONS_INSTANCES]]\n};\nconst DEFAULT_FUNCTIONS_INSTANCE_PROVIDER = {\n  provide: Functions,\n  useFactory: defaultFunctionsInstanceFactory,\n  deps: [[/*#__PURE__*/new Optional(), PROVIDED_FUNCTIONS_INSTANCES], FirebaseApp]\n};\nlet FunctionsModule = /*#__PURE__*/(() => {\n  class FunctionsModule {\n    constructor() {\n      registerVersion('angularfire', VERSION.full, 'fn');\n    }\n    static ɵfac = function FunctionsModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || FunctionsModule)();\n    };\n    static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: FunctionsModule\n    });\n    static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      providers: [DEFAULT_FUNCTIONS_INSTANCE_PROVIDER, FUNCTIONS_INSTANCES_PROVIDER]\n    });\n  }\n  return FunctionsModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction provideFunctions(fn, ...deps) {\n  registerVersion('angularfire', VERSION.full, 'fn');\n  return makeEnvironmentProviders([DEFAULT_FUNCTIONS_INSTANCE_PROVIDER, FUNCTIONS_INSTANCES_PROVIDER, {\n    provide: PROVIDED_FUNCTIONS_INSTANCES,\n    useFactory: functionsInstanceFactory(fn),\n    multi: true,\n    deps: [NgZone, Injector, _AngularFireSchedulers, FirebaseApps,\n    // Defensively load Auth first, if provided\n    [new Optional(), AuthInstances], [new Optional(), AppCheckInstances], ...deps]\n  }]);\n}\n\n// DO NOT MODIFY, this file is autogenerated by tools/build.ts\nconst httpsCallableData = /*#__PURE__*/_zoneWrap(httpsCallable$1, true);\n\n// DO NOT MODIFY, this file is autogenerated by tools/build.ts\nconst connectFunctionsEmulator = /*#__PURE__*/_zoneWrap(connectFunctionsEmulator$1, true);\nconst getFunctions = /*#__PURE__*/_zoneWrap(getFunctions$1, true);\nconst httpsCallable = /*#__PURE__*/_zoneWrap(httpsCallable$2, true);\nconst httpsCallableFromURL = /*#__PURE__*/_zoneWrap(httpsCallableFromURL$1, true);\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Functions, FunctionsInstances, FunctionsModule, connectFunctionsEmulator, functionInstance$, getFunctions, httpsCallable, httpsCallableData, httpsCallableFromURL, provideFunctions };\n","import { Component, OnInit, inject, DestroyRef } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Auth, createUserWithEmailAndPassword, sendEmailVerification } from '@angular/fire/auth';\nimport {\n  Firestore,\n  doc,\n  setDoc,\n  collection,\n  getDocs,\n  query,\n  where,\n  getDoc\n} from '@angular/fire/firestore';\n// Importar funciones para envío de correo\nimport { getFunctions, httpsCallable } from '@angular/fire/functions';\nimport { Usuario, Departamento } from '../../models/interfaces';\nimport { DepartmentService } from '../../services/department.service';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { BehaviorSubject } from 'rxjs';\n\ninterface AccountData {\n  firstName: string;\n  lastName: string;\n  email: string;\n  phone: string;\n  username: string;\n  password: string;\n  department: string;\n  customDepartment?: string;\n  adminLevel: string;\n  customAdminLevel?: string;\n}\n\ninterface Notification {\n  id: number;\n  type: 'success' | 'error';\n  title: string;\n  message: string;\n}\n\n@Component({\n  selector: 'app-create-accounts',\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  templateUrl: './create-accounts.component.html',\n  styleUrls: [\n    './create-accounts.component.scss',\n    './create-accounts-animations.css'\n  ]\n})\nexport class CreateAccountsComponent implements OnInit {\n  private auth: Auth = inject(Auth);\n  private firestore: Firestore = inject(Firestore);\n  private router: Router = inject(Router);\n  private functions = getFunctions();\n  private departmentService: DepartmentService = inject(DepartmentService);\n  private destroyRef: DestroyRef = inject(DestroyRef);\n\n  selectedType: 'worker' | 'admin' | null = null;\n  showPassword: boolean = false;\n  isLoading: boolean = false;\n  formSubmitted: boolean = false;\n  showCustomDepartment: boolean = false;\n  showCustomAdminLevel: boolean = false;\n  existingUsernames: string[] = [];\n  notifications: Notification[] = [];\n  isAdminLevelRestricted = false;\n  currentAdminLevel = '';\n  private notificationId = 0;\n  \n  departments$ = new BehaviorSubject<Departamento[]>([]);\n  adminLevels: string[] = ['1', '2', '3', 'otro'];\n  \n  accountData: AccountData = {\n    firstName: '',\n    lastName: '',\n    email: '',\n    phone: '',\n    username: '',\n    password: '',\n    department: '',\n    customDepartment: '',\n    adminLevel: '',\n    customAdminLevel: ''\n  };\n\n  async ngOnInit() {\n    await this.loadInitialData();\n    await this.checkAdminRestrictions();\n    this.loadDepartments();\n  }\n\n  private async loadInitialData() {\n    try {\n      await this.loadExistingUsernames();\n    } catch (error) {\n      console.error('Error loading initial data:', error);\n    }\n  }\n\n  private loadDepartments() {\n    this.departmentService.getDepartments().pipe(\n      takeUntilDestroyed(this.destroyRef)\n    ).subscribe({\n      next: (departments) => {\n        // Añadir la opción \"otro\" al final de los departamentos\n        const departmentsWithOther = [\n          ...departments,\n          { \n            IdDepartamento: 'otro', \n            Nombre: 'Otro departamento',\n            id: 'otro',\n            name: 'Otro departamento'\n          }\n        ];\n        this.departments$.next(departmentsWithOther);\n      },\n      error: (error) => {\n        console.error('Error cargando departamentos:', error);\n        this.showNotification('error', 'Error', 'No se pudieron cargar los departamentos');\n      }\n    });\n  }\n\n  private async loadExistingUsernames() {\n    try {\n      const usersRef = collection(this.firestore, 'Usuario');\n      const querySnapshot = await getDocs(usersRef);\n      this.existingUsernames = querySnapshot.docs\n        .map(doc => doc.data()['Username'])\n        .filter(username => username);\n    } catch (error) {\n      console.error('Error loading usernames:', error);\n    }\n  }\n\n  private async checkAdminRestrictions() {\n    try {\n      const currentUser = this.auth.currentUser;\n      if (currentUser) {\n        const userDoc = await getDoc(doc(this.firestore, 'Usuario', currentUser.uid));\n        if (userDoc.exists()) {\n          const userData = userDoc.data();\n          if (userData && userData['Rol'] === 'admin') {\n            this.currentAdminLevel = userData['NivelAdmin'];\n            // Si es nivel 2 o 3, restringir las opciones\n            if (userData['NivelAdmin'] === '2' || userData['NivelAdmin'] === '3') {\n              this.isAdminLevelRestricted = true;\n              // Si el usuario selecciona tipo admin, establecer nivel 2 por defecto\n              if (this.selectedType === 'admin') {\n                this.accountData.adminLevel = '2';\n              }\n            }\n          }\n        }\n      }\n    } catch (error) {\n      console.error('Error verificando restricciones de admin:', error);\n    }\n  }\n\n  // Método para obtener los niveles de admin disponibles según el nivel del creador\n  getAvailableAdminLevels(): string[] {\n    if (this.isAdminLevelRestricted) {\n      return ['2']; // Solo permite crear nivel 2\n    }\n    return this.adminLevels; // Devuelve todos los niveles\n  }\n\n  showNotification(type: 'success' | 'error', title: string, message: string) {\n    const id = ++this.notificationId;\n    this.notifications.push({ id, type, title, message });\n    // Auto-eliminar después de 5 segundos\n    setTimeout(() => {\n      this.removeNotification(id);\n    }, 5000);\n  }\n\n  removeNotification(id: number) {\n    this.notifications = this.notifications.filter(n => n.id !== id);\n  }\n\n  async onSubmit(form: NgForm): Promise<void> {\n    if (form.invalid || !this.selectedType) return;\n    \n    this.formSubmitted = true;\n    this.isLoading = true;\n    \n    try {\n      // Verificar disponibilidad del nombre de usuario\n      if (!(await this.isUsernameAvailable(this.accountData.username))) {\n        this.showNotification(\n          'error',\n          'Error de registro',\n          'Este nombre de usuario ya está en uso'\n        );\n        this.isLoading = false;\n        this.formSubmitted = false;\n        return;\n      }\n      \n      // Obtener el usuario actual (creador)\n      const currentUser = this.auth.currentUser;\n      if (!currentUser) {\n        this.showNotification(\n          'error',\n          'Error de autenticación',\n          'No hay una sesión activa'\n        );\n        this.isLoading = false;\n        this.formSubmitted = false;\n        return;\n      }\n      \n      // Determinar el nivel de admin según el usuario que lo crea\n      let nivelAdmin = this.accountData.adminLevel;\n      if (this.selectedType === 'admin' && this.isAdminLevelRestricted) {\n        // Si está restringido, forzar nivel 2\n        nivelAdmin = '2';\n      }\n      \n      // Determinar el departamento\n      let departamento = '';\n      if (this.selectedType === 'worker') {\n        departamento = this.accountData.department === 'otro' \n          ? this.accountData.customDepartment || \"\" \n          : this.accountData.department;\n      }\n      \n      // IMPORTANTE: Guardar la contraseña antes de crear el usuario en Authentication\n      const plainPassword = this.accountData.password;\n      \n      // Crear usuario en Authentication\n      const userCredential = await createUserWithEmailAndPassword(\n        this.auth,\n        this.accountData.email,\n        plainPassword // Usar la contraseña sin modificar\n      );\n      \n      // Enviar correo de verificación\n      await sendEmailVerification(userCredential.user);\n      \n      // Crear documento de usuario en Firestore con el createdBy y la contraseña en texto plano\n      const userData: Usuario = {\n        IdUsuario: userCredential.user.uid,\n        Nombre: `${this.accountData.firstName} ${this.accountData.lastName}`,\n        Correo: this.accountData.email,\n        Username: this.accountData.username,\n        // IMPORTANTE: Almacenar la contraseña en texto plano para permitir login con username\n        Password: plainPassword, // Guardar la misma contraseña que se usó en Firebase Auth\n        Foto_Perfil: \"\",\n        Rol: this.selectedType,\n        Telefono: this.accountData.phone || \"\",\n        Departamento: departamento,\n        NivelAdmin: this.selectedType === 'admin' ? nivelAdmin : \"\",\n        createdBy: currentUser.uid // Añadir el ID del creador\n      };\n      \n      await setDoc(doc(this.firestore, 'Usuario', userCredential.user.uid), userData);\n      \n      // Enviar correo de bienvenida con credenciales\n      await this.sendWelcomeEmail(userData);\n      \n      this.showNotification(\n        'success',\n        'Cuenta creada',\n        `La cuenta de ${this.selectedType} ha sido creada exitosamente. Se ha enviado un correo con las credenciales.`\n      );\n      \n      form.resetForm();\n      this.resetForm();\n    } catch (error: any) {\n      console.error('Error detallado:', error);\n      this.handleError(error);\n    } finally {\n      this.isLoading = false;\n      this.formSubmitted = false;\n    }\n  }\n\n  // Método para enviar correo de bienvenida\n  private async sendWelcomeEmail(user: Usuario): Promise<void> {\n    try {\n      // Opción 1: Usando Cloud Functions (recomendado)\n      const sendWelcomeEmail = httpsCallable(this.functions, 'sendWelcomeEmail');\n      await sendWelcomeEmail({\n        email: user.Correo,\n        name: user.Nombre,\n        username: user.Username,\n        password: user.Password, // La contraseña se enviará en texto claro solo en el correo\n        role: user.Rol\n      });\n      console.log('Correo de bienvenida enviado exitosamente');\n    } catch (error) {\n      console.error('Error enviando correo de bienvenida:', error);\n      // No interrumpir el flujo si el correo falla\n    }\n  }\n\n  private handleError(error: any): void {\n    let message = 'Error al crear la cuenta';\n    let title = 'Error';\n    \n    if (error.code === 'auth/email-already-in-use') {\n      message = 'Este correo electrónico ya está registrado';\n      title = 'Error de correo';\n    } else if (error.code === 'auth/invalid-email') {\n      message = 'Correo electrónico inválido';\n      title = 'Error de formato';\n    } else if (error.code === 'auth/operation-not-allowed') {\n      message = 'Operación no permitida';\n      title = 'Error de permisos';\n    } else if (error.code === 'auth/weak-password') {\n      message = 'La contraseña es demasiado débil';\n      title = 'Error de contraseña';\n    }\n    \n    this.showNotification('error', title, message);\n  }\n\n  private async isUsernameAvailable(username: string): Promise<boolean> {\n    try {\n      const userQuery = query(\n        collection(this.firestore, 'Usuario'),\n        where('Username', '==', username)\n      );\n      const querySnapshot = await getDocs(userQuery);\n      return querySnapshot.empty;\n    } catch (error) {\n      console.error('Error checking username:', error);\n      return false;\n    }\n  }\n\n  togglePasswordVisibility(): void {\n    this.showPassword = !this.showPassword;\n  }\n\n  selectAccountType(type: 'worker' | 'admin'): void {\n    this.selectedType = type;\n    this.formSubmitted = false;\n    this.resetForm();\n    \n    if (type === 'worker') {\n      this.accountData.adminLevel = '';\n      this.accountData.customAdminLevel = '';\n    } else {\n      this.accountData.department = '';\n      this.accountData.customDepartment = '';\n      // Si hay restricciones de nivel de admin, aplicarlas\n      if (this.isAdminLevelRestricted) {\n        this.accountData.adminLevel = '2';\n      }\n    }\n  }\n\n  resetForm(): void {\n    this.accountData = {\n      firstName: '',\n      lastName: '',\n      email: '',\n      phone: '',\n      username: '',\n      password: '',\n      department: '',\n      customDepartment: '',\n      adminLevel: '',\n      customAdminLevel: ''\n    };\n    this.showCustomDepartment = false;\n    this.showCustomAdminLevel = false;\n    this.formSubmitted = false;\n  }\n\n  onDepartmentChange(event: any): void {\n    this.showCustomDepartment = event.target.value === 'otro';\n  }\n\n  onAdminLevelChange(event: any): void {\n    this.showCustomAdminLevel = event.target.value === 'otro' && !this.isAdminLevelRestricted;\n  }\n\n  goBack(): void {\n    this.router.navigate(['/admin1']);\n  }\n}","\n<!-- Contenedor principal con fondo suave -->\n<div class=\"min-h-screen bg-gradient-to-br from-gray-50 to-blue-50 py-6 sm:py-12 px-4\">\n  <!-- Sistema de notificaciones -->\n  <div class=\"fixed top-4 right-4 z-50 w-80 md:w-96\">\n    <div *ngFor=\"let notification of notifications\"\n         class=\"flex items-start mb-3 p-4 rounded-lg shadow-lg border-l-4 animate-slide-in-right\"\n         [ngClass]=\"{\n           'bg-green-50 border-green-500 text-green-800': notification.type === 'success',\n           'bg-red-50 border-red-500 text-red-800': notification.type === 'error'\n         }\">\n      <div class=\"flex-shrink-0 mr-3\">\n        <svg *ngIf=\"notification.type === 'success'\" class=\"w-6 h-6 text-green-500\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n          <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"/>\n        </svg>\n        <svg *ngIf=\"notification.type === 'error'\" class=\"w-6 h-6 text-red-500\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n          <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-2h2v2zm0-4h-2V7h2v6z\"/>\n        </svg>\n      </div>\n      <div class=\"flex-1 min-w-0\">\n        <p class=\"font-medium\">{{ notification.title }}</p>\n        <p class=\"text-sm mt-1\">{{ notification.message }}</p>\n      </div>\n      <button class=\"ml-3 text-gray-400 hover:text-gray-600 focus:outline-none transition-colors\" (click)=\"removeNotification(notification.id)\">\n        <svg class=\"w-5 h-5\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n          <path d=\"M18 6L6 18M6 6l12 12\"></path>\n        </svg>\n      </button>\n    </div>\n  </div>\n\n  <div class=\"max-w-6xl mx-auto\">\n    <!-- Botón de retroceso mejorado -->\n    <button (click)=\"goBack()\" class=\"group mb-6 inline-flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg transition-all shadow-md hover:bg-blue-700 hover:shadow-lg focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"w-5 h-5 mr-2 transition-transform group-hover:-translate-x-1\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n        <line x1=\"19\" y1=\"12\" x2=\"5\" y2=\"12\"></line>\n        <polyline points=\"12 19 5 12 12 5\"></polyline>\n      </svg>\n      Atrás\n    </button>\n\n    <!-- Tarjeta principal con efecto de profundidad -->\n    <div class=\"bg-white rounded-2xl shadow-xl overflow-hidden border border-gray-200 transition-all duration-300 transform hover:shadow-2xl hover:-translate-y-1\">\n      <!-- Encabezado con degradado más vibrante -->\n      <div class=\"bg-gradient-to-r from-blue-600 via-blue-500 to-blue-700 p-8 relative overflow-hidden\">\n        <!-- Patrón decorativo de fondo -->\n        <div class=\"absolute inset-0 overflow-hidden opacity-10\">\n          <div class=\"absolute -top-24 -left-24 w-96 h-96 rounded-full bg-white/20\"></div>\n          <div class=\"absolute -bottom-24 -right-24 w-96 h-96 rounded-full bg-white/20\"></div>\n        </div>\n        \n        <div class=\"flex flex-col md:flex-row items-center md:items-start gap-5 relative z-10\">\n          <div class=\"bg-white p-4 rounded-xl shadow-lg transform transition-all duration-300 hover:rotate-3 hover:scale-105 ring-4 ring-white/30\">\n            <img src=\"./icons/persona.png\" alt=\"Admin Dashboard\" class=\"w-12 h-12\"/>\n          </div>\n          <div class=\"text-center md:text-left\">\n            <h1 class=\"text-white text-3xl font-bold tracking-tight drop-shadow-md\">Panel de Administración</h1>\n            <p class=\"text-blue-100 mt-2 text-lg font-light tracking-wide\">Gestión de Cuentas de Usuario</p>\n          </div>\n        </div>\n      </div>\n\n      <!-- Contenido Principal con sombras sutiles -->\n      <div class=\"p-8\">\n        <!-- Selector de Tipo de Cuenta -->\n        <div class=\"mb-10\">\n          <h2 class=\"text-xl font-semibold text-gray-800 text-center mb-8 relative after:content-[''] after:block after:w-24 after:h-1 after:bg-blue-500 after:mx-auto after:mt-2 after:rounded-full\">Seleccione el tipo de cuenta a crear</h2>\n          <div class=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n            <!-- Tarjeta Trabajador con animación en hover -->\n            <div \n              (click)=\"selectAccountType('worker')\" \n              class=\"relative flex flex-col items-center p-8 rounded-xl border-2 transition-all duration-300 cursor-pointer group hover:-translate-y-2\"\n              [ngClass]=\"selectedType === 'worker' ? 'border-blue-500 bg-blue-50/70 shadow-lg' : 'border-gray-200 hover:border-blue-400 shadow-md'\">\n              \n              <!-- Indicador de selección -->\n              <div class=\"absolute top-4 right-4\" *ngIf=\"selectedType === 'worker'\">\n                <div class=\"bg-blue-500 text-white rounded-full w-7 h-7 flex items-center justify-center shadow-md\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-4 w-4\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                    <path fill-rule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clip-rule=\"evenodd\" />\n                  </svg>\n                </div>\n              </div>\n              \n              <!-- Icono con efecto de elevación -->\n              <div class=\"w-20 h-20 rounded-full bg-blue-100 flex items-center justify-center mb-5 border-2 transition-all duration-300 group-hover:shadow-lg\"\n                   [ngClass]=\"selectedType === 'worker' ? 'border-blue-500 shadow-md' : 'border-gray-200 group-hover:border-blue-400'\">\n                <img src=\"./icons/empleadoC.png\" alt=\"Trabajador\" class=\"w-10 h-10 transition-all duration-300 group-hover:scale-110 group-hover:rotate-6\" />\n              </div>\n              <h3 class=\"text-lg font-semibold text-gray-800 mb-2\">Cuenta de Trabajador</h3>\n              <p class=\"text-gray-600 text-center\">Crear cuenta para nuevo empleado</p>\n            </div>\n            \n            <!-- Tarjeta Administrador con animación en hover -->\n            <div \n              (click)=\"selectAccountType('admin')\" \n              class=\"relative flex flex-col items-center p-8 rounded-xl border-2 transition-all duration-300 cursor-pointer group hover:-translate-y-2\"\n              [ngClass]=\"selectedType === 'admin' ? 'border-blue-500 bg-blue-50/70 shadow-lg' : 'border-gray-200 hover:border-blue-400 shadow-md'\">\n              \n              <!-- Indicador de selección -->\n              <div class=\"absolute top-4 right-4\" *ngIf=\"selectedType === 'admin'\">\n                <div class=\"bg-blue-500 text-white rounded-full w-7 h-7 flex items-center justify-center shadow-md\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-4 w-4\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                    <path fill-rule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clip-rule=\"evenodd\" />\n                  </svg>\n                </div>\n              </div>\n              \n              <!-- Icono con efecto de elevación -->\n              <div class=\"w-20 h-20 rounded-full bg-blue-100 flex items-center justify-center mb-5 border-2 transition-all duration-300 group-hover:shadow-lg\"\n                   [ngClass]=\"selectedType === 'admin' ? 'border-blue-500 shadow-md' : 'border-gray-200 group-hover:border-blue-400'\">\n                <img src=\"./icons/agregar.png\" alt=\"Administrador\" class=\"w-10 h-10 transition-all duration-300 group-hover:scale-110 group-hover:rotate-6\" />\n              </div>\n              <h3 class=\"text-lg font-semibold text-gray-800 mb-2\">Cuenta de Administrador</h3>\n              <p class=\"text-gray-600 text-center\">Crear cuenta con privilegios administrativos</p>\n            </div>\n          </div>\n        </div>\n\n        <!-- Formulario de Creación con animación fade-in -->\n        <form #createAccountForm=\"ngForm\" (ngSubmit)=\"onSubmit(createAccountForm)\" *ngIf=\"selectedType\" class=\"animate-fade-in\">\n          <h2 class=\"text-xl font-semibold text-gray-800 mb-8 pb-3 border-b border-gray-200 flex items-center\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6 mr-2 text-blue-500\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n              <path d=\"M8 9a3 3 0 100-6 3 3 0 000 6zM8 11a6 6 0 016 6H2a6 6 0 016-6zM16 7a1 1 0 10-2 0v1h-1a1 1 0 100 2h1v1a1 1 0 102 0v-1h1a1 1 0 100-2h-1V7z\" />\n            </svg>\n            {{ selectedType === 'worker' ? 'Crear Cuenta de Trabajador' : 'Crear Cuenta de Administrador' }}\n          </h2>\n\n          <!-- Información Personal con efecto de profundidad -->\n          <div class=\"bg-gray-50 rounded-xl p-8 mb-8 border border-gray-200 shadow-sm\">\n            <h3 class=\"text-lg font-medium text-gray-800 mb-6 flex items-center\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5 mr-2 text-blue-500\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fill-rule=\"evenodd\" d=\"M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z\" clip-rule=\"evenodd\" />\n              </svg>\n              Información Personal\n            </h3>\n            <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <!-- Nombre(s) -->\n              <div>\n                <label for=\"firstName\" class=\"block text-sm font-medium text-gray-700 mb-1\">Nombre(s)</label>\n                <input\n                  type=\"text\"\n                  id=\"firstName\"\n                  name=\"firstName\"\n                  [(ngModel)]=\"accountData.firstName\"\n                  required\n                  #firstNameInput=\"ngModel\"\n                  placeholder=\"Ingrese nombre(s)\"\n                  class=\"w-full px-4 py-3 rounded-lg border focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all\"\n                  [ngClass]=\"{'border-red-300 bg-red-50': firstNameInput.invalid && firstNameInput.touched, 'border-green-300 bg-green-50': firstNameInput.valid && firstNameInput.touched}\"\n                />\n                <div *ngIf=\"firstNameInput.invalid && firstNameInput.touched\" class=\"mt-1 text-sm text-red-600 bg-red-50 p-2 rounded-lg flex items-start animate-error-shake\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-4 w-4 mr-1 mt-0.5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                    <path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clip-rule=\"evenodd\" />\n                  </svg>\n                  El nombre es requerido\n                </div>\n              </div>\n\n              <!-- Apellidos -->\n              <div>\n                <label for=\"lastName\" class=\"block text-sm font-medium text-gray-700 mb-1\">Apellidos</label>\n                <input\n                  type=\"text\"\n                  id=\"lastName\"\n                  name=\"lastName\"\n                  [(ngModel)]=\"accountData.lastName\"\n                  required\n                  #lastNameInput=\"ngModel\"\n                  placeholder=\"Ingrese apellidos\"\n                  class=\"w-full px-4 py-3 rounded-lg border focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all\"\n                  [ngClass]=\"{'border-red-300 bg-red-50': lastNameInput.invalid && lastNameInput.touched, 'border-green-300 bg-green-50': lastNameInput.valid && lastNameInput.touched}\"\n                />\n                <div *ngIf=\"lastNameInput.invalid && lastNameInput.touched\" class=\"mt-1 text-sm text-red-600 bg-red-50 p-2 rounded-lg flex items-start animate-error-shake\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-4 w-4 mr-1 mt-0.5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                    <path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clip-rule=\"evenodd\" />\n                  </svg>\n                  Los apellidos son requeridos\n                </div>\n              </div>\n\n              <!-- Correo Electrónico -->\n              <div>\n                <label for=\"email\" class=\"block text-sm font-medium text-gray-700 mb-1\">Correo Electrónico</label>\n                <input\n                  type=\"email\"\n                  id=\"email\"\n                  name=\"email\"\n                  [(ngModel)]=\"accountData.email\"\n                  required\n                  email\n                  #emailInput=\"ngModel\"\n                  placeholder=\"correo@ejemplo.com\"\n                  class=\"w-full px-4 py-3 rounded-lg border focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all\"\n                  [ngClass]=\"{'border-red-300 bg-red-50': emailInput.invalid && emailInput.touched, 'border-green-300 bg-green-50': emailInput.valid && emailInput.touched}\"\n                />\n                <div *ngIf=\"emailInput.invalid && emailInput.touched\" class=\"mt-1 text-sm text-red-600 bg-red-50 p-2 rounded-lg flex items-start animate-error-shake\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-4 w-4 mr-1 mt-0.5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                    <path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clip-rule=\"evenodd\" />\n                  </svg>\n                  Ingrese un correo electrónico válido\n                </div>\n              </div>\n\n              <!-- Teléfono -->\n              <div>\n                <label for=\"phone\" class=\"block text-sm font-medium text-gray-700 mb-1\">Teléfono</label>\n                <input\n                  type=\"tel\"\n                  id=\"phone\"\n                  name=\"phone\"\n                  [(ngModel)]=\"accountData.phone\"\n                  pattern=\"[0-9]{10}\"\n                  #phoneInput=\"ngModel\"\n                  placeholder=\"Número a 10 dígitos\"\n                  class=\"w-full px-4 py-3 rounded-lg border focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all\"\n                  [ngClass]=\"{'border-red-300 bg-red-50': phoneInput.invalid && phoneInput.touched && phoneInput.value, 'border-green-300 bg-green-50': phoneInput.valid && phoneInput.touched && phoneInput.value}\"\n                />\n                <div *ngIf=\"phoneInput.invalid && phoneInput.touched && phoneInput.value\" class=\"mt-1 text-sm text-red-600 bg-red-50 p-2 rounded-lg flex items-start animate-error-shake\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-4 w-4 mr-1 mt-0.5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                    <path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clip-rule=\"evenodd\" />\n                  </svg>\n                  Ingrese un número válido de 10 dígitos\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- Información de Acceso con efecto de profundidad -->\n          <div class=\"bg-gray-50 rounded-xl p-8 mb-8 border border-gray-200 shadow-sm\">\n            <h3 class=\"text-lg font-medium text-gray-800 mb-6 flex items-center\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5 mr-2 text-blue-500\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fill-rule=\"evenodd\" d=\"M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z\" clip-rule=\"evenodd\" />\n              </svg>\n              Información de Acceso\n            </h3>\n            <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <!-- Nombre de Usuario -->\n              <div>\n                <label for=\"username\" class=\"block text-sm font-medium text-gray-700 mb-1\">Nombre de Usuario</label>\n                <input\n                  type=\"text\"\n                  id=\"username\"\n                  name=\"username\"\n                  [(ngModel)]=\"accountData.username\"\n                  required\n                  #usernameInput=\"ngModel\"\n                  placeholder=\"Nombre de usuario único\"\n                  class=\"w-full px-4 py-3 rounded-lg border focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all\"\n                  [ngClass]=\"{'border-red-300 bg-red-50': usernameInput.invalid && usernameInput.touched, 'border-green-300 bg-green-50': usernameInput.valid && usernameInput.touched}\"\n                />\n                <div *ngIf=\"usernameInput.invalid && usernameInput.touched\" class=\"mt-1 text-sm text-red-600 bg-red-50 p-2 rounded-lg flex items-start animate-error-shake\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-4 w-4 mr-1 mt-0.5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                    <path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clip-rule=\"evenodd\" />\n                  </svg>\n                  El nombre de usuario es requerido\n                </div>\n              </div>\n\n              <!-- Contraseña -->\n              <div>\n                <label for=\"password\" class=\"block text-sm font-medium text-gray-700 mb-1\">Contraseña</label>\n                <div class=\"relative\">\n                  <input\n                    [type]=\"showPassword ? 'text' : 'password'\"\n                    id=\"password\"\n                    name=\"password\"\n                    [(ngModel)]=\"accountData.password\"\n                    required\n                    pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[A-Za-z\\d]{8,}$\"\n                    #passwordInput=\"ngModel\"\n                    placeholder=\"••••••••\"\n                    class=\"w-full px-4 py-3 rounded-lg border focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all pr-12\"\n                    [ngClass]=\"{'border-red-300 bg-red-50': passwordInput.invalid && passwordInput.touched, 'border-green-300 bg-green-50': passwordInput.valid && passwordInput.touched}\"\n                  />\n                  <button\n                    type=\"button\"\n                    class=\"absolute inset-y-0 right-0 flex items-center px-4 text-gray-500 hover:text-gray-700 focus:outline-none\"\n                    (click)=\"togglePasswordVisibility()\"\n                  >\n                    <img [src]=\"showPassword ? './icons/ShowP1.png' : './icons/ShowP2.png'\" alt=\"Toggle password\" class=\"w-5 h-5 transition-transform hover:scale-110\"/>\n                  </button>\n                </div>\n                <div *ngIf=\"passwordInput.invalid && passwordInput.touched\" class=\"mt-1 text-sm text-red-600 bg-red-50 p-2 rounded-lg flex items-start animate-error-shake\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-4 w-4 mr-1 mt-0.5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                    <path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clip-rule=\"evenodd\" />\n                  </svg>\n                  La contraseña debe tener al menos 8 caracteres, incluir mayúsculas, minúsculas y números\n                </div>\n              </div>\n\n              <!-- Campos específicos para Trabajador -->\n              <div *ngIf=\"selectedType === 'worker'\" class=\"md:col-span-2\">\n                <label for=\"department\" class=\"block text-sm font-medium text-gray-700 mb-1\">Departamento</label>\n                <div class=\"flex flex-col md:flex-row gap-4\">\n                  <select\n                    id=\"department\"\n                    name=\"department\"\n                    [(ngModel)]=\"accountData.department\"\n                    (change)=\"onDepartmentChange($event)\"\n                    required\n                    #departmentInput=\"ngModel\"\n                    class=\"w-full md:w-2/3 px-4 py-3 rounded-lg border focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all appearance-none bg-white\"\n                    [ngClass]=\"{'border-red-300 bg-red-50': departmentInput.invalid && departmentInput.touched}\"\n                  >\n                  <option value=\"\">Seleccione un departamento</option>\n                  <option *ngFor=\"let dept of departments$ | async\" [value]=\"dept.IdDepartamento\">\n                    {{dept.IdDepartamento === 'otro' ? 'Otro departamento' : dept.Nombre}}\n                  </option>\n                  </select>\n                  \n                  <!-- Campo para departamento personalizado con transición suave -->\n                  <div *ngIf=\"showCustomDepartment\" class=\"w-full md:w-2/3 animate-fade-in\">\n                    <input\n                      type=\"text\"\n                      id=\"customDepartment\"\n                      name=\"customDepartment\"\n                      [(ngModel)]=\"accountData.customDepartment\"\n                      required\n                      placeholder=\"Ingrese el nuevo departamento\"\n                      class=\"w-full px-4 py-3 rounded-lg border focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all\"\n                    />\n                  </div>\n                </div>\n                <div *ngIf=\"departmentInput.invalid && departmentInput.touched\" class=\"mt-1 text-sm text-red-600 bg-red-50 p-2 rounded-lg flex items-start animate-error-shake\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-4 w-4 mr-1 mt-0.5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                    <path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clip-rule=\"evenodd\" />\n                  </svg>\n                  Seleccione un departamento\n                </div>\n              </div>\n              <!-- Campos específicos para Administrador -->\n              <div *ngIf=\"selectedType === 'admin'\" class=\"md:col-span-2\">\n                <label for=\"adminLevel\" class=\"block text-sm font-medium text-gray-700 mb-1\">Nivel de Administración</label>\n                <div class=\"flex flex-col md:flex-row gap-4\">\n                  <select\n                    id=\"adminLevel\"\n                    name=\"adminLevel\"\n                    [(ngModel)]=\"accountData.adminLevel\"\n                    (change)=\"onAdminLevelChange($event)\"\n                    required\n                    #adminLevelInput=\"ngModel\"\n                    [disabled]=\"isAdminLevelRestricted\"\n                    class=\"w-full md:w-2/3 px-4 py-3 rounded-lg border focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all appearance-none bg-white\"\n                    [ngClass]=\"{'border-red-300 bg-red-50': adminLevelInput.invalid && adminLevelInput.touched, 'bg-gray-100': isAdminLevelRestricted}\"\n                  >\n                    <option value=\"\">Seleccione un nivel</option>\n                    <option *ngFor=\"let level of getAvailableAdminLevels()\" [value]=\"level\">\n                      {{level === 'otro' ? 'Otro nivel' : 'Nivel ' + level}}\n                    </option>\n                  </select>\n                  \n                  <!-- Campo para nivel de administración personalizado con transición suave -->\n                  <div *ngIf=\"showCustomAdminLevel && !isAdminLevelRestricted\" class=\"w-full md:w-2/3 animate-fade-in\">\n                    <input\n                      type=\"text\"\n                      id=\"customAdminLevel\"\n                      name=\"customAdminLevel\"\n                      [(ngModel)]=\"accountData.customAdminLevel\"\n                      required\n                      placeholder=\"Ingrese el nuevo nivel de administración\"\n                      class=\"w-full px-4 py-3 rounded-lg border focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all\"\n                    />\n                  </div>\n                </div>\n                <div *ngIf=\"adminLevelInput.invalid && adminLevelInput.touched\" class=\"mt-1 text-sm text-red-600 bg-red-50 p-2 rounded-lg flex items-start animate-error-shake\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-4 w-4 mr-1 mt-0.5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                    <path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clip-rule=\"evenodd\" />\n                  </svg>\n                  Seleccione un nivel de administración\n                </div>\n                <div *ngIf=\"isAdminLevelRestricted\" class=\"mt-1 text-sm text-blue-600 bg-blue-50 p-2 rounded-lg flex items-start\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-4 w-4 mr-1 mt-0.5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                    <path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z\" clip-rule=\"evenodd\" />\n                  </svg>\n                  Como administrador nivel {{ currentAdminLevel }}, solo puede crear administradores de nivel 2.\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- Botones de Acción con efectos de elevación -->\n          <div class=\"flex flex-col-reverse sm:flex-row justify-end gap-4 pt-6 border-t border-gray-200 mt-8\">\n            <!-- Botón Cancelar -->\n            <button \n              type=\"button\" \n              class=\"px-6 py-3 border-2 border-gray-300 text-gray-700 rounded-lg font-medium hover:bg-gray-50 hover:border-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-300 transition-all shadow-sm hover:shadow-md\" \n              (click)=\"resetForm()\"\n            >\n              <span class=\"flex items-center justify-center\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5 mr-2\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path fill-rule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clip-rule=\"evenodd\" />\n                </svg>\n                Cancelar\n              </span>\n            </button>\n            \n            <!-- Botón Crear Cuenta -->\n            <button\n              type=\"submit\"\n              class=\"px-6 py-3 bg-gradient-to-r from-blue-600 to-blue-700 text-white rounded-lg font-medium hover:from-blue-700 hover:to-blue-800 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:opacity-60 disabled:pointer-events-none transition-all shadow-md hover:shadow-lg\"\n              [disabled]=\"createAccountForm.invalid || isLoading || formSubmitted\"\n            >\n              <span *ngIf=\"!isLoading\" class=\"flex items-center justify-center\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5 mr-2\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path fill-rule=\"evenodd\" d=\"M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z\" clip-rule=\"evenodd\" />\n                </svg>\n                Crear Cuenta\n              </span>\n              <span *ngIf=\"isLoading\" class=\"flex items-center justify-center\">\n                <svg class=\"animate-spin -ml-1 mr-2 h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                  <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n                  <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                </svg>\n                Creando cuenta...\n              </span>\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>"],"mappings":"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","names":["LONG_TYPE","UNSIGNED_LONG_TYPE","mapValues","o","f","result","key","encode","data","x","decode","json","value","FUNCTIONS_TYPE","errorCodeMap","FunctionsError","_FunctionsError","FirebaseError","code","message","details","codeForHTTPStatus","status","_errorForResponse","bodyJSON","description","errorJSON","ContextProvider","app","authProvider","messagingProvider","appCheckProvider","_isFirebaseServerApp","auth","messaging","appCheck","__async","token","limitedUseAppCheckTokens","authToken","messagingToken","appCheckToken","DEFAULT_REGION","responseLineRE","failAfter","millis","timer","_","reject","FunctionsService","regionOrCustomDomain","fetchImpl","args","resolve","url","name","projectId","connectFunctionsEmulator$1","functionsInstance","host","port","httpsCallable$1","options","callable","call","stream","postJSON","url","body","headers","fetchImpl","__async","response","json","makeAuthHeaders","functionsInstance","options","context","call","name","data","callAtURL","encode","timeout","failAfterHandle","failAfter","FunctionsError","error","_errorForResponse","responseData","decode","stream","streamAtURL","_a","e","resultResolver","resultRejecter","resultPromise","resolve","reject","reader","rstream","createResponseStream","rreader","value","done","signal","processLine","line","controller","match","responseLineRE","jsonData","decoder","currentText","pump","lines","functionsError","version","AUTH_INTERNAL_NAME","APP_CHECK_INTERNAL_NAME","MESSAGING_INTERNAL_NAME","registerFunctions","variant","factory","container","regionOrCustomDomain","app","authProvider","messagingProvider","appCheckProvider","FunctionsService","_registerComponent","Component","FUNCTIONS_TYPE","registerVersion","getFunctions","getApp","DEFAULT_REGION","_getProvider","getModularInstance","emulator","getDefaultEmulatorHostnameAndPort","connectFunctionsEmulator","host","port","connectFunctionsEmulator$1","httpsCallable","httpsCallable$1","registerFunctions","getFunctions","ɵzoneWrap","httpsCallable","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵtemplate","CreateAccountsComponent_div_2__svg_svg_2_Template","CreateAccountsComponent_div_2__svg_svg_3_Template","ɵɵtext","ɵɵlistener","notification_r2","ɵɵrestoreView","_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","removeNotification","id","ɵɵproperty","ɵɵpureFunction2","_c0","type","ɵɵadvance","ɵɵtextInterpolate","title","message","dept_r7","IdDepartamento","ɵɵtextInterpolate1","Nombre","ɵɵtwoWayListener","$event","_r8","i0","ɵɵtwoWayBindingSet","accountData","customDepartment","ɵɵtwoWayProperty","_r6","department","onDepartmentChange","CreateAccountsComponent_form_43_div_57_option_8_Template","CreateAccountsComponent_form_43_div_57_div_10_Template","CreateAccountsComponent_form_43_div_57_div_11_Template","ɵɵpureFunction1","_c2","departmentInput_r9","invalid","touched","ɵɵpipeBind1","departments$","showCustomDepartment","level_r11","_r12","customAdminLevel","currentAdminLevel","_r10","adminLevel","onAdminLevelChange","CreateAccountsComponent_form_43_div_58_option_8_Template","CreateAccountsComponent_form_43_div_58_div_9_Template","CreateAccountsComponent_form_43_div_58_div_10_Template","CreateAccountsComponent_form_43_div_58_div_11_Template","isAdminLevelRestricted","_c3","adminLevelInput_r13","getAvailableAdminLevels","showCustomAdminLevel","_r4","createAccountForm_r5","ɵɵreference","onSubmit","firstName","CreateAccountsComponent_form_43_div_17_Template","lastName","CreateAccountsComponent_form_43_div_23_Template","email","CreateAccountsComponent_form_43_div_29_Template","phone","CreateAccountsComponent_form_43_div_35_Template","username","CreateAccountsComponent_form_43_div_47_Template","password","togglePasswordVisibility","CreateAccountsComponent_form_43_div_56_Template","CreateAccountsComponent_form_43_div_57_Template","CreateAccountsComponent_form_43_div_58_Template","resetForm","CreateAccountsComponent_form_43_span_66_Template","CreateAccountsComponent_form_43_span_67_Template","selectedType","_c1","firstNameInput_r14","valid","lastNameInput_r15","emailInput_r16","phoneInput_r17","value","usernameInput_r18","showPassword","passwordInput_r19","ɵɵsanitizeUrl","isLoading","formSubmitted","CreateAccountsComponent","auth","inject","Auth","firestore","Firestore","router","Router","functions","getFunctions","departmentService","DepartmentService","destroyRef","DestroyRef","existingUsernames","notifications","notificationId","BehaviorSubject","adminLevels","ngOnInit","__async","loadInitialData","checkAdminRestrictions","loadDepartments","loadExistingUsernames","error","console","getDepartments","pipe","takeUntilDestroyed","subscribe","next","departments","departmentsWithOther","name","showNotification","usersRef","collection","querySnapshot","getDocs","docs","map","doc","data","filter","currentUser","userDoc","getDoc","uid","exists","userData","push","setTimeout","n","form","isUsernameAvailable","nivelAdmin","departamento","plainPassword","userCredential","createUserWithEmailAndPassword","sendEmailVerification","user","IdUsuario","Correo","Username","Password","Foto_Perfil","Rol","Telefono","Departamento","NivelAdmin","createdBy","setDoc","sendWelcomeEmail","handleError","httpsCallable","role","log","code","userQuery","query","where","empty","selectAccountType","event","target","goBack","navigate","selectors","decls","vars","consts","template","rf","ctx","CreateAccountsComponent_div_2_Template","CreateAccountsComponent_div_28_Template","CreateAccountsComponent_div_36_Template","CreateAccountsComponent_form_43_Template","CommonModule","NgClass","NgForOf","NgIf","AsyncPipe","FormsModule","ɵNgNoValidate","NgSelectOption","ɵNgSelectMultipleOption","DefaultValueAccessor","SelectControlValueAccessor","NgControlStatus","NgControlStatusGroup","RequiredValidator","PatternValidator","EmailValidator","NgModel","NgForm","styles"],"x_google_ignoreList":[0,1]}