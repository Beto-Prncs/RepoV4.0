{"version":3,"sources":["node_modules/@firebase/functions/dist/esm/index.esm2017.js","node_modules/@angular/fire/fesm2022/angular-fire-functions.mjs","src/app/functionalities/create-accounts/create-accounts.component.ts","src/app/functionalities/create-accounts/create-accounts.component.html"],"sourcesContent":["import { _isFirebaseServerApp, _registerComponent, registerVersion, _getProvider, getApp } from '@firebase/app';\nimport { FirebaseError, getModularInstance, getDefaultEmulatorHostnameAndPort } from '@firebase/util';\nimport { Component } from '@firebase/component';\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst LONG_TYPE = 'type.googleapis.com/google.protobuf.Int64Value';\nconst UNSIGNED_LONG_TYPE = 'type.googleapis.com/google.protobuf.UInt64Value';\nfunction mapValues(\n// { [k: string]: unknown } is no longer a wildcard assignment target after typescript 3.5\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\no, f) {\n  const result = {};\n  for (const key in o) {\n    if (o.hasOwnProperty(key)) {\n      result[key] = f(o[key]);\n    }\n  }\n  return result;\n}\n/**\n * Takes data and encodes it in a JSON-friendly way, such that types such as\n * Date are preserved.\n * @internal\n * @param data - Data to encode.\n */\nfunction encode(data) {\n  if (data == null) {\n    return null;\n  }\n  if (data instanceof Number) {\n    data = data.valueOf();\n  }\n  if (typeof data === 'number' && isFinite(data)) {\n    // Any number in JS is safe to put directly in JSON and parse as a double\n    // without any loss of precision.\n    return data;\n  }\n  if (data === true || data === false) {\n    return data;\n  }\n  if (Object.prototype.toString.call(data) === '[object String]') {\n    return data;\n  }\n  if (data instanceof Date) {\n    return data.toISOString();\n  }\n  if (Array.isArray(data)) {\n    return data.map(x => encode(x));\n  }\n  if (typeof data === 'function' || typeof data === 'object') {\n    return mapValues(data, x => encode(x));\n  }\n  // If we got this far, the data is not encodable.\n  throw new Error('Data cannot be encoded in JSON: ' + data);\n}\n/**\n * Takes data that's been encoded in a JSON-friendly form and returns a form\n * with richer datatypes, such as Dates, etc.\n * @internal\n * @param json - JSON to convert.\n */\nfunction decode(json) {\n  if (json == null) {\n    return json;\n  }\n  if (json['@type']) {\n    switch (json['@type']) {\n      case LONG_TYPE:\n      // Fall through and handle this the same as unsigned.\n      case UNSIGNED_LONG_TYPE:\n        {\n          // Technically, this could work return a valid number for malformed\n          // data if there was a number followed by garbage. But it's just not\n          // worth all the extra code to detect that case.\n          const value = Number(json['value']);\n          if (isNaN(value)) {\n            throw new Error('Data cannot be decoded from JSON: ' + json);\n          }\n          return value;\n        }\n      default:\n        {\n          throw new Error('Data cannot be decoded from JSON: ' + json);\n        }\n    }\n  }\n  if (Array.isArray(json)) {\n    return json.map(x => decode(x));\n  }\n  if (typeof json === 'function' || typeof json === 'object') {\n    return mapValues(json, x => decode(x));\n  }\n  // Anything else is safe to return.\n  return json;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Type constant for Firebase Functions.\n */\nconst FUNCTIONS_TYPE = 'functions';\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Standard error codes for different ways a request can fail, as defined by:\n * https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\n *\n * This map is used primarily to convert from a backend error code string to\n * a client SDK error code string, and make sure it's in the supported set.\n */\nconst errorCodeMap = {\n  OK: 'ok',\n  CANCELLED: 'cancelled',\n  UNKNOWN: 'unknown',\n  INVALID_ARGUMENT: 'invalid-argument',\n  DEADLINE_EXCEEDED: 'deadline-exceeded',\n  NOT_FOUND: 'not-found',\n  ALREADY_EXISTS: 'already-exists',\n  PERMISSION_DENIED: 'permission-denied',\n  UNAUTHENTICATED: 'unauthenticated',\n  RESOURCE_EXHAUSTED: 'resource-exhausted',\n  FAILED_PRECONDITION: 'failed-precondition',\n  ABORTED: 'aborted',\n  OUT_OF_RANGE: 'out-of-range',\n  UNIMPLEMENTED: 'unimplemented',\n  INTERNAL: 'internal',\n  UNAVAILABLE: 'unavailable',\n  DATA_LOSS: 'data-loss'\n};\n/**\n * An error returned by the Firebase Functions client SDK.\n *\n * See {@link FunctionsErrorCode} for full documentation of codes.\n *\n * @public\n */\nclass FunctionsError extends FirebaseError {\n  /**\n   * Constructs a new instance of the `FunctionsError` class.\n   */\n  constructor(\n  /**\n   * A standard error code that will be returned to the client. This also\n   * determines the HTTP status code of the response, as defined in code.proto.\n   */\n  code, message,\n  /**\n   * Additional details to be converted to JSON and included in the error response.\n   */\n  details) {\n    super(`${FUNCTIONS_TYPE}/${code}`, message || '');\n    this.details = details;\n    // Since the FirebaseError constructor sets the prototype of `this` to FirebaseError.prototype,\n    // we also have to do it in all subclasses to allow for correct `instanceof` checks.\n    Object.setPrototypeOf(this, FunctionsError.prototype);\n  }\n}\n/**\n * Takes an HTTP status code and returns the corresponding ErrorCode.\n * This is the standard HTTP status code -> error mapping defined in:\n * https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\n *\n * @param status An HTTP status code.\n * @return The corresponding ErrorCode, or ErrorCode.UNKNOWN if none.\n */\nfunction codeForHTTPStatus(status) {\n  // Make sure any successful status is OK.\n  if (status >= 200 && status < 300) {\n    return 'ok';\n  }\n  switch (status) {\n    case 0:\n      // This can happen if the server returns 500.\n      return 'internal';\n    case 400:\n      return 'invalid-argument';\n    case 401:\n      return 'unauthenticated';\n    case 403:\n      return 'permission-denied';\n    case 404:\n      return 'not-found';\n    case 409:\n      return 'aborted';\n    case 429:\n      return 'resource-exhausted';\n    case 499:\n      return 'cancelled';\n    case 500:\n      return 'internal';\n    case 501:\n      return 'unimplemented';\n    case 503:\n      return 'unavailable';\n    case 504:\n      return 'deadline-exceeded';\n  }\n  return 'unknown';\n}\n/**\n * Takes an HTTP response and returns the corresponding Error, if any.\n */\nfunction _errorForResponse(status, bodyJSON) {\n  let code = codeForHTTPStatus(status);\n  // Start with reasonable defaults from the status code.\n  let description = code;\n  let details = undefined;\n  // Then look through the body for explicit details.\n  try {\n    const errorJSON = bodyJSON && bodyJSON.error;\n    if (errorJSON) {\n      const status = errorJSON.status;\n      if (typeof status === 'string') {\n        if (!errorCodeMap[status]) {\n          // They must've included an unknown error code in the body.\n          return new FunctionsError('internal', 'internal');\n        }\n        code = errorCodeMap[status];\n        // TODO(klimt): Add better default descriptions for error enums.\n        // The default description needs to be updated for the new code.\n        description = status;\n      }\n      const message = errorJSON.message;\n      if (typeof message === 'string') {\n        description = message;\n      }\n      details = errorJSON.details;\n      if (details !== undefined) {\n        details = decode(details);\n      }\n    }\n  } catch (e) {\n    // If we couldn't parse explicit error data, that's fine.\n  }\n  if (code === 'ok') {\n    // Technically, there's an edge case where a developer could explicitly\n    // return an error code of OK, and we will treat it as success, but that\n    // seems reasonable.\n    return null;\n  }\n  return new FunctionsError(code, description, details);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Helper class to get metadata that should be included with a function call.\n * @internal\n */\nclass ContextProvider {\n  constructor(app, authProvider, messagingProvider, appCheckProvider) {\n    this.app = app;\n    this.auth = null;\n    this.messaging = null;\n    this.appCheck = null;\n    this.serverAppAppCheckToken = null;\n    if (_isFirebaseServerApp(app) && app.settings.appCheckToken) {\n      this.serverAppAppCheckToken = app.settings.appCheckToken;\n    }\n    this.auth = authProvider.getImmediate({\n      optional: true\n    });\n    this.messaging = messagingProvider.getImmediate({\n      optional: true\n    });\n    if (!this.auth) {\n      authProvider.get().then(auth => this.auth = auth, () => {\n        /* get() never rejects */\n      });\n    }\n    if (!this.messaging) {\n      messagingProvider.get().then(messaging => this.messaging = messaging, () => {\n        /* get() never rejects */\n      });\n    }\n    if (!this.appCheck) {\n      appCheckProvider === null || appCheckProvider === void 0 ? void 0 : appCheckProvider.get().then(appCheck => this.appCheck = appCheck, () => {\n        /* get() never rejects */\n      });\n    }\n  }\n  async getAuthToken() {\n    if (!this.auth) {\n      return undefined;\n    }\n    try {\n      const token = await this.auth.getToken();\n      return token === null || token === void 0 ? void 0 : token.accessToken;\n    } catch (e) {\n      // If there's any error when trying to get the auth token, leave it off.\n      return undefined;\n    }\n  }\n  async getMessagingToken() {\n    if (!this.messaging || !('Notification' in self) || Notification.permission !== 'granted') {\n      return undefined;\n    }\n    try {\n      return await this.messaging.getToken();\n    } catch (e) {\n      // We don't warn on this, because it usually means messaging isn't set up.\n      // console.warn('Failed to retrieve instance id token.', e);\n      // If there's any error when trying to get the token, leave it off.\n      return undefined;\n    }\n  }\n  async getAppCheckToken(limitedUseAppCheckTokens) {\n    if (this.serverAppAppCheckToken) {\n      return this.serverAppAppCheckToken;\n    }\n    if (this.appCheck) {\n      const result = limitedUseAppCheckTokens ? await this.appCheck.getLimitedUseToken() : await this.appCheck.getToken();\n      if (result.error) {\n        // Do not send the App Check header to the functions endpoint if\n        // there was an error from the App Check exchange endpoint. The App\n        // Check SDK will already have logged the error to console.\n        return null;\n      }\n      return result.token;\n    }\n    return null;\n  }\n  async getContext(limitedUseAppCheckTokens) {\n    const authToken = await this.getAuthToken();\n    const messagingToken = await this.getMessagingToken();\n    const appCheckToken = await this.getAppCheckToken(limitedUseAppCheckTokens);\n    return {\n      authToken,\n      messagingToken,\n      appCheckToken\n    };\n  }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst DEFAULT_REGION = 'us-central1';\nconst responseLineRE = /^data: (.*?)(?:\\n|$)/;\n/**\n * Returns a Promise that will be rejected after the given duration.\n * The error will be of type FunctionsError.\n *\n * @param millis Number of milliseconds to wait before rejecting.\n */\nfunction failAfter(millis) {\n  // Node timers and browser timers are fundamentally incompatible, but we\n  // don't care about the value here\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  let timer = null;\n  return {\n    promise: new Promise((_, reject) => {\n      timer = setTimeout(() => {\n        reject(new FunctionsError('deadline-exceeded', 'deadline-exceeded'));\n      }, millis);\n    }),\n    cancel: () => {\n      if (timer) {\n        clearTimeout(timer);\n      }\n    }\n  };\n}\n/**\n * The main class for the Firebase Functions SDK.\n * @internal\n */\nclass FunctionsService {\n  /**\n   * Creates a new Functions service for the given app.\n   * @param app - The FirebaseApp to use.\n   */\n  constructor(app, authProvider, messagingProvider, appCheckProvider, regionOrCustomDomain = DEFAULT_REGION, fetchImpl = (...args) => fetch(...args)) {\n    this.app = app;\n    this.fetchImpl = fetchImpl;\n    this.emulatorOrigin = null;\n    this.contextProvider = new ContextProvider(app, authProvider, messagingProvider, appCheckProvider);\n    // Cancels all ongoing requests when resolved.\n    this.cancelAllRequests = new Promise(resolve => {\n      this.deleteService = () => {\n        return Promise.resolve(resolve());\n      };\n    });\n    // Resolve the region or custom domain overload by attempting to parse it.\n    try {\n      const url = new URL(regionOrCustomDomain);\n      this.customDomain = url.origin + (url.pathname === '/' ? '' : url.pathname);\n      this.region = DEFAULT_REGION;\n    } catch (e) {\n      this.customDomain = null;\n      this.region = regionOrCustomDomain;\n    }\n  }\n  _delete() {\n    return this.deleteService();\n  }\n  /**\n   * Returns the URL for a callable with the given name.\n   * @param name - The name of the callable.\n   * @internal\n   */\n  _url(name) {\n    const projectId = this.app.options.projectId;\n    if (this.emulatorOrigin !== null) {\n      const origin = this.emulatorOrigin;\n      return `${origin}/${projectId}/${this.region}/${name}`;\n    }\n    if (this.customDomain !== null) {\n      return `${this.customDomain}/${name}`;\n    }\n    return `https://${this.region}-${projectId}.cloudfunctions.net/${name}`;\n  }\n}\n/**\n * Modify this instance to communicate with the Cloud Functions emulator.\n *\n * Note: this must be called before this instance has been used to do any operations.\n *\n * @param host The emulator host (ex: localhost)\n * @param port The emulator port (ex: 5001)\n * @public\n */\nfunction connectFunctionsEmulator$1(functionsInstance, host, port) {\n  functionsInstance.emulatorOrigin = `http://${host}:${port}`;\n}\n/**\n * Returns a reference to the callable https trigger with the given name.\n * @param name - The name of the trigger.\n * @public\n */\nfunction httpsCallable$1(functionsInstance, name, options) {\n  const callable = data => {\n    return call(functionsInstance, name, data, options || {});\n  };\n  callable.stream = (data, options) => {\n    return stream(functionsInstance, name, data, options);\n  };\n  return callable;\n}\n/**\n * Returns a reference to the callable https trigger with the given url.\n * @param url - The url of the trigger.\n * @public\n */\nfunction httpsCallableFromURL$1(functionsInstance, url, options) {\n  const callable = data => {\n    return callAtURL(functionsInstance, url, data, options || {});\n  };\n  callable.stream = (data, options) => {\n    return streamAtURL(functionsInstance, url, data, options || {});\n  };\n  return callable;\n}\n/**\n * Does an HTTP POST and returns the completed response.\n * @param url The url to post to.\n * @param body The JSON body of the post.\n * @param headers The HTTP headers to include in the request.\n * @return A Promise that will succeed when the request finishes.\n */\nasync function postJSON(url, body, headers, fetchImpl) {\n  headers['Content-Type'] = 'application/json';\n  let response;\n  try {\n    response = await fetchImpl(url, {\n      method: 'POST',\n      body: JSON.stringify(body),\n      headers\n    });\n  } catch (e) {\n    // This could be an unhandled error on the backend, or it could be a\n    // network error. There's no way to know, since an unhandled error on the\n    // backend will fail to set the proper CORS header, and thus will be\n    // treated as a network error by fetch.\n    return {\n      status: 0,\n      json: null\n    };\n  }\n  let json = null;\n  try {\n    json = await response.json();\n  } catch (e) {\n    // If we fail to parse JSON, it will fail the same as an empty body.\n  }\n  return {\n    status: response.status,\n    json\n  };\n}\n/**\n * Creates authorization headers for Firebase Functions requests.\n * @param functionsInstance The Firebase Functions service instance.\n * @param options Options for the callable function, including AppCheck token settings.\n * @return A Promise that resolves a headers map to include in outgoing fetch request.\n */\nasync function makeAuthHeaders(functionsInstance, options) {\n  const headers = {};\n  const context = await functionsInstance.contextProvider.getContext(options.limitedUseAppCheckTokens);\n  if (context.authToken) {\n    headers['Authorization'] = 'Bearer ' + context.authToken;\n  }\n  if (context.messagingToken) {\n    headers['Firebase-Instance-ID-Token'] = context.messagingToken;\n  }\n  if (context.appCheckToken !== null) {\n    headers['X-Firebase-AppCheck'] = context.appCheckToken;\n  }\n  return headers;\n}\n/**\n * Calls a callable function asynchronously and returns the result.\n * @param name The name of the callable trigger.\n * @param data The data to pass as params to the function.\n */\nfunction call(functionsInstance, name, data, options) {\n  const url = functionsInstance._url(name);\n  return callAtURL(functionsInstance, url, data, options);\n}\n/**\n * Calls a callable function asynchronously and returns the result.\n * @param url The url of the callable trigger.\n * @param data The data to pass as params to the function.\n */\nasync function callAtURL(functionsInstance, url, data, options) {\n  // Encode any special types, such as dates, in the input data.\n  data = encode(data);\n  const body = {\n    data\n  };\n  // Add a header for the authToken.\n  const headers = await makeAuthHeaders(functionsInstance, options);\n  // Default timeout to 70s, but let the options override it.\n  const timeout = options.timeout || 70000;\n  const failAfterHandle = failAfter(timeout);\n  const response = await Promise.race([postJSON(url, body, headers, functionsInstance.fetchImpl), failAfterHandle.promise, functionsInstance.cancelAllRequests]);\n  // Always clear the failAfter timeout\n  failAfterHandle.cancel();\n  // If service was deleted, interrupted response throws an error.\n  if (!response) {\n    throw new FunctionsError('cancelled', 'Firebase Functions instance was deleted.');\n  }\n  // Check for an error status, regardless of http status.\n  const error = _errorForResponse(response.status, response.json);\n  if (error) {\n    throw error;\n  }\n  if (!response.json) {\n    throw new FunctionsError('internal', 'Response is not valid JSON object.');\n  }\n  let responseData = response.json.data;\n  // TODO(klimt): For right now, allow \"result\" instead of \"data\", for\n  // backwards compatibility.\n  if (typeof responseData === 'undefined') {\n    responseData = response.json.result;\n  }\n  if (typeof responseData === 'undefined') {\n    // Consider the response malformed.\n    throw new FunctionsError('internal', 'Response is missing data field.');\n  }\n  // Decode any special types, such as dates, in the returned data.\n  const decodedData = decode(responseData);\n  return {\n    data: decodedData\n  };\n}\n/**\n * Calls a callable function asynchronously and returns a streaming result.\n * @param name The name of the callable trigger.\n * @param data The data to pass as params to the function.\n * @param options Streaming request options.\n */\nfunction stream(functionsInstance, name, data, options) {\n  const url = functionsInstance._url(name);\n  return streamAtURL(functionsInstance, url, data, options || {});\n}\n/**\n * Calls a callable function asynchronously and return a streaming result.\n * @param url The url of the callable trigger.\n * @param data The data to pass as params to the function.\n * @param options Streaming request options.\n */\nasync function streamAtURL(functionsInstance, url, data, options) {\n  var _a;\n  // Encode any special types, such as dates, in the input data.\n  data = encode(data);\n  const body = {\n    data\n  };\n  //\n  // Add a header for the authToken.\n  const headers = await makeAuthHeaders(functionsInstance, options);\n  headers['Content-Type'] = 'application/json';\n  headers['Accept'] = 'text/event-stream';\n  let response;\n  try {\n    response = await functionsInstance.fetchImpl(url, {\n      method: 'POST',\n      body: JSON.stringify(body),\n      headers,\n      signal: options === null || options === void 0 ? void 0 : options.signal\n    });\n  } catch (e) {\n    if (e instanceof Error && e.name === 'AbortError') {\n      const error = new FunctionsError('cancelled', 'Request was cancelled.');\n      return {\n        data: Promise.reject(error),\n        stream: {\n          [Symbol.asyncIterator]() {\n            return {\n              next() {\n                return Promise.reject(error);\n              }\n            };\n          }\n        }\n      };\n    }\n    // This could be an unhandled error on the backend, or it could be a\n    // network error. There's no way to know, since an unhandled error on the\n    // backend will fail to set the proper CORS header, and thus will be\n    // treated as a network error by fetch.\n    const error = _errorForResponse(0, null);\n    return {\n      data: Promise.reject(error),\n      // Return an empty async iterator\n      stream: {\n        [Symbol.asyncIterator]() {\n          return {\n            next() {\n              return Promise.reject(error);\n            }\n          };\n        }\n      }\n    };\n  }\n  let resultResolver;\n  let resultRejecter;\n  const resultPromise = new Promise((resolve, reject) => {\n    resultResolver = resolve;\n    resultRejecter = reject;\n  });\n  (_a = options === null || options === void 0 ? void 0 : options.signal) === null || _a === void 0 ? void 0 : _a.addEventListener('abort', () => {\n    const error = new FunctionsError('cancelled', 'Request was cancelled.');\n    resultRejecter(error);\n  });\n  const reader = response.body.getReader();\n  const rstream = createResponseStream(reader, resultResolver, resultRejecter, options === null || options === void 0 ? void 0 : options.signal);\n  return {\n    stream: {\n      [Symbol.asyncIterator]() {\n        const rreader = rstream.getReader();\n        return {\n          async next() {\n            const {\n              value,\n              done\n            } = await rreader.read();\n            return {\n              value: value,\n              done\n            };\n          },\n          async return() {\n            await rreader.cancel();\n            return {\n              done: true,\n              value: undefined\n            };\n          }\n        };\n      }\n    },\n    data: resultPromise\n  };\n}\n/**\n * Creates a ReadableStream that processes a streaming response from a streaming\n * callable function that returns data in server-sent event format.\n *\n * @param reader The underlying reader providing raw response data\n * @param resultResolver Callback to resolve the final result when received\n * @param resultRejecter Callback to reject with an error if encountered\n * @param signal Optional AbortSignal to cancel the stream processing\n * @returns A ReadableStream that emits decoded messages from the response\n *\n * The returned ReadableStream:\n *   1. Emits individual messages when \"message\" data is received\n *   2. Resolves with the final result when a \"result\" message is received\n *   3. Rejects with an error if an \"error\" message is received\n */\nfunction createResponseStream(reader, resultResolver, resultRejecter, signal) {\n  const processLine = (line, controller) => {\n    const match = line.match(responseLineRE);\n    // ignore all other lines (newline, comments, etc.)\n    if (!match) {\n      return;\n    }\n    const data = match[1];\n    try {\n      const jsonData = JSON.parse(data);\n      if ('result' in jsonData) {\n        resultResolver(decode(jsonData.result));\n        return;\n      }\n      if ('message' in jsonData) {\n        controller.enqueue(decode(jsonData.message));\n        return;\n      }\n      if ('error' in jsonData) {\n        const error = _errorForResponse(0, jsonData);\n        controller.error(error);\n        resultRejecter(error);\n        return;\n      }\n    } catch (error) {\n      if (error instanceof FunctionsError) {\n        controller.error(error);\n        resultRejecter(error);\n        return;\n      }\n      // ignore other parsing errors\n    }\n  };\n  const decoder = new TextDecoder();\n  return new ReadableStream({\n    start(controller) {\n      let currentText = '';\n      return pump();\n      async function pump() {\n        if (signal === null || signal === void 0 ? void 0 : signal.aborted) {\n          const error = new FunctionsError('cancelled', 'Request was cancelled');\n          controller.error(error);\n          resultRejecter(error);\n          return Promise.resolve();\n        }\n        try {\n          const {\n            value,\n            done\n          } = await reader.read();\n          if (done) {\n            if (currentText.trim()) {\n              processLine(currentText.trim(), controller);\n            }\n            controller.close();\n            return;\n          }\n          if (signal === null || signal === void 0 ? void 0 : signal.aborted) {\n            const error = new FunctionsError('cancelled', 'Request was cancelled');\n            controller.error(error);\n            resultRejecter(error);\n            await reader.cancel();\n            return;\n          }\n          currentText += decoder.decode(value, {\n            stream: true\n          });\n          const lines = currentText.split('\\n');\n          currentText = lines.pop() || '';\n          for (const line of lines) {\n            if (line.trim()) {\n              processLine(line.trim(), controller);\n            }\n          }\n          return pump();\n        } catch (error) {\n          const functionsError = error instanceof FunctionsError ? error : _errorForResponse(0, null);\n          controller.error(functionsError);\n          resultRejecter(functionsError);\n        }\n      }\n    },\n    cancel() {\n      return reader.cancel();\n    }\n  });\n}\nconst name = \"@firebase/functions\";\nconst version = \"0.12.3\";\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst AUTH_INTERNAL_NAME = 'auth-internal';\nconst APP_CHECK_INTERNAL_NAME = 'app-check-internal';\nconst MESSAGING_INTERNAL_NAME = 'messaging-internal';\nfunction registerFunctions(variant) {\n  const factory = (container, {\n    instanceIdentifier: regionOrCustomDomain\n  }) => {\n    // Dependencies\n    const app = container.getProvider('app').getImmediate();\n    const authProvider = container.getProvider(AUTH_INTERNAL_NAME);\n    const messagingProvider = container.getProvider(MESSAGING_INTERNAL_NAME);\n    const appCheckProvider = container.getProvider(APP_CHECK_INTERNAL_NAME);\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return new FunctionsService(app, authProvider, messagingProvider, appCheckProvider, regionOrCustomDomain);\n  };\n  _registerComponent(new Component(FUNCTIONS_TYPE, factory, \"PUBLIC\" /* ComponentType.PUBLIC */).setMultipleInstances(true));\n  registerVersion(name, version, variant);\n  // BUILD_TARGET will be replaced by values like esm2017, cjs2017, etc during the compilation\n  registerVersion(name, version, 'esm2017');\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns a {@link Functions} instance for the given app.\n * @param app - The {@link @firebase/app#FirebaseApp} to use.\n * @param regionOrCustomDomain - one of:\n *   a) The region the callable functions are located in (ex: us-central1)\n *   b) A custom domain hosting the callable functions (ex: https://mydomain.com)\n * @public\n */\nfunction getFunctions(app = getApp(), regionOrCustomDomain = DEFAULT_REGION) {\n  // Dependencies\n  const functionsProvider = _getProvider(getModularInstance(app), FUNCTIONS_TYPE);\n  const functionsInstance = functionsProvider.getImmediate({\n    identifier: regionOrCustomDomain\n  });\n  const emulator = getDefaultEmulatorHostnameAndPort('functions');\n  if (emulator) {\n    connectFunctionsEmulator(functionsInstance, ...emulator);\n  }\n  return functionsInstance;\n}\n/**\n * Modify this instance to communicate with the Cloud Functions emulator.\n *\n * Note: this must be called before this instance has been used to do any operations.\n *\n * @param host - The emulator host (ex: localhost)\n * @param port - The emulator port (ex: 5001)\n * @public\n */\nfunction connectFunctionsEmulator(functionsInstance, host, port) {\n  connectFunctionsEmulator$1(getModularInstance(functionsInstance), host, port);\n}\n/**\n * Returns a reference to the callable HTTPS trigger with the given name.\n * @param name - The name of the trigger.\n * @public\n */\nfunction httpsCallable(functionsInstance, name, options) {\n  return httpsCallable$1(getModularInstance(functionsInstance), name, options);\n}\n/**\n * Returns a reference to the callable HTTPS trigger with the specified url.\n * @param url - The url of the trigger.\n * @public\n */\nfunction httpsCallableFromURL(functionsInstance, url, options) {\n  return httpsCallableFromURL$1(getModularInstance(functionsInstance), url, options);\n}\n\n/**\n * Cloud Functions for Firebase\n *\n * @packageDocumentation\n */\nregisterFunctions();\nexport { FunctionsError, connectFunctionsEmulator, getFunctions, httpsCallable, httpsCallableFromURL };\n","import * as i0 from '@angular/core';\nimport { InjectionToken, Optional, NgModule, makeEnvironmentProviders, NgZone, Injector } from '@angular/core';\nimport { ɵgetAllInstancesOf as _getAllInstancesOf, ɵgetDefaultInstanceOf as _getDefaultInstanceOf, VERSION, ɵAngularFireSchedulers as _AngularFireSchedulers, ɵzoneWrap as _zoneWrap } from '@angular/fire';\nimport { FirebaseApp, FirebaseApps } from '@angular/fire/app';\nimport { AppCheckInstances } from '@angular/fire/app-check';\nimport { AuthInstances } from '@angular/fire/auth';\nimport { registerVersion } from 'firebase/app';\nimport { timer, from } from 'rxjs';\nimport { concatMap, distinct } from 'rxjs/operators';\nimport { httpsCallable as httpsCallable$1 } from 'rxfire/functions';\nimport { connectFunctionsEmulator as connectFunctionsEmulator$1, getFunctions as getFunctions$1, httpsCallable as httpsCallable$2, httpsCallableFromURL as httpsCallableFromURL$1 } from 'firebase/functions';\nexport * from 'firebase/functions';\nclass Functions {\n  constructor(functions) {\n    return functions;\n  }\n}\nconst FUNCTIONS_PROVIDER_NAME = 'functions';\nclass FunctionsInstances {\n  constructor() {\n    return _getAllInstancesOf(FUNCTIONS_PROVIDER_NAME);\n  }\n}\nconst functionInstance$ = /*#__PURE__*/ /*#__PURE__*/timer(0, 300).pipe(/*#__PURE__*/concatMap(() => from(_getAllInstancesOf(FUNCTIONS_PROVIDER_NAME))), /*#__PURE__*/distinct());\nconst PROVIDED_FUNCTIONS_INSTANCES = /*#__PURE__*/new InjectionToken('angularfire2.functions-instances');\nfunction defaultFunctionsInstanceFactory(provided, defaultApp) {\n  const defaultAuth = _getDefaultInstanceOf(FUNCTIONS_PROVIDER_NAME, provided, defaultApp);\n  return defaultAuth && new Functions(defaultAuth);\n}\nfunction functionsInstanceFactory(fn) {\n  return (zone, injector) => {\n    const functions = zone.runOutsideAngular(() => fn(injector));\n    return new Functions(functions);\n  };\n}\nconst FUNCTIONS_INSTANCES_PROVIDER = {\n  provide: FunctionsInstances,\n  deps: [[/*#__PURE__*/new Optional(), PROVIDED_FUNCTIONS_INSTANCES]]\n};\nconst DEFAULT_FUNCTIONS_INSTANCE_PROVIDER = {\n  provide: Functions,\n  useFactory: defaultFunctionsInstanceFactory,\n  deps: [[/*#__PURE__*/new Optional(), PROVIDED_FUNCTIONS_INSTANCES], FirebaseApp]\n};\nlet FunctionsModule = /*#__PURE__*/(() => {\n  class FunctionsModule {\n    constructor() {\n      registerVersion('angularfire', VERSION.full, 'fn');\n    }\n    static ɵfac = function FunctionsModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || FunctionsModule)();\n    };\n    static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: FunctionsModule\n    });\n    static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      providers: [DEFAULT_FUNCTIONS_INSTANCE_PROVIDER, FUNCTIONS_INSTANCES_PROVIDER]\n    });\n  }\n  return FunctionsModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction provideFunctions(fn, ...deps) {\n  registerVersion('angularfire', VERSION.full, 'fn');\n  return makeEnvironmentProviders([DEFAULT_FUNCTIONS_INSTANCE_PROVIDER, FUNCTIONS_INSTANCES_PROVIDER, {\n    provide: PROVIDED_FUNCTIONS_INSTANCES,\n    useFactory: functionsInstanceFactory(fn),\n    multi: true,\n    deps: [NgZone, Injector, _AngularFireSchedulers, FirebaseApps,\n    // Defensively load Auth first, if provided\n    [new Optional(), AuthInstances], [new Optional(), AppCheckInstances], ...deps]\n  }]);\n}\n\n// DO NOT MODIFY, this file is autogenerated by tools/build.ts\nconst httpsCallableData = /*#__PURE__*/_zoneWrap(httpsCallable$1, true);\n\n// DO NOT MODIFY, this file is autogenerated by tools/build.ts\nconst connectFunctionsEmulator = /*#__PURE__*/_zoneWrap(connectFunctionsEmulator$1, true);\nconst getFunctions = /*#__PURE__*/_zoneWrap(getFunctions$1, true);\nconst httpsCallable = /*#__PURE__*/_zoneWrap(httpsCallable$2, true);\nconst httpsCallableFromURL = /*#__PURE__*/_zoneWrap(httpsCallableFromURL$1, true);\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Functions, FunctionsInstances, FunctionsModule, connectFunctionsEmulator, functionInstance$, getFunctions, httpsCallable, httpsCallableData, httpsCallableFromURL, provideFunctions };\n","import { Component, OnInit, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Auth, createUserWithEmailAndPassword, sendEmailVerification } from '@angular/fire/auth';\nimport {\n  Firestore,\n  doc,\n  setDoc,\n  collection,\n  getDocs,\n  query,\n  where,\n  getDoc\n} from '@angular/fire/firestore';\n// Importar funciones para envío de correo\nimport { getFunctions, httpsCallable } from '@angular/fire/functions';\nimport { Usuario } from '../../models/interfaces';\n\ninterface AccountData {\n  firstName: string;\n  lastName: string;\n  email: string;\n  phone: string;\n  username: string;\n  password: string;\n  department: string;\n  customDepartment?: string;\n  adminLevel: string;\n  customAdminLevel?: string;\n}\n\ninterface Notification {\n  id: number;\n  type: 'success' | 'error';\n  title: string;\n  message: string;\n}\n\n@Component({\n  selector: 'app-create-accounts',\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  templateUrl: './create-accounts.component.html',\n  styleUrl: './create-accounts.component.scss'\n})\nexport class CreateAccountsComponent implements OnInit {\n  private auth: Auth = inject(Auth);\n  private firestore: Firestore = inject(Firestore);\n  private router: Router = inject(Router);\n  private functions = getFunctions();\n\n  selectedType: 'worker' | 'admin' | null = null;\n  showPassword: boolean = false;\n  isLoading: boolean = false;\n  formSubmitted: boolean = false;\n  showCustomDepartment: boolean = false;\n  showCustomAdminLevel: boolean = false;\n  existingUsernames: string[] = [];\n  notifications: Notification[] = [];\n  isAdminLevelRestricted = false;\n  currentAdminLevel = '';\n\n  private notificationId = 0;\n\n  departments: string[] = [\n    'sistemas',\n    'diseño',\n    'marketing',\n    'ventas',\n    'otro'\n  ];\n\n  adminLevels: string[] = ['1', '2', '3', 'otro'];\n\n  accountData: AccountData = {\n    firstName: '',\n    lastName: '',\n    email: '',\n    phone: '',\n    username: '',\n    password: '',\n    department: '',\n    customDepartment: '',\n    adminLevel: '',\n    customAdminLevel: ''\n  };\n\n  async ngOnInit() {\n    await this.loadInitialData();\n    await this.checkAdminRestrictions();\n  }\n\n  private async loadInitialData() {\n    try {\n      await this.loadExistingUsernames();\n    } catch (error) {\n      console.error('Error loading initial data:', error);\n    }\n  }\n\n  private async loadExistingUsernames() {\n    try {\n      const usersRef = collection(this.firestore, 'Usuario');\n      const querySnapshot = await getDocs(usersRef);\n      this.existingUsernames = querySnapshot.docs\n        .map(doc => doc.data()['Username'])\n        .filter(username => username);\n    } catch (error) {\n      console.error('Error loading usernames:', error);\n    }\n  }\n\n  private async checkAdminRestrictions() {\n    try {\n      const currentUser = this.auth.currentUser;\n      if (currentUser) {\n        const userDoc = await getDoc(doc(this.firestore, 'Usuario', currentUser.uid));\n        if (userDoc.exists()) {\n          const userData = userDoc.data();\n          if (userData && userData['Rol'] === 'admin') {\n            this.currentAdminLevel = userData['NivelAdmin'];\n            \n            // Si es nivel 2 o 3, restringir las opciones\n            if (userData['NivelAdmin'] === '2' || userData['NivelAdmin'] === '3') {\n              this.isAdminLevelRestricted = true;\n              \n              // Si el usuario selecciona tipo admin, establecer nivel 2 por defecto\n              if (this.selectedType === 'admin') {\n                this.accountData.adminLevel = '2';\n              }\n            }\n          }\n        }\n      }\n    } catch (error) {\n      console.error('Error verificando restricciones de admin:', error);\n    }\n  }\n\n  // Método para obtener los niveles de admin disponibles según el nivel del creador\n  getAvailableAdminLevels(): string[] {\n    if (this.isAdminLevelRestricted) {\n      return ['2']; // Solo permite crear nivel 2\n    }\n    return this.adminLevels; // Devuelve todos los niveles\n  }\n\n  showNotification(type: 'success' | 'error', title: string, message: string) {\n    const id = ++this.notificationId;\n    this.notifications.push({ id, type, title, message });\n    // Auto-eliminar después de 5 segundos\n    setTimeout(() => {\n      this.removeNotification(id);\n    }, 5000);\n  }\n\n  removeNotification(id: number) {\n    this.notifications = this.notifications.filter(n => n.id !== id);\n  }\n\n  async onSubmit(form: NgForm): Promise<void> {\n    if (form.invalid || !this.selectedType) return;\n    this.formSubmitted = true;\n    this.isLoading = true;\n    try {\n      // Verificar disponibilidad del nombre de usuario\n      if (!(await this.isUsernameAvailable(this.accountData.username))) {\n        this.showNotification(\n          'error',\n          'Error de registro',\n          'Este nombre de usuario ya está en uso'\n        );\n        this.isLoading = false;\n        this.formSubmitted = false;\n        return;\n      }\n      \n      // Obtener el usuario actual (creador)\n      const currentUser = this.auth.currentUser;\n      if (!currentUser) {\n        this.showNotification(\n          'error',\n          'Error de autenticación',\n          'No hay una sesión activa'\n        );\n        this.isLoading = false;\n        this.formSubmitted = false;\n        return;\n      }\n      \n      // Determinar el nivel de admin según el usuario que lo crea\n      let nivelAdmin = this.accountData.adminLevel;\n      if (this.selectedType === 'admin' && this.isAdminLevelRestricted) {\n        // Si está restringido, forzar nivel 2\n        nivelAdmin = '2';\n      }\n      \n      // IMPORTANTE: Guardar la contraseña antes de crear el usuario en Authentication\n      const plainPassword = this.accountData.password;\n      \n      // Crear usuario en Authentication\n      const userCredential = await createUserWithEmailAndPassword(\n        this.auth,\n        this.accountData.email,\n        plainPassword // Usar la contraseña sin modificar\n      );\n      \n      // Enviar correo de verificación\n      await sendEmailVerification(userCredential.user);\n      \n      // Crear documento de usuario en Firestore con el createdBy y la contraseña en texto plano\n      const userData: Usuario = {\n        IdUsuario: userCredential.user.uid,\n        Nombre: `${this.accountData.firstName} ${this.accountData.lastName}`,\n        Correo: this.accountData.email,\n        Username: this.accountData.username,\n        // IMPORTANTE: Almacenar la contraseña en texto plano para permitir login con username\n        Password: plainPassword, // Guardar la misma contraseña que se usó en Firebase Auth\n        Foto_Perfil: \"\",\n        Rol: this.selectedType,\n        Telefono: this.accountData.phone || \"\",\n        Departamento: this.selectedType === 'worker' ?\n          (this.accountData.department === 'otro' ?\n            this.accountData.customDepartment || \"\" :\n            this.accountData.department) :\n          \"\",\n        NivelAdmin: this.selectedType === 'admin' ? nivelAdmin : \"\",\n        createdBy: currentUser.uid // Añadir el ID del creador\n      };\n      \n      await setDoc(doc(this.firestore, 'Usuario', userCredential.user.uid), userData);\n      \n      // Enviar correo de bienvenida con credenciales\n      await this.sendWelcomeEmail(userData);\n      \n      this.showNotification(\n        'success',\n        'Cuenta creada',\n        `La cuenta de ${this.selectedType} ha sido creada exitosamente. Se ha enviado un correo con las credenciales.`\n      );\n      \n      form.resetForm();\n      this.resetForm();\n    } catch (error: any) {\n      console.error('Error detallado:', error);\n      this.handleError(error);\n    } finally {\n      this.isLoading = false;\n      this.formSubmitted = false;\n    }\n  }\n\n  // Método para enviar correo de bienvenida\n  private async sendWelcomeEmail(user: Usuario): Promise<void> {\n    try {\n      // Opción 1: Usando Cloud Functions (recomendado)\n      const sendWelcomeEmail = httpsCallable(this.functions, 'sendWelcomeEmail');\n      await sendWelcomeEmail({\n        email: user.Correo,\n        name: user.Nombre,\n        username: user.Username,\n        password: user.Password, // La contraseña se enviará en texto claro solo en el correo\n        role: user.Rol\n      });\n\n      console.log('Correo de bienvenida enviado exitosamente');\n    } catch (error) {\n      console.error('Error enviando correo de bienvenida:', error);\n      // No interrumpir el flujo si el correo falla\n    }\n  }\n\n  private handleError(error: any): void {\n    let message = 'Error al crear la cuenta';\n    let title = 'Error';\n    if (error.code === 'auth/email-already-in-use') {\n      message = 'Este correo electrónico ya está registrado';\n      title = 'Error de correo';\n    } else if (error.code === 'auth/invalid-email') {\n      message = 'Correo electrónico inválido';\n      title = 'Error de formato';\n    } else if (error.code === 'auth/operation-not-allowed') {\n      message = 'Operación no permitida';\n      title = 'Error de permisos';\n    } else if (error.code === 'auth/weak-password') {\n      message = 'La contraseña es demasiado débil';\n      title = 'Error de contraseña';\n    }\n    this.showNotification('error', title, message);\n  }\n\n  private async isUsernameAvailable(username: string): Promise<boolean> {\n    try {\n      const userQuery = query(\n        collection(this.firestore, 'Usuario'),\n        where('Username', '==', username)\n      );\n      const querySnapshot = await getDocs(userQuery);\n      return querySnapshot.empty;\n    } catch (error) {\n      console.error('Error checking username:', error);\n      return false;\n    }\n  }\n\n  togglePasswordVisibility(): void {\n    this.showPassword = !this.showPassword;\n  }\n\n  selectAccountType(type: 'worker' | 'admin'): void {\n    this.selectedType = type;\n    this.formSubmitted = false;\n    this.resetForm();\n    \n    if (type === 'worker') {\n      this.accountData.adminLevel = '';\n      this.accountData.customAdminLevel = '';\n    } else {\n      this.accountData.department = '';\n      this.accountData.customDepartment = '';\n      \n      // Si hay restricciones de nivel de admin, aplicarlas\n      if (this.isAdminLevelRestricted) {\n        this.accountData.adminLevel = '2';\n      }\n    }\n  }\n\n  resetForm(): void {\n    this.accountData = {\n      firstName: '',\n      lastName: '',\n      email: '',\n      phone: '',\n      username: '',\n      password: '',\n      department: '',\n      customDepartment: '',\n      adminLevel: '',\n      customAdminLevel: ''\n    };\n    this.showCustomDepartment = false;\n    this.showCustomAdminLevel = false;\n    this.formSubmitted = false;\n  }\n\n  onDepartmentChange(event: any): void {\n    this.showCustomDepartment = event.target.value === 'otro';\n  }\n\n  onAdminLevelChange(event: any): void {\n    this.showCustomAdminLevel = event.target.value === 'otro' && !this.isAdminLevelRestricted;\n  }\n\n  goBack(): void {\n    this.router.navigate(['/admin1']);\n  }\n}","<div class=\"container\">\n  <!-- Sistema de notificaciones -->\n  <div class=\"notifications-container\">\n    <div *ngFor=\"let notification of notifications\"\n      class=\"notification\"\n      [ngClass]=\"notification.type\">\n      <div class=\"notification-icon\">\n        <svg *ngIf=\"notification.type === 'success'\"\n          xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n          <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"/>\n        </svg>\n        <svg *ngIf=\"notification.type === 'error'\" xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 24 24\" fill=\"currentColor\">\n          <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-2h2v2zm0-4h-2V7h2v6z\"/>\n        </svg>\n      </div>\n      <div class=\"notification-content\">\n        <div class=\"notification-title\">{{ notification.title }}</div>\n        <div class=\"notification-message\">{{ notification.message }}</div>\n      </div>\n      <button class=\"notification-close\" (click)=\"removeNotification(notification.id)\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\n          <path d=\"M18 6L6 18M6 6l12 12\"></path>\n        </svg>\n      </button>\n    </div>\n  </div>\n\n  <!-- Botón de retroceso -->\n  <button class=\"btn-back\" (click)=\"goBack()\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n      <line x1=\"19\" y1=\"12\" x2=\"5\" y2=\"12\"></line>\n      <polyline points=\"12 19 5 12 12 5\"></polyline>\n    </svg>\n    Atrás\n  </button>\n\n  <div class=\"dashboard-card\">\n    <!-- Encabezado -->\n    <div class=\"card-header\">\n      <div class=\"header-content\">\n        <img src=\"./icons/persona.png\" alt=\"Admin Dashboard\" class=\"dashboard-logo\"/>\n        <div class=\"header-text\">\n          <h1>Panel de Administración</h1>\n          <p class=\"subtitle\">Gestión de Cuentas de Usuario</p>\n        </div>\n      </div>\n    </div>\n\n    <!-- Contenido Principal -->\n    <div class=\"card-body\">\n      <!-- Selector de Tipo de Cuenta -->\n      <div class=\"account-type-selector\">\n        <h2>Seleccione el tipo de cuenta a crear</h2>\n        <div class=\"type-options\">\n          <div class=\"type-card\" [class.selected]=\"selectedType === 'worker'\"\n            (click)=\"selectAccountType('worker')\">\n            <div class=\"icon-container\">\n              <img src=\"./icons/empleadoC.png\" alt=\"Trabajador\" class=\"type-icon\"/>\n            </div>\n            <h3>Cuenta de Trabajador</h3>\n            <p>Crear cuenta para nuevo empleado</p>\n          </div>\n          <div class=\"type-card\" [class.selected]=\"selectedType === 'admin'\"\n            (click)=\"selectAccountType('admin')\">\n            <div class=\"icon-container\">\n              <img src=\"./icons/agregar.png\" alt=\"Administrador\" class=\"type-icon\"/>\n            </div>\n            <h3>Cuenta de Administrador</h3>\n            <p>Crear cuenta con privilegios administrativos</p>\n          </div>\n        </div>\n      </div>\n\n      <!-- Formulario de Creación -->\n      <form #createAccountForm=\"ngForm\"\n        (ngSubmit)=\"onSubmit(createAccountForm)\" *ngIf=\"selectedType\">\n        <h2>{{ selectedType === 'worker' ? 'Crear Cuenta de Trabajador' : 'Crear Cuenta de Administrador' }}</h2>\n\n        <!-- Información Personal -->\n        <div class=\"form-section\">\n          <h3>Información Personal</h3>\n          <div class=\"form-grid\">\n            <div class=\"form-group\">\n              <label for=\"firstName\">Nombre(s)</label>\n              <input\n                type=\"text\"\n                id=\"firstName\"\n                name=\"firstName\"\n                [(ngModel)]=\"accountData.firstName\"\n                required\n                #firstNameInput=\"ngModel\"\n                placeholder=\"Ingrese nombre(s)\"\n              />\n              <div class=\"error-message\" *ngIf=\"firstNameInput.invalid && firstNameInput.touched\">\n                El nombre es requerido\n              </div>\n            </div>\n\n            <div class=\"form-group\">\n              <label for=\"lastName\">Apellidos</label>\n              <input\n                type=\"text\"\n                id=\"lastName\"\n                name=\"lastName\"\n                [(ngModel)]=\"accountData.lastName\"\n                required\n                #lastNameInput=\"ngModel\"\n                placeholder=\"Ingrese apellidos\"\n              />\n              <div class=\"error-message\" *ngIf=\"lastNameInput.invalid && lastNameInput.touched\">\n                Los apellidos son requeridos\n              </div>\n            </div>\n\n            <div class=\"form-group\">\n              <label for=\"email\">Correo Electrónico</label>\n              <input\n                type=\"email\"\n                id=\"email\"\n                name=\"email\"\n                [(ngModel)]=\"accountData.email\"\n                required\n                email\n                #emailInput=\"ngModel\"\n                placeholder=\"correo@ejemplo.com\"\n              />\n              <div class=\"error-message\" *ngIf=\"emailInput.invalid && emailInput.touched\">\n                Ingrese un correo electrónico válido\n              </div>\n            </div>\n\n            <div class=\"form-group\">\n              <label for=\"phone\">Teléfono</label>\n              <input\n                type=\"tel\"\n                id=\"phone\"\n                name=\"phone\"\n                [(ngModel)]=\"accountData.phone\"\n                pattern=\"[0-9]{10}\"\n                #phoneInput=\"ngModel\"\n                placeholder=\"Número a 10 dígitos\"\n              />\n              <div class=\"error-message\" *ngIf=\"phoneInput.invalid && phoneInput.touched\">\n                Ingrese un número válido de 10 dígitos\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- Información de Cuenta -->\n        <div class=\"form-section\">\n          <h3>Información de Acceso</h3>\n          <div class=\"form-grid\">\n            <div class=\"form-group\">\n              <label for=\"username\">Nombre de Usuario</label>\n              <input\n                type=\"text\"\n                id=\"username\"\n                name=\"username\"\n                [(ngModel)]=\"accountData.username\"\n                required\n                #usernameInput=\"ngModel\"\n                placeholder=\"Nombre de usuario único\"\n              />\n              <div class=\"error-message\" *ngIf=\"usernameInput.invalid && usernameInput.touched\">\n                El nombre de usuario es requerido\n              </div>\n            </div>\n\n            <div class=\"form-group\">\n              <label for=\"password\">Contraseña</label>\n              <div class=\"password-input\">\n                <input\n                  [type]=\"showPassword ? 'text' : 'password'\"\n                  id=\"password\"\n                  name=\"password\"\n                  [(ngModel)]=\"accountData.password\"\n                  required\n                  pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[A-Za-z\\d]{8,}$\"\n                  #passwordInput=\"ngModel\"\n                  placeholder=\"••••••••\"\n                />\n                <button\n                  type=\"button\"\n                  class=\"toggle-password\"\n                  (click)=\"togglePasswordVisibility()\"\n                >\n                  <img [src]=\"showPassword ? './icons/ShowP1.png' : './icons/ShowP2.png'\" alt=\"Toggle password\"/>\n                </button>\n              </div>\n              <div class=\"error-message\" *ngIf=\"passwordInput.invalid && passwordInput.touched\">\n                La contraseña debe tener al menos 8 caracteres, incluir mayúsculas, minúsculas y números\n              </div>\n            </div>\n\n            <!-- Campos específicos para Trabajador -->\n            <div class=\"form-group\" *ngIf=\"selectedType === 'worker'\">\n              <label for=\"department\">Departamento</label>\n              <select\n                id=\"department\"\n                name=\"department\"\n                [(ngModel)]=\"accountData.department\"\n                (change)=\"onDepartmentChange($event)\"\n                required\n                #departmentInput=\"ngModel\"\n              >\n                <option value=\"\">Seleccione un departamento</option>\n                <option *ngFor=\"let dept of departments\" [value]=\"dept\">\n                  {{dept === 'otro' ? 'Otro departamento' : dept}}\n                </option>\n              </select>\n              <div class=\"error-message\" *ngIf=\"departmentInput.invalid && departmentInput.touched\">\n                Seleccione un departamento\n              </div>\n              \n              <!-- Campo para departamento personalizado -->\n              <div *ngIf=\"showCustomDepartment\" class=\"custom-field\">\n                <input\n                  type=\"text\"\n                  id=\"customDepartment\"\n                  name=\"customDepartment\"\n                  [(ngModel)]=\"accountData.customDepartment\"\n                  required\n                  placeholder=\"Ingrese el nuevo departamento\"\n                />\n              </div>\n            </div>\n\n            <!-- Campos específicos para Administrador -->\n            <div class=\"form-group\" *ngIf=\"selectedType === 'admin'\">\n              <label for=\"adminLevel\">Nivel de Administración</label>\n              <select\n                id=\"adminLevel\"\n                name=\"adminLevel\"\n                [(ngModel)]=\"accountData.adminLevel\"\n                (change)=\"onAdminLevelChange($event)\"\n                required\n                #adminLevelInput=\"ngModel\"\n                [disabled]=\"isAdminLevelRestricted\"\n              >\n                <option value=\"\">Seleccione un nivel</option>\n                <option *ngFor=\"let level of getAvailableAdminLevels()\" [value]=\"level\">\n                  {{level === 'otro' ? 'Otro nivel' : 'Nivel ' + level}}\n                </option>\n              </select>\n              <div class=\"error-message\" *ngIf=\"adminLevelInput.invalid && adminLevelInput.touched\">\n                Seleccione un nivel de administración\n              </div>\n              <div *ngIf=\"isAdminLevelRestricted\" class=\"info-message\">\n                Como administrador nivel {{ currentAdminLevel }}, solo puede crear administradores de nivel 2.\n              </div>\n              \n              <!-- Campo para nivel de administración personalizado -->\n              <div *ngIf=\"showCustomAdminLevel && !isAdminLevelRestricted\" class=\"custom-field\">\n                <input\n                  type=\"text\"\n                  id=\"customAdminLevel\"\n                  name=\"customAdminLevel\"\n                  [(ngModel)]=\"accountData.customAdminLevel\"\n                  required\n                  placeholder=\"Ingrese el nuevo nivel de administración\"\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- Botones de Acción -->\n        <div class=\"form-actions\">\n          <button type=\"button\" class=\"btn-secondary\" (click)=\"resetForm()\">\n            Cancelar\n          </button>\n          <button\n            type=\"submit\"\n            class=\"btn-primary\"\n            [disabled]=\"createAccountForm.invalid || isLoading || formSubmitted\"\n          >\n            <span *ngIf=\"!isLoading\">Crear Cuenta</span>\n            <span *ngIf=\"isLoading\">Creando cuenta...</span>\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>"],"mappings":"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","names":["LONG_TYPE","UNSIGNED_LONG_TYPE","mapValues","o","f","result","key","encode","data","x","decode","json","value","FUNCTIONS_TYPE","errorCodeMap","FunctionsError","_FunctionsError","FirebaseError","code","message","details","codeForHTTPStatus","status","_errorForResponse","bodyJSON","description","errorJSON","ContextProvider","app","authProvider","messagingProvider","appCheckProvider","_isFirebaseServerApp","auth","messaging","appCheck","__async","token","limitedUseAppCheckTokens","authToken","messagingToken","appCheckToken","DEFAULT_REGION","responseLineRE","failAfter","millis","timer","_","reject","FunctionsService","regionOrCustomDomain","fetchImpl","args","resolve","url","name","projectId","connectFunctionsEmulator$1","functionsInstance","host","port","httpsCallable$1","options","callable","call","stream","postJSON","url","body","headers","fetchImpl","__async","response","json","makeAuthHeaders","functionsInstance","options","context","call","name","data","callAtURL","encode","timeout","failAfterHandle","failAfter","FunctionsError","error","_errorForResponse","responseData","decode","stream","streamAtURL","_a","e","resultResolver","resultRejecter","resultPromise","resolve","reject","reader","rstream","createResponseStream","rreader","value","done","signal","processLine","line","controller","match","responseLineRE","jsonData","decoder","currentText","pump","lines","functionsError","version","AUTH_INTERNAL_NAME","APP_CHECK_INTERNAL_NAME","MESSAGING_INTERNAL_NAME","registerFunctions","variant","factory","container","regionOrCustomDomain","app","authProvider","messagingProvider","appCheckProvider","FunctionsService","_registerComponent","Component","FUNCTIONS_TYPE","registerVersion","getFunctions","getApp","DEFAULT_REGION","_getProvider","getModularInstance","emulator","getDefaultEmulatorHostnameAndPort","connectFunctionsEmulator","host","port","connectFunctionsEmulator$1","httpsCallable","httpsCallable$1","registerFunctions","getFunctions","ɵzoneWrap","httpsCallable","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵtemplate","CreateAccountsComponent_div_2__svg_svg_2_Template","CreateAccountsComponent_div_2__svg_svg_3_Template","ɵɵtext","ɵɵlistener","notification_r2","ɵɵrestoreView","_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","removeNotification","id","ɵɵproperty","type","ɵɵadvance","ɵɵtextInterpolate","title","message","dept_r7","ɵɵtextInterpolate1","ɵɵtwoWayListener","$event","_r8","i0","ɵɵtwoWayBindingSet","accountData","customDepartment","ɵɵtwoWayProperty","_r6","department","onDepartmentChange","CreateAccountsComponent_form_36_div_51_option_7_Template","CreateAccountsComponent_form_36_div_51_div_8_Template","CreateAccountsComponent_form_36_div_51_div_9_Template","departments","departmentInput_r9","invalid","touched","showCustomDepartment","level_r11","currentAdminLevel","_r12","customAdminLevel","_r10","adminLevel","onAdminLevelChange","CreateAccountsComponent_form_36_div_52_option_7_Template","CreateAccountsComponent_form_36_div_52_div_8_Template","CreateAccountsComponent_form_36_div_52_div_9_Template","CreateAccountsComponent_form_36_div_52_div_10_Template","isAdminLevelRestricted","getAvailableAdminLevels","adminLevelInput_r13","showCustomAdminLevel","_r4","createAccountForm_r5","ɵɵreference","onSubmit","firstName","CreateAccountsComponent_form_36_div_13_Template","lastName","CreateAccountsComponent_form_36_div_19_Template","email","CreateAccountsComponent_form_36_div_25_Template","phone","CreateAccountsComponent_form_36_div_31_Template","username","CreateAccountsComponent_form_36_div_41_Template","password","togglePasswordVisibility","CreateAccountsComponent_form_36_div_50_Template","CreateAccountsComponent_form_36_div_51_Template","CreateAccountsComponent_form_36_div_52_Template","resetForm","CreateAccountsComponent_form_36_span_57_Template","CreateAccountsComponent_form_36_span_58_Template","selectedType","firstNameInput_r14","lastNameInput_r15","emailInput_r16","phoneInput_r17","usernameInput_r18","showPassword","ɵɵsanitizeUrl","passwordInput_r19","isLoading","formSubmitted","CreateAccountsComponent","auth","inject","Auth","firestore","Firestore","router","Router","functions","getFunctions","existingUsernames","notifications","notificationId","adminLevels","ngOnInit","__async","loadInitialData","checkAdminRestrictions","loadExistingUsernames","error","console","usersRef","collection","querySnapshot","getDocs","docs","map","doc","data","filter","currentUser","userDoc","getDoc","uid","exists","userData","showNotification","push","setTimeout","n","form","isUsernameAvailable","nivelAdmin","plainPassword","userCredential","createUserWithEmailAndPassword","sendEmailVerification","user","IdUsuario","Nombre","Correo","Username","Password","Foto_Perfil","Rol","Telefono","Departamento","NivelAdmin","createdBy","setDoc","sendWelcomeEmail","handleError","httpsCallable","name","role","log","code","userQuery","query","where","empty","selectAccountType","event","target","value","goBack","navigate","selectors","decls","vars","consts","template","rf","ctx","CreateAccountsComponent_div_2_Template","CreateAccountsComponent_form_36_Template","ɵɵclassProp","CommonModule","NgClass","NgForOf","NgIf","FormsModule","ɵNgNoValidate","NgSelectOption","ɵNgSelectMultipleOption","DefaultValueAccessor","SelectControlValueAccessor","NgControlStatus","NgControlStatusGroup","RequiredValidator","PatternValidator","EmailValidator","NgModel","NgForm","styles"],"x_google_ignoreList":[0,1]}